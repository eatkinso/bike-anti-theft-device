ARM GAS  /tmp/ccc4IGxE.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"btgps.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata.get_gps.str1.4,"aMS",%progbits,1
  16              		.align	2
  17              	.LC0:
  18 0000 24505352 		.ascii	"$PSRF103,00,01,10,00,\015\012\000"
  18      46313033 
  18      2C30302C 
  18      30312C31 
  18      302C3030 
  19              		.section	.text.get_gps,"ax",%progbits
  20              		.align	1
  21              		.global	get_gps
  22              		.arch armv7e-m
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu softvfp
  28              	get_gps:
  29              	.LVL0:
  30              	.LFB972:
  31              		.file 1 "Core/Src/btgps.c"
   1:Core/Src/btgps.c ****  
   2:Core/Src/btgps.c **** /**
   3:Core/Src/btgps.c ****  * @file gps.c
   4:Core/Src/btgps.c ****  * @author Elizabeth Atkinson (eatkinso@illinois.edu)
   5:Core/Src/btgps.c ****  * @brief GPS NMEA parser
   6:Core/Src/btgps.c ****  * @version 0.1
   7:Core/Src/btgps.c ****  * @date 2022-04-19
   8:Core/Src/btgps.c ****  *
   9:Core/Src/btgps.c ****  */
  10:Core/Src/btgps.c **** 
  11:Core/Src/btgps.c **** #include "btgps.h"
  12:Core/Src/btgps.c **** #include "main.h"
  13:Core/Src/btgps.c **** #include <math.h>
  14:Core/Src/btgps.c **** 
  15:Core/Src/btgps.c **** /**
  16:Core/Src/btgps.c ****   * @brief Query the GPS for a GPGGA packet (UTC time, lat, long).
  17:Core/Src/btgps.c ****   * @param h.uart UART handle for the GPS
  18:Core/Src/btgps.c ****   * @param msgbuf pointer to the struct to store the final message
  19:Core/Src/btgps.c ****   * @retval 0 on success, 1 on failure
  20:Core/Src/btgps.c ****   */
  21:Core/Src/btgps.c **** int get_gps(UART_HandleTypeDef * huart, nmea_gpgga_t * msgbuf){
  32              		.loc 1 21 63 view -0
  33              		.cfi_startproc
ARM GAS  /tmp/ccc4IGxE.s 			page 2


  34              		@ args = 0, pretend = 0, frame = 128
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		.loc 1 21 63 is_stmt 0 view .LVU1
  37 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 20
  40              		.cfi_offset 4, -20
  41              		.cfi_offset 5, -16
  42              		.cfi_offset 6, -12
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 A1B0     		sub	sp, sp, #132
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 152
  48 0004 0546     		mov	r5, r0
  49 0006 0E46     		mov	r6, r1
  22:Core/Src/btgps.c **** 	char raw[100] = {"0"};
  50              		.loc 1 22 2 is_stmt 1 view .LVU2
  51              		.loc 1 22 7 is_stmt 0 view .LVU3
  52 0008 3023     		movs	r3, #48
  53 000a 0793     		str	r3, [sp, #28]
  54 000c 6022     		movs	r2, #96
  55 000e 0021     		movs	r1, #0
  56              	.LVL1:
  57              		.loc 1 22 7 view .LVU4
  58 0010 08A8     		add	r0, sp, #32
  59              	.LVL2:
  60              		.loc 1 22 7 view .LVU5
  61 0012 FFF7FEFF 		bl	memset
  62              	.LVL3:
  23:Core/Src/btgps.c **** 	typedef enum nmea_field{
  63              		.loc 1 23 2 is_stmt 1 view .LVU6
  24:Core/Src/btgps.c **** 		header,
  25:Core/Src/btgps.c **** 		utc,
  26:Core/Src/btgps.c **** 		lat,
  27:Core/Src/btgps.c **** 		ns,
  28:Core/Src/btgps.c **** 		lontd,
  29:Core/Src/btgps.c **** 		ew,
  30:Core/Src/btgps.c **** 		pfix,
  31:Core/Src/btgps.c **** 		sat,
  32:Core/Src/btgps.c **** 		nomsg,
  33:Core/Src/btgps.c **** 		msgdone
  34:Core/Src/btgps.c **** 	} nmea_field_t;
  35:Core/Src/btgps.c **** 	nmea_field_t next_field=nomsg;
  64              		.loc 1 35 2 view .LVU7
  36:Core/Src/btgps.c **** 	int field_i = 0;
  65              		.loc 1 36 2 view .LVU8
  37:Core/Src/btgps.c **** 	// query the GGA message from the GPS.
  38:Core/Src/btgps.c **** 	char queryGGA[]= "$PSRF103,00,01,10,00,\r\n";
  66              		.loc 1 38 2 view .LVU9
  67              		.loc 1 38 7 is_stmt 0 view .LVU10
  68 0016 01AC     		add	r4, sp, #4
  69 0018 644F     		ldr	r7, .L29
  70 001a 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
  71 001c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  72 001e 97E80300 		ldm	r7, {r0, r1}
  73 0022 84E80300 		stm	r4, {r0, r1}
ARM GAS  /tmp/ccc4IGxE.s 			page 3


  39:Core/Src/btgps.c **** 	HAL_UART_Transmit(huart, (uint8_t *)queryGGA, 25, 100);
  74              		.loc 1 39 2 is_stmt 1 view .LVU11
  75 0026 6423     		movs	r3, #100
  76 0028 1922     		movs	r2, #25
  77 002a 01A9     		add	r1, sp, #4
  78 002c 2846     		mov	r0, r5
  79 002e FFF7FEFF 		bl	HAL_UART_Transmit
  80              	.LVL4:
  40:Core/Src/btgps.c **** 	// Receive bytes one-by-one into the raw buffer.
  41:Core/Src/btgps.c **** 	for (int i =0; i<90; i++){
  81              		.loc 1 41 2 view .LVU12
  82              	.LBB2:
  83              		.loc 1 41 7 view .LVU13
  84              		.loc 1 41 11 is_stmt 0 view .LVU14
  85 0032 0024     		movs	r4, #0
  86              		.loc 1 41 2 view .LVU15
  87 0034 08E0     		b	.L2
  88              	.LVL5:
  89              	.L3:
  42:Core/Src/btgps.c **** 		HAL_UART_Receive(huart, (uint8_t *)&raw[i], 1, 1000);
  90              		.loc 1 42 3 is_stmt 1 discriminator 3 view .LVU16
  91 0036 4FF47A73 		mov	r3, #1000
  92 003a 0122     		movs	r2, #1
  93 003c 07A9     		add	r1, sp, #28
  94 003e 2144     		add	r1, r1, r4
  95 0040 2846     		mov	r0, r5
  96 0042 FFF7FEFF 		bl	HAL_UART_Receive
  97              	.LVL6:
  41:Core/Src/btgps.c **** 		HAL_UART_Receive(huart, (uint8_t *)&raw[i], 1, 1000);
  98              		.loc 1 41 23 discriminator 3 view .LVU17
  41:Core/Src/btgps.c **** 		HAL_UART_Receive(huart, (uint8_t *)&raw[i], 1, 1000);
  99              		.loc 1 41 24 is_stmt 0 discriminator 3 view .LVU18
 100 0046 0134     		adds	r4, r4, #1
 101              	.LVL7:
 102              	.L2:
  41:Core/Src/btgps.c **** 		HAL_UART_Receive(huart, (uint8_t *)&raw[i], 1, 1000);
 103              		.loc 1 41 17 is_stmt 1 discriminator 1 view .LVU19
  41:Core/Src/btgps.c **** 		HAL_UART_Receive(huart, (uint8_t *)&raw[i], 1, 1000);
 104              		.loc 1 41 2 is_stmt 0 discriminator 1 view .LVU20
 105 0048 592C     		cmp	r4, #89
 106 004a F4DD     		ble	.L3
 107              	.LBE2:
 108              	.LBB3:
  43:Core/Src/btgps.c **** 	  }
  44:Core/Src/btgps.c **** 	// Process the raw message buffer to get the message.
  45:Core/Src/btgps.c **** 	for (int i=0; i<90; i++){
 109              		.loc 1 45 11 view .LVU21
 110 004c 0023     		movs	r3, #0
 111              	.LBE3:
  36:Core/Src/btgps.c **** 	// query the GGA message from the GPS.
 112              		.loc 1 36 6 view .LVU22
 113 004e 1846     		mov	r0, r3
  35:Core/Src/btgps.c **** 	int field_i = 0;
 114              		.loc 1 35 15 view .LVU23
 115 0050 0822     		movs	r2, #8
 116 0052 07E0     		b	.L4
 117              	.LVL8:
ARM GAS  /tmp/ccc4IGxE.s 			page 4


 118              	.L6:
 119              	.LBB4:
  46:Core/Src/btgps.c **** 		switch(next_field){
  47:Core/Src/btgps.c **** 			case nomsg	:
  48:Core/Src/btgps.c **** 				// check for the $GPGGA that starts the message.
  49:Core/Src/btgps.c **** 				if ((raw[i]=='$')&&(raw[i+1]=='G')&&(raw[i+2]=='P')&&(raw[i+3]=='G')&&(raw[i+4]=='G')&&(raw[i+5
 120              		.loc 1 49 5 is_stmt 1 view .LVU24
 121              		.loc 1 49 13 is_stmt 0 view .LVU25
 122 0054 03F18001 		add	r1, r3, #128
 123 0058 6944     		add	r1, sp, r1
 124 005a 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 125              		.loc 1 49 8 view .LVU26
 126 005e 2429     		cmp	r1, #36
 127 0060 1AD0     		beq	.L27
 128              	.LVL9:
 129              	.L5:
  45:Core/Src/btgps.c **** 		switch(next_field){
 130              		.loc 1 45 22 is_stmt 1 discriminator 2 view .LVU27
  45:Core/Src/btgps.c **** 		switch(next_field){
 131              		.loc 1 45 23 is_stmt 0 discriminator 2 view .LVU28
 132 0062 0133     		adds	r3, r3, #1
 133              	.LVL10:
 134              	.L4:
  45:Core/Src/btgps.c **** 		switch(next_field){
 135              		.loc 1 45 16 is_stmt 1 discriminator 1 view .LVU29
  45:Core/Src/btgps.c **** 		switch(next_field){
 136              		.loc 1 45 2 is_stmt 0 discriminator 1 view .LVU30
 137 0064 592B     		cmp	r3, #89
 138 0066 00F39E80 		bgt	.L28
  46:Core/Src/btgps.c **** 		switch(next_field){
 139              		.loc 1 46 3 is_stmt 1 view .LVU31
 140 006a 082A     		cmp	r2, #8
 141 006c F9D8     		bhi	.L5
 142 006e 01A1     		adr	r1, .L7
 143 0070 51F822F0 		ldr	pc, [r1, r2, lsl #2]
 144              		.p2align 2
 145              	.L7:
 146 0074 E3000000 		.word	.L15+1
 147 0078 F7000000 		.word	.L14+1
 148 007c 0B010000 		.word	.L13+1
 149 0080 21010000 		.word	.L12+1
 150 0084 33010000 		.word	.L11+1
 151 0088 49010000 		.word	.L10+1
 152 008c 5B010000 		.word	.L9+1
 153 0090 6D010000 		.word	.L8+1
 154 0094 55000000 		.word	.L6+1
 155              		.p2align 1
 156              	.L27:
 157              		.loc 1 49 28 is_stmt 0 discriminator 1 view .LVU32
 158 0098 03F18101 		add	r1, r3, #129
 159 009c 6944     		add	r1, sp, r1
 160 009e 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 161              		.loc 1 49 22 discriminator 1 view .LVU33
 162 00a2 4729     		cmp	r1, #71
 163 00a4 DDD1     		bne	.L5
 164              		.loc 1 49 45 discriminator 2 view .LVU34
 165 00a6 03F18201 		add	r1, r3, #130
ARM GAS  /tmp/ccc4IGxE.s 			page 5


 166 00aa 6944     		add	r1, sp, r1
 167 00ac 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 168              		.loc 1 49 39 discriminator 2 view .LVU35
 169 00b0 5029     		cmp	r1, #80
 170 00b2 D6D1     		bne	.L5
 171              		.loc 1 49 62 discriminator 3 view .LVU36
 172 00b4 03F18301 		add	r1, r3, #131
 173 00b8 6944     		add	r1, sp, r1
 174 00ba 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 175              		.loc 1 49 56 discriminator 3 view .LVU37
 176 00be 4729     		cmp	r1, #71
 177 00c0 CFD1     		bne	.L5
 178              		.loc 1 49 79 discriminator 4 view .LVU38
 179 00c2 03F18401 		add	r1, r3, #132
 180 00c6 6944     		add	r1, sp, r1
 181 00c8 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 182              		.loc 1 49 73 discriminator 4 view .LVU39
 183 00cc 4729     		cmp	r1, #71
 184 00ce C8D1     		bne	.L5
 185              		.loc 1 49 96 discriminator 5 view .LVU40
 186 00d0 03F18501 		add	r1, r3, #133
 187 00d4 6944     		add	r1, sp, r1
 188 00d6 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 189              		.loc 1 49 90 discriminator 5 view .LVU41
 190 00da 4129     		cmp	r1, #65
 191 00dc C1D1     		bne	.L5
  50:Core/Src/btgps.c **** 					next_field=header; // increment to the next field
 192              		.loc 1 50 16 view .LVU42
 193 00de 0022     		movs	r2, #0
 194              	.LVL11:
 195              		.loc 1 50 16 view .LVU43
 196 00e0 BFE7     		b	.L5
 197              	.LVL12:
 198              	.L15:
  51:Core/Src/btgps.c **** 				}
  52:Core/Src/btgps.c **** 				break;
  53:Core/Src/btgps.c **** 			case header :
  54:Core/Src/btgps.c **** 				if (raw[i] == ','){
 199              		.loc 1 54 5 is_stmt 1 view .LVU44
 200              		.loc 1 54 12 is_stmt 0 view .LVU45
 201 00e2 03F18001 		add	r1, r3, #128
 202 00e6 6944     		add	r1, sp, r1
 203 00e8 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 204              		.loc 1 54 8 view .LVU46
 205 00ec 2C29     		cmp	r1, #44
 206 00ee B8D1     		bne	.L5
  55:Core/Src/btgps.c **** 					next_field=utc; // increment to the next field on the delimiter comma
  56:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 207              		.loc 1 56 14 view .LVU47
 208 00f0 0020     		movs	r0, #0
 209              	.LVL13:
  55:Core/Src/btgps.c **** 					next_field=utc; // increment to the next field on the delimiter comma
 210              		.loc 1 55 16 view .LVU48
 211 00f2 0122     		movs	r2, #1
 212              	.LVL14:
  55:Core/Src/btgps.c **** 					next_field=utc; // increment to the next field on the delimiter comma
 213              		.loc 1 55 16 view .LVU49
ARM GAS  /tmp/ccc4IGxE.s 			page 6


 214 00f4 B5E7     		b	.L5
 215              	.LVL15:
 216              	.L14:
  57:Core/Src/btgps.c **** 					break;
  58:Core/Src/btgps.c **** 				}
  59:Core/Src/btgps.c **** 				break;
  60:Core/Src/btgps.c **** 			case utc	:
  61:Core/Src/btgps.c **** 				if (raw[i] == ','){
 217              		.loc 1 61 5 is_stmt 1 view .LVU50
 218              		.loc 1 61 12 is_stmt 0 view .LVU51
 219 00f6 03F18001 		add	r1, r3, #128
 220 00fa 6944     		add	r1, sp, r1
 221 00fc 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 222              		.loc 1 61 8 view .LVU52
 223 0100 2C29     		cmp	r1, #44
 224 0102 3DD0     		beq	.L19
  62:Core/Src/btgps.c **** 					next_field=lat; // increment to the next field on the delimiter comma
  63:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
  64:Core/Src/btgps.c **** 					break;
  65:Core/Src/btgps.c **** 				}
  66:Core/Src/btgps.c **** 				msgbuf->UTC_Time[field_i] = raw[i];
 225              		.loc 1 66 5 is_stmt 1 view .LVU53
 226              		.loc 1 66 31 is_stmt 0 view .LVU54
 227 0104 3154     		strb	r1, [r6, r0]
  67:Core/Src/btgps.c **** 				field_i ++;
 228              		.loc 1 67 5 is_stmt 1 view .LVU55
 229              		.loc 1 67 13 is_stmt 0 view .LVU56
 230 0106 0130     		adds	r0, r0, #1
 231              	.LVL16:
  68:Core/Src/btgps.c **** 				break;
 232              		.loc 1 68 5 is_stmt 1 view .LVU57
 233 0108 ABE7     		b	.L5
 234              	.L13:
  69:Core/Src/btgps.c **** 			case lat	:
  70:Core/Src/btgps.c **** 				if (raw[i] == ','){
 235              		.loc 1 70 5 view .LVU58
 236              		.loc 1 70 12 is_stmt 0 view .LVU59
 237 010a 03F18001 		add	r1, r3, #128
 238 010e 6944     		add	r1, sp, r1
 239 0110 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 240              		.loc 1 70 8 view .LVU60
 241 0114 2C29     		cmp	r1, #44
 242 0116 36D0     		beq	.L20
  71:Core/Src/btgps.c **** 					next_field=ns; // increment to the next field on the delimiter comma
  72:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
  73:Core/Src/btgps.c **** 					break;
  74:Core/Src/btgps.c **** 				}
  75:Core/Src/btgps.c **** 				msgbuf->latitude[field_i] = raw[i];
 243              		.loc 1 75 5 is_stmt 1 view .LVU61
 244              		.loc 1 75 31 is_stmt 0 view .LVU62
 245 0118 3418     		adds	r4, r6, r0
 246 011a A172     		strb	r1, [r4, #10]
  76:Core/Src/btgps.c **** 				field_i ++;
 247              		.loc 1 76 5 is_stmt 1 view .LVU63
 248              		.loc 1 76 13 is_stmt 0 view .LVU64
 249 011c 0130     		adds	r0, r0, #1
 250              	.LVL17:
ARM GAS  /tmp/ccc4IGxE.s 			page 7


  77:Core/Src/btgps.c **** 				break;
 251              		.loc 1 77 5 is_stmt 1 view .LVU65
 252 011e A0E7     		b	.L5
 253              	.L12:
  78:Core/Src/btgps.c **** 			case ns		:
  79:Core/Src/btgps.c **** 				if (raw[i] == ','){
 254              		.loc 1 79 5 view .LVU66
 255              		.loc 1 79 12 is_stmt 0 view .LVU67
 256 0120 03F18001 		add	r1, r3, #128
 257 0124 6944     		add	r1, sp, r1
 258 0126 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 259              		.loc 1 79 8 view .LVU68
 260 012a 2C29     		cmp	r1, #44
 261 012c 2ED0     		beq	.L21
  80:Core/Src/btgps.c **** 					next_field=lontd; // increment to the next field on the delimiter comma
  81:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
  82:Core/Src/btgps.c **** 					break;
  83:Core/Src/btgps.c **** 				}
  84:Core/Src/btgps.c **** 				msgbuf->NS=raw[i];
 262              		.loc 1 84 5 is_stmt 1 view .LVU69
 263              		.loc 1 84 15 is_stmt 0 view .LVU70
 264 012e F174     		strb	r1, [r6, #19]
  85:Core/Src/btgps.c **** 				break;
 265              		.loc 1 85 5 is_stmt 1 view .LVU71
 266 0130 97E7     		b	.L5
 267              	.L11:
  86:Core/Src/btgps.c **** 			case lontd	:
  87:Core/Src/btgps.c **** 				if (raw[i] == ','){
 268              		.loc 1 87 5 view .LVU72
 269              		.loc 1 87 12 is_stmt 0 view .LVU73
 270 0132 03F18001 		add	r1, r3, #128
 271 0136 6944     		add	r1, sp, r1
 272 0138 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 273              		.loc 1 87 8 view .LVU74
 274 013c 2C29     		cmp	r1, #44
 275 013e 28D0     		beq	.L22
  88:Core/Src/btgps.c **** 					next_field=ew; // increment to the next field on the delimiter comma
  89:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
  90:Core/Src/btgps.c **** 					break;
  91:Core/Src/btgps.c **** 				}
  92:Core/Src/btgps.c **** 				msgbuf->longitude[field_i]=raw[i];
 276              		.loc 1 92 5 is_stmt 1 view .LVU75
 277              		.loc 1 92 31 is_stmt 0 view .LVU76
 278 0140 3418     		adds	r4, r6, r0
 279 0142 2175     		strb	r1, [r4, #20]
  93:Core/Src/btgps.c **** 				field_i ++;
 280              		.loc 1 93 5 is_stmt 1 view .LVU77
 281              		.loc 1 93 13 is_stmt 0 view .LVU78
 282 0144 0130     		adds	r0, r0, #1
 283              	.LVL18:
  94:Core/Src/btgps.c **** 				break;
 284              		.loc 1 94 5 is_stmt 1 view .LVU79
 285 0146 8CE7     		b	.L5
 286              	.L10:
  95:Core/Src/btgps.c **** 			case ew		:
  96:Core/Src/btgps.c **** 				if (raw[i] == ','){
 287              		.loc 1 96 5 view .LVU80
ARM GAS  /tmp/ccc4IGxE.s 			page 8


 288              		.loc 1 96 12 is_stmt 0 view .LVU81
 289 0148 03F18001 		add	r1, r3, #128
 290 014c 6944     		add	r1, sp, r1
 291 014e 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 292              		.loc 1 96 8 view .LVU82
 293 0152 2C29     		cmp	r1, #44
 294 0154 20D0     		beq	.L23
  97:Core/Src/btgps.c **** 					next_field=pfix; // increment to the next field on the delimiter comma
  98:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
  99:Core/Src/btgps.c **** 					break;
 100:Core/Src/btgps.c **** 				}
 101:Core/Src/btgps.c **** 				msgbuf->EW=raw[i];
 295              		.loc 1 101 5 is_stmt 1 view .LVU83
 296              		.loc 1 101 15 is_stmt 0 view .LVU84
 297 0156 B177     		strb	r1, [r6, #30]
 102:Core/Src/btgps.c **** 				break;
 298              		.loc 1 102 5 is_stmt 1 view .LVU85
 299 0158 83E7     		b	.L5
 300              	.L9:
 103:Core/Src/btgps.c **** 			case pfix	:
 104:Core/Src/btgps.c **** 				if (raw[i] == ','){
 301              		.loc 1 104 5 view .LVU86
 302              		.loc 1 104 12 is_stmt 0 view .LVU87
 303 015a 03F18001 		add	r1, r3, #128
 304 015e 6944     		add	r1, sp, r1
 305 0160 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 306              		.loc 1 104 8 view .LVU88
 307 0164 2C29     		cmp	r1, #44
 308 0166 1AD0     		beq	.L24
 105:Core/Src/btgps.c **** 					next_field=sat; // finished message
 106:Core/Src/btgps.c **** 					break;
 107:Core/Src/btgps.c **** 				}
 108:Core/Src/btgps.c **** 				msgbuf->pos_fix=raw[i];
 309              		.loc 1 108 5 is_stmt 1 view .LVU89
 310              		.loc 1 108 20 is_stmt 0 view .LVU90
 311 0168 F177     		strb	r1, [r6, #31]
 109:Core/Src/btgps.c **** 				break;
 312              		.loc 1 109 5 is_stmt 1 view .LVU91
 313 016a 7AE7     		b	.L5
 314              	.L8:
 110:Core/Src/btgps.c **** 			case sat	:
 111:Core/Src/btgps.c **** 				if (raw[i] == ','){
 315              		.loc 1 111 5 view .LVU92
 316              		.loc 1 111 12 is_stmt 0 view .LVU93
 317 016c 03F18001 		add	r1, r3, #128
 318 0170 6944     		add	r1, sp, r1
 319 0172 11F8641C 		ldrb	r1, [r1, #-100]	@ zero_extendqisi2
 320              		.loc 1 111 8 view .LVU94
 321 0176 2C29     		cmp	r1, #44
 322 0178 13D0     		beq	.L25
 112:Core/Src/btgps.c **** 					next_field=msgdone; // finished message
 113:Core/Src/btgps.c **** 					break;
 114:Core/Src/btgps.c **** 				}
 115:Core/Src/btgps.c **** 				msgbuf->sat_used=raw[i];
 323              		.loc 1 115 5 is_stmt 1 view .LVU95
 324              		.loc 1 115 21 is_stmt 0 view .LVU96
 325 017a 86F82010 		strb	r1, [r6, #32]
ARM GAS  /tmp/ccc4IGxE.s 			page 9


 326 017e 70E7     		b	.L5
 327              	.L19:
  63:Core/Src/btgps.c **** 					break;
 328              		.loc 1 63 14 view .LVU97
 329 0180 0020     		movs	r0, #0
 330              	.LVL19:
  62:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 331              		.loc 1 62 16 view .LVU98
 332 0182 0222     		movs	r2, #2
 333              	.LVL20:
  62:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 334              		.loc 1 62 16 view .LVU99
 335 0184 6DE7     		b	.L5
 336              	.LVL21:
 337              	.L20:
  72:Core/Src/btgps.c **** 					break;
 338              		.loc 1 72 14 view .LVU100
 339 0186 0020     		movs	r0, #0
 340              	.LVL22:
  71:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 341              		.loc 1 71 16 view .LVU101
 342 0188 0322     		movs	r2, #3
 343              	.LVL23:
  71:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 344              		.loc 1 71 16 view .LVU102
 345 018a 6AE7     		b	.L5
 346              	.LVL24:
 347              	.L21:
  81:Core/Src/btgps.c **** 					break;
 348              		.loc 1 81 14 view .LVU103
 349 018c 0020     		movs	r0, #0
 350              	.LVL25:
  80:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 351              		.loc 1 80 16 view .LVU104
 352 018e 0422     		movs	r2, #4
 353              	.LVL26:
  80:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 354              		.loc 1 80 16 view .LVU105
 355 0190 67E7     		b	.L5
 356              	.LVL27:
 357              	.L22:
  89:Core/Src/btgps.c **** 					break;
 358              		.loc 1 89 14 view .LVU106
 359 0192 0020     		movs	r0, #0
 360              	.LVL28:
  88:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 361              		.loc 1 88 16 view .LVU107
 362 0194 0522     		movs	r2, #5
 363              	.LVL29:
  88:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 364              		.loc 1 88 16 view .LVU108
 365 0196 64E7     		b	.L5
 366              	.LVL30:
 367              	.L23:
  98:Core/Src/btgps.c **** 					break;
 368              		.loc 1 98 14 view .LVU109
 369 0198 0020     		movs	r0, #0
ARM GAS  /tmp/ccc4IGxE.s 			page 10


 370              	.LVL31:
  97:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 371              		.loc 1 97 16 view .LVU110
 372 019a 0622     		movs	r2, #6
 373              	.LVL32:
  97:Core/Src/btgps.c **** 					field_i = 0; // reset the field index
 374              		.loc 1 97 16 view .LVU111
 375 019c 61E7     		b	.L5
 376              	.LVL33:
 377              	.L24:
 105:Core/Src/btgps.c **** 					break;
 378              		.loc 1 105 16 view .LVU112
 379 019e 0722     		movs	r2, #7
 380              	.LVL34:
 105:Core/Src/btgps.c **** 					break;
 381              		.loc 1 105 16 view .LVU113
 382 01a0 5FE7     		b	.L5
 383              	.LVL35:
 384              	.L25:
 112:Core/Src/btgps.c **** 					break;
 385              		.loc 1 112 16 view .LVU114
 386 01a2 0922     		movs	r2, #9
 387              	.LVL36:
 112:Core/Src/btgps.c **** 					break;
 388              		.loc 1 112 16 view .LVU115
 389 01a4 5DE7     		b	.L5
 390              	.LVL37:
 391              	.L28:
 112:Core/Src/btgps.c **** 					break;
 392              		.loc 1 112 16 view .LVU116
 393              	.LBE4:
 116:Core/Src/btgps.c **** 			case msgdone:
 117:Core/Src/btgps.c **** 				break;
 118:Core/Src/btgps.c **** 			}
 119:Core/Src/btgps.c **** 	}
 120:Core/Src/btgps.c **** 	return 0;
 394              		.loc 1 120 2 is_stmt 1 view .LVU117
 121:Core/Src/btgps.c **** }
 395              		.loc 1 121 1 is_stmt 0 view .LVU118
 396 01a6 0020     		movs	r0, #0
 397              	.LVL38:
 398              		.loc 1 121 1 view .LVU119
 399 01a8 21B0     		add	sp, sp, #132
 400              	.LCFI2:
 401              		.cfi_def_cfa_offset 20
 402              		@ sp needed
 403 01aa F0BD     		pop	{r4, r5, r6, r7, pc}
 404              	.LVL39:
 405              	.L30:
 406              		.loc 1 121 1 view .LVU120
 407              		.align	2
 408              	.L29:
 409 01ac 00000000 		.word	.LC0
 410              		.cfi_endproc
 411              	.LFE972:
 413              		.global	__aeabi_i2d
 414              		.global	__aeabi_dmul
ARM GAS  /tmp/ccc4IGxE.s 			page 11


 415              		.global	__aeabi_dadd
 416              		.section	.text.char2rad,"ax",%progbits
 417              		.align	1
 418              		.global	char2rad
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu softvfp
 424              	char2rad:
 425              	.LVL40:
 426              	.LFB973:
 122:Core/Src/btgps.c **** 
 123:Core/Src/btgps.c **** 
 124:Core/Src/btgps.c **** double char2rad(char * sourcearray, int len, int expo_start){
 427              		.loc 1 124 61 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		.loc 1 124 61 is_stmt 0 view .LVU122
 432 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 433              	.LCFI3:
 434              		.cfi_def_cfa_offset 40
 435              		.cfi_offset 3, -40
 436              		.cfi_offset 4, -36
 437              		.cfi_offset 5, -32
 438              		.cfi_offset 6, -28
 439              		.cfi_offset 7, -24
 440              		.cfi_offset 8, -20
 441              		.cfi_offset 9, -16
 442              		.cfi_offset 10, -12
 443              		.cfi_offset 11, -8
 444              		.cfi_offset 14, -4
 445 0004 8346     		mov	fp, r0
 446 0006 8A46     		mov	r10, r1
 447 0008 1546     		mov	r5, r2
 125:Core/Src/btgps.c ****     double sum = 0;
 448              		.loc 1 125 5 is_stmt 1 view .LVU123
 449              	.LVL41:
 126:Core/Src/btgps.c **** //    double expo = 1;
 127:Core/Src/btgps.c ****     int expo = expo_start;
 450              		.loc 1 127 5 view .LVU124
 128:Core/Src/btgps.c ****     for (int i=0; i<len;i++){
 451              		.loc 1 128 5 view .LVU125
 452              	.LBB5:
 453              		.loc 1 128 10 view .LVU126
 454              		.loc 1 128 14 is_stmt 0 view .LVU127
 455 000a 0024     		movs	r4, #0
 456              	.LBE5:
 125:Core/Src/btgps.c ****     double sum = 0;
 457              		.loc 1 125 12 view .LVU128
 458 000c 0026     		movs	r6, #0
 459 000e 0027     		movs	r7, #0
 460              	.LBB7:
 461              		.loc 1 128 5 view .LVU129
 462 0010 00E0     		b	.L32
 463              	.LVL42:
 464              	.L33:
ARM GAS  /tmp/ccc4IGxE.s 			page 12


 465              		.loc 1 128 25 is_stmt 1 discriminator 2 view .LVU130
 466              		.loc 1 128 26 is_stmt 0 discriminator 2 view .LVU131
 467 0012 0134     		adds	r4, r4, #1
 468              	.LVL43:
 469              	.L32:
 470              		.loc 1 128 19 is_stmt 1 discriminator 1 view .LVU132
 471              		.loc 1 128 5 is_stmt 0 discriminator 1 view .LVU133
 472 0014 5445     		cmp	r4, r10
 473 0016 21DA     		bge	.L36
 129:Core/Src/btgps.c ****         if (sourcearray[i]!='.'){
 474              		.loc 1 129 9 is_stmt 1 view .LVU134
 475              		.loc 1 129 24 is_stmt 0 view .LVU135
 476 0018 1BF80400 		ldrb	r0, [fp, r4]	@ zero_extendqisi2
 477              		.loc 1 129 12 view .LVU136
 478 001c 2E28     		cmp	r0, #46
 479 001e F8D0     		beq	.L33
 480              	.LBB6:
 130:Core/Src/btgps.c ****         expo = expo - 1; // exponent of the digit
 481              		.loc 1 130 9 is_stmt 1 view .LVU137
 482              		.loc 1 130 14 is_stmt 0 view .LVU138
 483 0020 013D     		subs	r5, r5, #1
 484              	.LVL44:
 131:Core/Src/btgps.c ****         double digit = sourcearray[i] - '0';
 485              		.loc 1 131 9 is_stmt 1 view .LVU139
 486              		.loc 1 131 16 is_stmt 0 view .LVU140
 487 0022 3038     		subs	r0, r0, #48
 488 0024 FFF7FEFF 		bl	__aeabi_i2d
 489              	.LVL45:
 490 0028 8046     		mov	r8, r0
 491 002a 8946     		mov	r9, r1
 492              	.LVL46:
 132:Core/Src/btgps.c ****         double tenp = pow(10,expo);
 493              		.loc 1 132 9 is_stmt 1 view .LVU141
 494              		.loc 1 132 23 is_stmt 0 view .LVU142
 495 002c 2846     		mov	r0, r5
 496 002e FFF7FEFF 		bl	__aeabi_i2d
 497              	.LVL47:
 498 0032 0246     		mov	r2, r0
 499 0034 0B46     		mov	r3, r1
 500 0036 0020     		movs	r0, #0
 501 0038 0F49     		ldr	r1, .L37+8
 502 003a FFF7FEFF 		bl	pow
 503              	.LVL48:
 504 003e 0246     		mov	r2, r0
 505 0040 0B46     		mov	r3, r1
 506              	.LVL49:
 133:Core/Src/btgps.c ****         double val = digit*tenp;
 507              		.loc 1 133 9 is_stmt 1 view .LVU143
 508              		.loc 1 133 16 is_stmt 0 view .LVU144
 509 0042 4046     		mov	r0, r8
 510 0044 4946     		mov	r1, r9
 511 0046 FFF7FEFF 		bl	__aeabi_dmul
 512              	.LVL50:
 513              		.loc 1 133 16 view .LVU145
 514 004a 0246     		mov	r2, r0
 515 004c 0B46     		mov	r3, r1
 516              	.LVL51:
ARM GAS  /tmp/ccc4IGxE.s 			page 13


 134:Core/Src/btgps.c ****         sum = sum + val;
 517              		.loc 1 134 9 is_stmt 1 view .LVU146
 518              		.loc 1 134 13 is_stmt 0 view .LVU147
 519 004e 3046     		mov	r0, r6
 520 0050 3946     		mov	r1, r7
 521 0052 FFF7FEFF 		bl	__aeabi_dadd
 522              	.LVL52:
 523              		.loc 1 134 13 view .LVU148
 524 0056 0646     		mov	r6, r0
 525              	.LVL53:
 526              		.loc 1 134 13 view .LVU149
 527 0058 0F46     		mov	r7, r1
 528              	.LVL54:
 529              		.loc 1 134 13 view .LVU150
 530 005a DAE7     		b	.L33
 531              	.LVL55:
 532              	.L36:
 533              		.loc 1 134 13 view .LVU151
 534              	.LBE6:
 535              	.LBE7:
 135:Core/Src/btgps.c ****         }
 136:Core/Src/btgps.c ****     }
 137:Core/Src/btgps.c ****     double rad = sum*(3.14159/180);
 536              		.loc 1 137 5 is_stmt 1 view .LVU152
 537              		.loc 1 137 12 is_stmt 0 view .LVU153
 538 005c 04A3     		adr	r3, .L37
 539 005e D3E90023 		ldrd	r2, [r3]
 540 0062 3046     		mov	r0, r6
 541 0064 3946     		mov	r1, r7
 542 0066 FFF7FEFF 		bl	__aeabi_dmul
 543              	.LVL56:
 138:Core/Src/btgps.c ****     return rad;
 544              		.loc 1 138 5 is_stmt 1 view .LVU154
 139:Core/Src/btgps.c **** }
 545              		.loc 1 139 1 is_stmt 0 view .LVU155
 546 006a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 547              	.LVL57:
 548              	.L38:
 549              		.loc 1 139 1 view .LVU156
 550 006e 00BF     		.align	3
 551              	.L37:
 552 0070 70E20DA5 		.word	-1525816720
 553 0074 45DF913F 		.word	1066524485
 554 0078 00002440 		.word	1076101120
 555              		.cfi_endproc
 556              	.LFE973:
 558              		.global	__aeabi_dsub
 559              		.section	.text.getdistance,"ax",%progbits
 560              		.align	1
 561              		.global	getdistance
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu softvfp
 567              	getdistance:
 568              	.LVL58:
 569              	.LFB974:
ARM GAS  /tmp/ccc4IGxE.s 			page 14


 140:Core/Src/btgps.c **** 
 141:Core/Src/btgps.c **** 
 142:Core/Src/btgps.c **** double getdistance(char* lat1, char* long1, char * lat2, char * long2){
 570              		.loc 1 142 71 is_stmt 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 8
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		.loc 1 142 71 is_stmt 0 view .LVU158
 575 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 576              	.LCFI4:
 577              		.cfi_def_cfa_offset 36
 578              		.cfi_offset 4, -36
 579              		.cfi_offset 5, -32
 580              		.cfi_offset 6, -28
 581              		.cfi_offset 7, -24
 582              		.cfi_offset 8, -20
 583              		.cfi_offset 9, -16
 584              		.cfi_offset 10, -12
 585              		.cfi_offset 11, -8
 586              		.cfi_offset 14, -4
 587 0004 83B0     		sub	sp, sp, #12
 588              	.LCFI5:
 589              		.cfi_def_cfa_offset 48
 590 0006 8846     		mov	r8, r1
 591 0008 1546     		mov	r5, r2
 592 000a 1C46     		mov	r4, r3
 143:Core/Src/btgps.c **** 	double latrad1 = char2rad(lat1, 9, 2);
 593              		.loc 1 143 2 is_stmt 1 view .LVU159
 594              		.loc 1 143 19 is_stmt 0 view .LVU160
 595 000c 0222     		movs	r2, #2
 596              	.LVL59:
 597              		.loc 1 143 19 view .LVU161
 598 000e 0921     		movs	r1, #9
 599              	.LVL60:
 600              		.loc 1 143 19 view .LVU162
 601 0010 FFF7FEFF 		bl	char2rad
 602              	.LVL61:
 603              		.loc 1 143 19 view .LVU163
 604 0014 0646     		mov	r6, r0
 605 0016 0F46     		mov	r7, r1
 606              	.LVL62:
 144:Core/Src/btgps.c **** 	double longrad1 = char2rad(long1, 10, 3);
 607              		.loc 1 144 2 is_stmt 1 view .LVU164
 608              		.loc 1 144 20 is_stmt 0 view .LVU165
 609 0018 0322     		movs	r2, #3
 610 001a 0A21     		movs	r1, #10
 611 001c 4046     		mov	r0, r8
 612 001e FFF7FEFF 		bl	char2rad
 613              	.LVL63:
 614 0022 CDE90001 		strd	r0, [sp]
 615              	.LVL64:
 145:Core/Src/btgps.c **** 	double latrad2 = char2rad(lat2, 9, 2);
 616              		.loc 1 145 2 is_stmt 1 view .LVU166
 617              		.loc 1 145 19 is_stmt 0 view .LVU167
 618 0026 0222     		movs	r2, #2
 619 0028 0921     		movs	r1, #9
 620 002a 2846     		mov	r0, r5
ARM GAS  /tmp/ccc4IGxE.s 			page 15


 621              	.LVL65:
 622              		.loc 1 145 19 view .LVU168
 623 002c FFF7FEFF 		bl	char2rad
 624              	.LVL66:
 625 0030 8046     		mov	r8, r0
 626              	.LVL67:
 627              		.loc 1 145 19 view .LVU169
 628 0032 8946     		mov	r9, r1
 629              	.LVL68:
 146:Core/Src/btgps.c **** 	double longrad2 = char2rad(long2, 10, 3);
 630              		.loc 1 146 2 is_stmt 1 view .LVU170
 631              		.loc 1 146 20 is_stmt 0 view .LVU171
 632 0034 0322     		movs	r2, #3
 633 0036 0A21     		movs	r1, #10
 634 0038 2046     		mov	r0, r4
 635 003a FFF7FEFF 		bl	char2rad
 636              	.LVL69:
 637 003e 8246     		mov	r10, r0
 638 0040 8B46     		mov	fp, r1
 639              	.LVL70:
 147:Core/Src/btgps.c **** 	double dphi = latrad1-latrad2;
 640              		.loc 1 147 2 is_stmt 1 view .LVU172
 641              		.loc 1 147 9 is_stmt 0 view .LVU173
 642 0042 4246     		mov	r2, r8
 643 0044 4B46     		mov	r3, r9
 644 0046 3046     		mov	r0, r6
 645 0048 3946     		mov	r1, r7
 646 004a FFF7FEFF 		bl	__aeabi_dsub
 647              	.LVL71:
 648 004e 0446     		mov	r4, r0
 649              	.LVL72:
 650              		.loc 1 147 9 view .LVU174
 651 0050 0D46     		mov	r5, r1
 652              	.LVL73:
 148:Core/Src/btgps.c **** 	double dlambda = longrad1-longrad2;
 653              		.loc 1 148 2 is_stmt 1 view .LVU175
 654              		.loc 1 148 9 is_stmt 0 view .LVU176
 655 0052 5246     		mov	r2, r10
 656 0054 5B46     		mov	r3, fp
 657 0056 DDE90001 		ldrd	r0, [sp]
 658 005a FFF7FEFF 		bl	__aeabi_dsub
 659              	.LVL74:
 660 005e 8246     		mov	r10, r0
 661              	.LVL75:
 662              		.loc 1 148 9 view .LVU177
 663 0060 8B46     		mov	fp, r1
 664              	.LVL76:
 149:Core/Src/btgps.c **** 	double phi_m = (latrad1+latrad2)/2;
 665              		.loc 1 149 2 is_stmt 1 view .LVU178
 666              		.loc 1 149 25 is_stmt 0 view .LVU179
 667 0062 4246     		mov	r2, r8
 668 0064 4B46     		mov	r3, r9
 669 0066 3046     		mov	r0, r6
 670 0068 3946     		mov	r1, r7
 671 006a FFF7FEFF 		bl	__aeabi_dadd
 672              	.LVL77:
 673              		.loc 1 149 9 view .LVU180
ARM GAS  /tmp/ccc4IGxE.s 			page 16


 674 006e 0022     		movs	r2, #0
 675 0070 134B     		ldr	r3, .L41+8
 676 0072 FFF7FEFF 		bl	__aeabi_dmul
 677              	.LVL78:
 150:Core/Src/btgps.c **** 	double R = 6371009; // earth radius
 678              		.loc 1 150 2 is_stmt 1 view .LVU181
 151:Core/Src/btgps.c **** 	double term2 = pow(cos(phi_m)*dlambda, 2);
 679              		.loc 1 151 2 view .LVU182
 680              		.loc 1 151 21 is_stmt 0 view .LVU183
 681 0076 FFF7FEFF 		bl	cos
 682              	.LVL79:
 683              		.loc 1 151 17 view .LVU184
 684 007a 5246     		mov	r2, r10
 685 007c 5B46     		mov	r3, fp
 686 007e FFF7FEFF 		bl	__aeabi_dmul
 687              	.LVL80:
 688 0082 0022     		movs	r2, #0
 689 0084 4FF08043 		mov	r3, #1073741824
 690 0088 FFF7FEFF 		bl	pow
 691              	.LVL81:
 692 008c 0646     		mov	r6, r0
 693              	.LVL82:
 694              		.loc 1 151 17 view .LVU185
 695 008e 0F46     		mov	r7, r1
 696              	.LVL83:
 152:Core/Src/btgps.c **** 	double d = R*(sqrt((dphi*dphi)+term2));
 697              		.loc 1 152 2 is_stmt 1 view .LVU186
 698              		.loc 1 152 26 is_stmt 0 view .LVU187
 699 0090 2246     		mov	r2, r4
 700 0092 2B46     		mov	r3, r5
 701 0094 2046     		mov	r0, r4
 702 0096 2946     		mov	r1, r5
 703 0098 FFF7FEFF 		bl	__aeabi_dmul
 704              	.LVL84:
 705              		.loc 1 152 16 view .LVU188
 706 009c 3246     		mov	r2, r6
 707 009e 3B46     		mov	r3, r7
 708 00a0 FFF7FEFF 		bl	__aeabi_dadd
 709              	.LVL85:
 710 00a4 FFF7FEFF 		bl	sqrt
 711              	.LVL86:
 712              		.loc 1 152 9 view .LVU189
 713 00a8 03A3     		adr	r3, .L41
 714 00aa D3E90023 		ldrd	r2, [r3]
 715 00ae FFF7FEFF 		bl	__aeabi_dmul
 716              	.LVL87:
 153:Core/Src/btgps.c **** 	return d;
 717              		.loc 1 153 2 is_stmt 1 view .LVU190
 154:Core/Src/btgps.c **** }
 718              		.loc 1 154 1 is_stmt 0 view .LVU191
 719 00b2 03B0     		add	sp, sp, #12
 720              	.LCFI6:
 721              		.cfi_def_cfa_offset 36
 722              	.LVL88:
 723              		.loc 1 154 1 view .LVU192
 724              		@ sp needed
 725 00b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /tmp/ccc4IGxE.s 			page 17


 726              	.LVL89:
 727              	.L42:
 728              		.loc 1 154 1 view .LVU193
 729              		.align	3
 730              	.L41:
 731 00b8 00000040 		.word	1073741824
 732 00bc B04D5841 		.word	1096306096
 733 00c0 0000E03F 		.word	1071644672
 734              		.cfi_endproc
 735              	.LFE974:
 737              		.text
 738              	.Letext0:
 739              		.file 2 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 740              		.file 3 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 741              		.file 4 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wl55xx.h"
 742              		.file 5 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 743              		.file 6 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_dma.h"
 744              		.file 7 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_uart.h"
 745              		.file 8 "Core/Inc/btgps.h"
 746              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 747              		.file 10 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/a
 748              		.file 11 "<built-in>"
ARM GAS  /tmp/ccc4IGxE.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 btgps.c
     /tmp/ccc4IGxE.s:16     .rodata.get_gps.str1.4:0000000000000000 $d
     /tmp/ccc4IGxE.s:20     .text.get_gps:0000000000000000 $t
     /tmp/ccc4IGxE.s:28     .text.get_gps:0000000000000000 get_gps
     /tmp/ccc4IGxE.s:146    .text.get_gps:0000000000000074 $d
     /tmp/ccc4IGxE.s:155    .text.get_gps:0000000000000098 $t
     /tmp/ccc4IGxE.s:409    .text.get_gps:00000000000001ac $d
     /tmp/ccc4IGxE.s:417    .text.char2rad:0000000000000000 $t
     /tmp/ccc4IGxE.s:424    .text.char2rad:0000000000000000 char2rad
     /tmp/ccc4IGxE.s:552    .text.char2rad:0000000000000070 $d
     /tmp/ccc4IGxE.s:560    .text.getdistance:0000000000000000 $t
     /tmp/ccc4IGxE.s:567    .text.getdistance:0000000000000000 getdistance
     /tmp/ccc4IGxE.s:731    .text.getdistance:00000000000000b8 $d

UNDEFINED SYMBOLS
memset
HAL_UART_Transmit
HAL_UART_Receive
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
pow
__aeabi_dsub
cos
sqrt
