ARM GAS  /tmp/ccZzxGTd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB979:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "btrfid.h"
  26:Core/Src/main.c **** #include "btgps.h"
  27:Core/Src/main.c **** #include <stdint.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccZzxGTd.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c ****  ADC_HandleTypeDef hadc;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef hlpuart1;
  48:Core/Src/main.c **** UART_HandleTypeDef huart1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  61:Core/Src/main.c **** static void MX_ADC_Init(void);
  62:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void);
  63:Core/Src/main.c **** static void MX_TIM1_Init(void);
  64:Core/Src/main.c **** static void MX_TIM2_Init(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** uint8_t gps_buffer[100] = {0};
  72:Core/Src/main.c **** uint8_t dma_buffer[100] = {0};
  73:Core/Src/main.c **** uint8_t rxdata[90]= {0};
  74:Core/Src/main.c **** uint8_t testrxdata[90] = {0};
  75:Core/Src/main.c **** nmea_gpgga_t cur_gpsmsgbuf;
  76:Core/Src/main.c **** nmea_gpgga_t prev_gpsmgsbuf;
  77:Core/Src/main.c **** uint8_t rawbuf[24]={0};
  78:Core/Src/main.c **** uint8_t rfidbuf[13]={0};
  79:Core/Src/main.c **** uint8_t rfiddummydata[13]={0x3f,0xa6,0xe6,0xe6,0xe6,0x26,0x26,0xa9,0xf9,0x2e,0xca,0xd6,0xf2
  80:Core/Src/main.c **** };
  81:Core/Src/main.c **** statemachine_state_t mystate;
  82:Core/Src/main.c **** volatile uint8_t rfidrawbuf[50]={0};
  83:Core/Src/main.c **** volatile uint8_t rfidmsgbuf[15]={0};
  84:Core/Src/main.c **** uint32_t rfidstarttime;
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
ARM GAS  /tmp/ccZzxGTd.s 			page 3


  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  94:Core/Src/main.c **** 	mystate=BT_IDLE;
  95:Core/Src/main.c ****   /* USER CODE END 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Core/Src/main.c ****   HAL_Init();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 103:Core/Src/main.c ****   /* USER CODE END Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Configure the system clock */
 106:Core/Src/main.c ****   SystemClock_Config();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Initialize all configured peripherals */
 113:Core/Src/main.c ****   MX_GPIO_Init();
 114:Core/Src/main.c ****   MX_USART1_UART_Init();
 115:Core/Src/main.c ****   MX_ADC_Init();
 116:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 117:Core/Src/main.c ****   MX_TIM1_Init();
 118:Core/Src/main.c ****   MX_TIM2_Init();
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 120:Core/Src/main.c ****   HAL_GPIO_WritePin(IDLE_GPIO_Port, IDLE_Pin, GPIO_PIN_SET);
 121:Core/Src/main.c ****   HAL_GPIO_WritePin(IDLE_GPIO_Port, IDLE_Pin, GPIO_PIN_RESET);
 122:Core/Src/main.c ****   HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_SET);
 123:Core/Src/main.c ****   HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 124:Core/Src/main.c ****   HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_SET);
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_RESET);
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_SET);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_RESET);
 128:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   nmea_gpgga_t testgps1 = {"170921.000","4006.9306",'N',"08813.6236",'W','1','7'};
 134:Core/Src/main.c ****   nmea_gpgga_t testgps2 = {"170921.000","4006.9135",'N',"08813.6236",'W','1','7'};
 135:Core/Src/main.c ****   // GPS counter -- poll GPS once every 30 seconds 
 136:Core/Src/main.c ****   int prevgetgpstime=0;
 137:Core/Src/main.c ****   int getgpstime=0;
 138:Core/Src/main.c ****   uint32_t distbuffer[10] = {0};
 139:Core/Src/main.c ****   uint32_t latest_dist=0;
 140:Core/Src/main.c ****   uint32_t full_dist=0;
 141:Core/Src/main.c ****   while (1)
 142:Core/Src/main.c ****   {
 143:Core/Src/main.c ****     /*getgpstime = __HAL_TIM_GET_COUNTER(&htim2);
 144:Core/Src/main.c ****     if ((getgpstime - prevgetgpstime)>30000){
 145:Core/Src/main.c ****       HAL_GPIO_WritePin(GET_GPS_GPIO_Port, GET_GPS_Pin, GPIO_PIN_SET);
 146:Core/Src/main.c ****       prev_gpsmgsbuf = cur_gpsmsgbuf;
 147:Core/Src/main.c ****       get_gps(&huart1, &cur_gpsmsgbuf);
ARM GAS  /tmp/ccZzxGTd.s 			page 4


 148:Core/Src/main.c ****       latest_dist = getdistance(&prev_gpsmgsbuf.latitude, &prev_gpsmgsbuf.longitude, &cur_gpsmsgbuf
 149:Core/Src/main.c ****       prevgetgpstime=getgpstime;
 150:Core/Src/main.c ****       HAL_GPIO_WritePin(GET_GPS_GPIO_Port, GET_GPS_Pin, GPIO_PIN_RESET);
 151:Core/Src/main.c ****     }
 152:Core/Src/main.c ****     full_dist = 0;
 153:Core/Src/main.c ****     for (int i = 0; i <10; i ++){
 154:Core/Src/main.c ****       distbuffer[10-i]=distbuffer[10-(i+1)];
 155:Core/Src/main.c ****       full_dist = full_dist + distbuffer[i];
 156:Core/Src/main.c ****     }
 157:Core/Src/main.c ****     distbuffer[0] = latest_dist;
 158:Core/Src/main.c ****     full_dist = full_dist+latest_dist;*/
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     // test GPS stuff: 
 161:Core/Src/main.c ****     uint32_t full_dist = getdistance(&testgps1.latitude, &testgps1.longitude, &testgps2.latitude, &
 162:Core/Src/main.c ****     /* USER CODE END WHILE */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 165:Core/Src/main.c ****     switch (mystate){
 166:Core/Src/main.c **** 	  case BT_IDLE	:
 167:Core/Src/main.c **** 		  HAL_GPIO_WritePin(IDLE_GPIO_Port, IDLE_Pin, GPIO_PIN_SET);
 168:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 169:Core/Src/main.c **** 		  HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_RESET);
 170:Core/Src/main.c **** 		  HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_RESET);
 171:Core/Src/main.c ****       // state transition for idle->unlocked is in the LPUART IRQ
 172:Core/Src/main.c **** 		  HAL_StatusTypeDef res = HAL_UART_Receive_IT(&hlpuart1,rfidrawbuf,40);
 173:Core/Src/main.c **** 		  if (full_dist>5){
 174:Core/Src/main.c ****         mystate=BT_ALARM;
 175:Core/Src/main.c ****       }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** 		  break;
 178:Core/Src/main.c **** 	  case BT_UNLOCKED	:
 179:Core/Src/main.c **** 		  HAL_GPIO_WritePin(IDLE_GPIO_Port, IDLE_Pin, GPIO_PIN_RESET);
 180:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_SET);
 181:Core/Src/main.c **** 		  HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_RESET);
 182:Core/Src/main.c **** 		  HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_RESET);
 183:Core/Src/main.c ****       int unlocked_time = __HAL_TIM_GET_COUNTER(&htim2);
 184:Core/Src/main.c ****       if ((unlocked_time - rfidstarttime) > 5000){
 185:Core/Src/main.c ****         mystate=BT_IDLE;
 186:Core/Src/main.c ****       }
 187:Core/Src/main.c ****       if (full_dist>5){
 188:Core/Src/main.c ****         mystate=BT_TRANSIT;
 189:Core/Src/main.c ****       }
 190:Core/Src/main.c **** 		  break;
 191:Core/Src/main.c **** 	  case BT_TRANSIT	:
 192:Core/Src/main.c **** 		  HAL_GPIO_WritePin(IDLE_GPIO_Port, IDLE_Pin, GPIO_PIN_RESET);
 193:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 194:Core/Src/main.c **** 		  HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_SET);
 195:Core/Src/main.c **** 		  HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_RESET);
 196:Core/Src/main.c ****       if (full_dist<5){
 197:Core/Src/main.c ****         mystate=BT_IDLE;
 198:Core/Src/main.c ****       }
 199:Core/Src/main.c **** 		  break;
 200:Core/Src/main.c **** 	  case BT_ALARM:
 201:Core/Src/main.c **** 		  HAL_GPIO_WritePin(IDLE_GPIO_Port, IDLE_Pin, GPIO_PIN_RESET);
 202:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 203:Core/Src/main.c **** 		  HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_RESET);
 204:Core/Src/main.c **** 		  HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/ccZzxGTd.s 			page 5


 205:Core/Src/main.c ****       HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_4);
 206:Core/Src/main.c ****       HAL_Delay(5000);
 207:Core/Src/main.c ****       HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_4);
 208:Core/Src/main.c ****       mystate=BT_IDLE;
 209:Core/Src/main.c **** 	  }
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c ****   /* USER CODE END 3 */
 212:Core/Src/main.c **** }
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** /**
 215:Core/Src/main.c ****   * @brief System Clock Configuration
 216:Core/Src/main.c ****   * @retval None
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c **** void SystemClock_Config(void)
 219:Core/Src/main.c **** {
 220:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 221:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_MSI;
 230:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 231:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 232:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 233:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 234:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_11;
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 236:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 237:Core/Src/main.c ****   {
 238:Core/Src/main.c ****     Error_Handler();
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /** Configure the SYSCLKSource, HCLK, PCLK1 and PCLK2 clocks dividers
 242:Core/Src/main.c ****   */
 243:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK3|RCC_CLOCKTYPE_HCLK
 244:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 245:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK2;
 246:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 247:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 250:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     Error_Handler();
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c **** }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /**
 259:Core/Src/main.c ****   * @brief ADC Initialization Function
 260:Core/Src/main.c ****   * @param None
 261:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccZzxGTd.s 			page 6


 262:Core/Src/main.c ****   */
 263:Core/Src/main.c **** static void MX_ADC_Init(void)
 264:Core/Src/main.c **** {
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c ****   hadc.Instance = ADC;
 277:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 278:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 279:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 280:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DISABLE;
 281:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 282:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 283:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 284:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 285:Core/Src/main.c ****   hadc.Init.NbrOfConversion = 1;
 286:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 287:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 288:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 289:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 290:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 291:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 292:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_1CYCLE_5;
 293:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 294:Core/Src/main.c ****   hadc.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 295:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     Error_Handler();
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** }
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /**
 306:Core/Src/main.c ****   * @brief LPUART1 Initialization Function
 307:Core/Src/main.c ****   * @param None
 308:Core/Src/main.c ****   * @retval None
 309:Core/Src/main.c ****   */
 310:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void)
 311:Core/Src/main.c **** {
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 0 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 0 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 1 */
 318:Core/Src/main.c **** 
ARM GAS  /tmp/ccZzxGTd.s 			page 7


 319:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 1 */
 320:Core/Src/main.c ****   hlpuart1.Instance = LPUART1;
 321:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 9600;
 322:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 323:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 324:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 325:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 326:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 327:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 328:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 329:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_SWAP_INIT;
 330:Core/Src/main.c ****   hlpuart1.AdvancedInit.Swap = UART_ADVFEATURE_SWAP_ENABLE;
 331:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 332:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 333:Core/Src/main.c ****   {
 334:Core/Src/main.c ****     Error_Handler();
 335:Core/Src/main.c ****   }
 336:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 337:Core/Src/main.c ****   {
 338:Core/Src/main.c ****     Error_Handler();
 339:Core/Src/main.c ****   }
 340:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 345:Core/Src/main.c ****   {
 346:Core/Src/main.c ****     Error_Handler();
 347:Core/Src/main.c ****   }
 348:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 2 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 2 */
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** /**
 355:Core/Src/main.c ****   * @brief USART1 Initialization Function
 356:Core/Src/main.c ****   * @param None
 357:Core/Src/main.c ****   * @retval None
 358:Core/Src/main.c ****   */
 359:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 360:Core/Src/main.c **** {
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 369:Core/Src/main.c ****   huart1.Instance = USART1;
 370:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 371:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 372:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 373:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 374:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 375:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccZzxGTd.s 			page 8


 376:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_8;
 377:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_ENABLE;
 378:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 379:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 380:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 381:Core/Src/main.c ****   {
 382:Core/Src/main.c ****     Error_Handler();
 383:Core/Src/main.c ****   }
 384:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 385:Core/Src/main.c ****   {
 386:Core/Src/main.c ****     Error_Handler();
 387:Core/Src/main.c ****   }
 388:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 389:Core/Src/main.c ****   {
 390:Core/Src/main.c ****     Error_Handler();
 391:Core/Src/main.c ****   }
 392:Core/Src/main.c ****   if (HAL_UARTEx_EnableFifoMode(&huart1) != HAL_OK)
 393:Core/Src/main.c ****   {
 394:Core/Src/main.c ****     Error_Handler();
 395:Core/Src/main.c ****   }
 396:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** }
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** /**
 403:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 404:Core/Src/main.c ****   * @param None
 405:Core/Src/main.c ****   * @retval None
 406:Core/Src/main.c ****   */
 407:Core/Src/main.c **** static void MX_TIM1_Init(void)
 408:Core/Src/main.c **** {
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 415:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 416:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 417:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 422:Core/Src/main.c ****   htim1.Instance = TIM1;
 423:Core/Src/main.c ****   htim1.Init.Prescaler = 2400;
 424:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 425:Core/Src/main.c ****   htim1.Init.Period = 3;
 426:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 427:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 428:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 429:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 430:Core/Src/main.c ****   {
 431:Core/Src/main.c ****     Error_Handler();
 432:Core/Src/main.c ****   }
ARM GAS  /tmp/ccZzxGTd.s 			page 9


 433:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 434:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 435:Core/Src/main.c ****   {
 436:Core/Src/main.c ****     Error_Handler();
 437:Core/Src/main.c ****   }
 438:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     Error_Handler();
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 443:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 444:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 445:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 446:Core/Src/main.c ****   {
 447:Core/Src/main.c ****     Error_Handler();
 448:Core/Src/main.c ****   }
 449:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 450:Core/Src/main.c ****   sConfigOC.Pulse = 2;
 451:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 452:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 453:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 454:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 455:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 456:Core/Src/main.c ****   {
 457:Core/Src/main.c ****     Error_Handler();
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 460:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 461:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 462:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 463:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 464:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 465:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 466:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 467:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 468:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 469:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 470:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 471:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 472:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 473:Core/Src/main.c ****   {
 474:Core/Src/main.c ****     Error_Handler();
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 479:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 480:Core/Src/main.c **** 
 481:Core/Src/main.c **** }
 482:Core/Src/main.c **** 
 483:Core/Src/main.c **** /**
 484:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 485:Core/Src/main.c ****   * @param None
 486:Core/Src/main.c ****   * @retval None
 487:Core/Src/main.c ****   */
 488:Core/Src/main.c **** static void MX_TIM2_Init(void)
 489:Core/Src/main.c **** {
ARM GAS  /tmp/ccZzxGTd.s 			page 10


 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 496:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 501:Core/Src/main.c ****   htim2.Instance = TIM2;
 502:Core/Src/main.c ****   htim2.Init.Prescaler = 48000-1;
 503:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 504:Core/Src/main.c ****   htim2.Init.Period = 5000000;
 505:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 506:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 507:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 508:Core/Src/main.c ****   {
 509:Core/Src/main.c ****     Error_Handler();
 510:Core/Src/main.c ****   }
 511:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 512:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 513:Core/Src/main.c ****   {
 514:Core/Src/main.c ****     Error_Handler();
 515:Core/Src/main.c ****   }
 516:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 517:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 518:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 519:Core/Src/main.c ****   {
 520:Core/Src/main.c ****     Error_Handler();
 521:Core/Src/main.c ****   }
 522:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** }
 527:Core/Src/main.c **** 
 528:Core/Src/main.c **** /**
 529:Core/Src/main.c ****   * @brief GPIO Initialization Function
 530:Core/Src/main.c ****   * @param None
 531:Core/Src/main.c ****   * @retval None
 532:Core/Src/main.c ****   */
 533:Core/Src/main.c **** static void MX_GPIO_Init(void)
 534:Core/Src/main.c **** {
  26              		.loc 1 534 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
ARM GAS  /tmp/ccZzxGTd.s 			page 11


  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 535:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 535 3 view .LVU1
  41              		.loc 1 535 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
 536:Core/Src/main.c **** 
 537:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 538:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  48              		.loc 1 538 3 is_stmt 1 view .LVU3
  49              	.LVL0:
  50              	.LBB8:
  51              	.LBI8:
  52              		.file 2 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @file    stm32wlxx_ll_bus.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   @verbatim
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****                       ##### RCC Limitations #####
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ==============================================================================
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****     [..]
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       from/to registers.w<
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****     [..]
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       Workarounds:
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   @endverbatim
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #ifndef __STM32WLxx_LL_BUS_H
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define __STM32WLxx_LL_BUS_H
ARM GAS  /tmp/ccZzxGTd.s 			page 12


  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #ifdef __cplusplus
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** extern "C" {
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #include "stm32wlxx.h"
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @addtogroup STM32WLxx_LL_Driver
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(RCC)
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL BUS
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHB1ENR_DMA1EN
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHB1ENR_DMA2EN
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMAMUX1        RCC_AHB1ENR_DMAMUX1EN
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHB1ENR_CRCEN
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOA          RCC_AHB2ENR_GPIOAEN
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOB          RCC_AHB2ENR_GPIOBEN
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOC          RCC_AHB2ENR_GPIOCEN
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOH          RCC_AHB2ENR_GPIOHEN
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
ARM GAS  /tmp/ccZzxGTd.s 			page 13


  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_PKA            RCC_AHB3ENR_PKAEN
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_AES            RCC_AHB3ENR_AESEN
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_RNG            RCC_AHB3ENR_RNGEN
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_HSEM           RCC_AHB3ENR_HSEMEN
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE)
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_IPCC           RCC_AHB3ENR_IPCCEN
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_SRAM1          RCC_AHB3SMENR_SRAM1SMEN
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_SRAM2          RCC_AHB3SMENR_SRAM2SMEN
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FLASH          RCC_AHB3ENR_FLASHEN
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR1_TIM2EN
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR1_RTCAPBEN
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR1_WWDGEN
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR1_SPI2EN
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR1_USART2EN
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR1_I2C1EN
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR1_I2C2EN
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR1_I2C3EN
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC            RCC_APB1ENR1_DACEN
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR1_LPTIM1EN
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (0xFFFFFFFFU)
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPUART1        RCC_APB1ENR2_LPUART1EN
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM2         RCC_APB1ENR2_LPTIM2EN
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM3         RCC_APB1ENR2_LPTIM3EN
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC            RCC_APB2ENR_ADCEN
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
ARM GAS  /tmp/ccZzxGTd.s 			page 14


 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB3_GRP1_PERIPH  APB3 GRP1 PERIPH
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB3_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB3_GRP1_PERIPH_SUBGHZSPI      RCC_APB3ENR_SUBGHZSPIEN
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE)
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB1_GRP1_PERIPH  C2 AHB1 GRP1 PERIPH
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMA1         RCC_C2AHB1ENR_DMA1EN
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMA2         RCC_C2AHB1ENR_DMA2EN
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMAMUX1      RCC_C2AHB1ENR_DMAMUX1EN
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_CRC          RCC_C2AHB1ENR_CRCEN
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB2_GRP1_PERIPH  C2 AHB2 GRP1 PERIPH
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOA        RCC_C2AHB2ENR_GPIOAEN
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOB        RCC_C2AHB2ENR_GPIOBEN
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOC        RCC_C2AHB2ENR_GPIOCEN
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOH        RCC_C2AHB2ENR_GPIOHEN
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB3_GRP1_PERIPH  C2 AHB3 GRP1 PERIPH
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_PKA          RCC_C2AHB3ENR_PKAEN
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_AES          RCC_C2AHB3ENR_AESEN
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_RNG          RCC_C2AHB3ENR_RNGEN
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_HSEM         RCC_C2AHB3ENR_HSEMEN
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_IPCC         RCC_C2AHB3ENR_IPCCEN
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_FLASH        RCC_C2AHB3ENR_FLASHEN
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_SRAM1        RCC_C2AHB3SMENR_SRAM1SMEN
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_SRAM2        RCC_C2AHB3SMENR_SRAM2SMEN
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB1_GRP1_PERIPH  C2 APB1 GRP1 PERIPH
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
ARM GAS  /tmp/ccZzxGTd.s 			page 15


 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_TIM2         RCC_C2APB1ENR1_TIM2EN
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_RTCAPB       RCC_C2APB1ENR1_RTCAPBEN
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_SPI2         RCC_C2APB1ENR1_SPI2EN
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_USART2       RCC_C2APB1ENR1_USART2EN
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C1         RCC_C2APB1ENR1_I2C1EN
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C2         RCC_C2APB1ENR1_I2C2EN
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C3         RCC_C2APB1ENR1_I2C3EN
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_DAC          RCC_C2APB1ENR1_DACEN
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_LPTIM1       RCC_C2APB1ENR1_LPTIM1EN
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB1_GRP2_PERIPH  C2 APB1 GRP2 PERIPH
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPUART1      RCC_C2APB1ENR2_LPUART1EN
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPTIM2       RCC_C2APB1ENR2_LPTIM2EN
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPTIM3       RCC_C2APB1ENR2_LPTIM3EN
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB2_GRP1_PERIPH  C2 APB2 GRP1 PERIPH
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_ADC          RCC_C2APB2ENR_ADCEN
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM1         RCC_C2APB2ENR_TIM1EN
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_SPI1         RCC_C2APB2ENR_SPI1EN
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_USART1       RCC_C2APB2ENR_USART1EN
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM16        RCC_C2APB2ENR_TIM16EN
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM17        RCC_C2APB2ENR_TIM17EN
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB3_GRP1_PERIPH  C2 APB3 GRP1 PERIPH
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB3_GRP1_PERIPH_SUBGHZSPI    RCC_C2APB3ENR_SUBGHZSPIEN
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
ARM GAS  /tmp/ccZzxGTd.s 			page 16


 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_EnableClock\n
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_EnableClock\n
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_EnableClock\n
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_EnableClock\n
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_IsEnabledClock\n
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_DisableClock\n
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_DisableClock\n
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_DisableClock\n
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_DisableClock\n
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
ARM GAS  /tmp/ccZzxGTd.s 			page 17


 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST    LL_AHB1_GRP1_ForceReset\n
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset\n
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ReleaseReset\n
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_EnableClockSleep\n
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_EnableClockSleep\n
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_EnableClockSleep\n
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
ARM GAS  /tmp/ccZzxGTd.s 			page 18


 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1SMENR, Periphs);
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1SMENR, Periphs);
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_IsEnabledClockSleep\n
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_IsEnabledClockSleep\n
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_IsEnabledClockSleep\n
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_IsEnabledClockSleep
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_DisableClockSleep\n
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_DisableClockSleep\n
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_DisableClockSleep\n
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1SMENR, Periphs);
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB2 AHB2
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock.
ARM GAS  /tmp/ccZzxGTd.s 			page 19


 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_EnableClock\n
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_EnableClock\n
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_EnableClock\n
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_EnableClock\n
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
  53              		.loc 2 449 22 view .LVU4
  54              	.LBB9:
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
  55              		.loc 2 451 3 view .LVU5
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
  56              		.loc 2 452 3 view .LVU6
  57 0010 4FF0B043 		mov	r3, #1476395008
  58 0014 DA6C     		ldr	r2, [r3, #76]
  59 0016 42F00202 		orr	r2, r2, #2
  60 001a DA64     		str	r2, [r3, #76]
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
  61              		.loc 2 454 3 view .LVU7
  62              		.loc 2 454 12 is_stmt 0 view .LVU8
  63 001c DA6C     		ldr	r2, [r3, #76]
  64 001e 02F00202 		and	r2, r2, #2
  65              		.loc 2 454 10 view .LVU9
  66 0022 0292     		str	r2, [sp, #8]
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
  67              		.loc 2 455 3 is_stmt 1 view .LVU10
  68 0024 029A     		ldr	r2, [sp, #8]
  69              	.LVL1:
  70              		.loc 2 455 3 is_stmt 0 view .LVU11
  71              	.LBE9:
  72              	.LBE8:
 539:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  73              		.loc 1 539 3 is_stmt 1 view .LVU12
  74              	.LBB10:
  75              	.LBI10:
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
  76              		.loc 2 449 22 view .LVU13
  77              	.LBB11:
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
  78              		.loc 2 451 3 view .LVU14
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
  79              		.loc 2 452 3 view .LVU15
  80 0026 DA6C     		ldr	r2, [r3, #76]
  81 0028 42F00102 		orr	r2, r2, #1
  82 002c DA64     		str	r2, [r3, #76]
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
  83              		.loc 2 454 3 view .LVU16
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
  84              		.loc 2 454 12 is_stmt 0 view .LVU17
  85 002e DB6C     		ldr	r3, [r3, #76]
ARM GAS  /tmp/ccZzxGTd.s 			page 20


  86 0030 03F00103 		and	r3, r3, #1
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
  87              		.loc 2 454 10 view .LVU18
  88 0034 0193     		str	r3, [sp, #4]
  89              		.loc 2 455 3 is_stmt 1 view .LVU19
  90 0036 019B     		ldr	r3, [sp, #4]
  91              	.LVL2:
  92              		.loc 2 455 3 is_stmt 0 view .LVU20
  93              	.LBE11:
  94              	.LBE10:
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 542:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, ALARM_Pin|IDLE_Pin, GPIO_PIN_SET);
  95              		.loc 1 542 3 is_stmt 1 view .LVU21
  96 0038 1C4D     		ldr	r5, .L3
  97 003a 0122     		movs	r2, #1
  98 003c 4FF49071 		mov	r1, #288
  99 0040 2846     		mov	r0, r5
 100 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL3:
 543:Core/Src/main.c **** 
 544:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 545:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, TRANSIT_Pin|UNLOCKED_Pin|GET_GPS_Pin, GPIO_PIN_SET);
 102              		.loc 1 545 3 view .LVU22
 103 0046 0122     		movs	r2, #1
 104 0048 41F20301 		movw	r1, #4099
 105 004c 4FF09040 		mov	r0, #1207959552
 106 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 107              	.LVL4:
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 548:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPS_NPWR_Pin|RFiD_NPWR_Pin, GPIO_PIN_RESET);
 108              		.loc 1 548 3 view .LVU23
 109 0054 2246     		mov	r2, r4
 110 0056 6021     		movs	r1, #96
 111 0058 4FF09040 		mov	r0, #1207959552
 112 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL5:
 549:Core/Src/main.c **** 
 550:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 551:Core/Src/main.c ****   HAL_GPIO_WritePin(RFSW_VC2_GPIO_Port, RFSW_VC2_Pin, GPIO_PIN_RESET);
 114              		.loc 1 551 3 view .LVU24
 115 0060 2246     		mov	r2, r4
 116 0062 0421     		movs	r1, #4
 117 0064 2846     		mov	r0, r5
 118 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL6:
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /*Configure GPIO pins : ALARM_Pin IDLE_Pin RFSW_VC2_Pin */
 554:Core/Src/main.c ****   GPIO_InitStruct.Pin = ALARM_Pin|IDLE_Pin|RFSW_VC2_Pin;
 120              		.loc 1 554 3 view .LVU25
 121              		.loc 1 554 23 is_stmt 0 view .LVU26
 122 006a 4FF49273 		mov	r3, #292
 123 006e 0393     		str	r3, [sp, #12]
 555:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 124              		.loc 1 555 3 is_stmt 1 view .LVU27
 125              		.loc 1 555 24 is_stmt 0 view .LVU28
ARM GAS  /tmp/ccZzxGTd.s 			page 21


 126 0070 0126     		movs	r6, #1
 127 0072 0496     		str	r6, [sp, #16]
 556:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 128              		.loc 1 556 3 is_stmt 1 view .LVU29
 129              		.loc 1 556 24 is_stmt 0 view .LVU30
 130 0074 0594     		str	r4, [sp, #20]
 557:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 131              		.loc 1 557 3 is_stmt 1 view .LVU31
 132              		.loc 1 557 25 is_stmt 0 view .LVU32
 133 0076 0694     		str	r4, [sp, #24]
 558:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 134              		.loc 1 558 3 is_stmt 1 view .LVU33
 135 0078 03A9     		add	r1, sp, #12
 136 007a 2846     		mov	r0, r5
 137 007c FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL7:
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****   /*Configure GPIO pins : TRANSIT_Pin UNLOCKED_Pin GPS_NPWR_Pin RFiD_NPWR_Pin
 561:Core/Src/main.c ****                            GET_GPS_Pin */
 562:Core/Src/main.c ****   GPIO_InitStruct.Pin = TRANSIT_Pin|UNLOCKED_Pin|GPS_NPWR_Pin|RFiD_NPWR_Pin
 139              		.loc 1 562 3 view .LVU34
 140              		.loc 1 562 23 is_stmt 0 view .LVU35
 141 0080 41F26303 		movw	r3, #4195
 142 0084 0393     		str	r3, [sp, #12]
 563:Core/Src/main.c ****                           |GET_GPS_Pin;
 564:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 143              		.loc 1 564 3 is_stmt 1 view .LVU36
 144              		.loc 1 564 24 is_stmt 0 view .LVU37
 145 0086 0496     		str	r6, [sp, #16]
 565:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 146              		.loc 1 565 3 is_stmt 1 view .LVU38
 147              		.loc 1 565 24 is_stmt 0 view .LVU39
 148 0088 0594     		str	r4, [sp, #20]
 566:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 149              		.loc 1 566 3 is_stmt 1 view .LVU40
 150              		.loc 1 566 25 is_stmt 0 view .LVU41
 151 008a 0694     		str	r4, [sp, #24]
 567:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 152              		.loc 1 567 3 is_stmt 1 view .LVU42
 153 008c 03A9     		add	r1, sp, #12
 154 008e 4FF09040 		mov	r0, #1207959552
 155 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL8:
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /*Configure GPIO pin : RFID_TAG_IN_RANGE_Pin */
 570:Core/Src/main.c ****   GPIO_InitStruct.Pin = RFID_TAG_IN_RANGE_Pin;
 157              		.loc 1 570 3 view .LVU43
 158              		.loc 1 570 23 is_stmt 0 view .LVU44
 159 0096 8023     		movs	r3, #128
 160 0098 0393     		str	r3, [sp, #12]
 571:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 161              		.loc 1 571 3 is_stmt 1 view .LVU45
 162              		.loc 1 571 24 is_stmt 0 view .LVU46
 163 009a 0494     		str	r4, [sp, #16]
 572:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 164              		.loc 1 572 3 is_stmt 1 view .LVU47
 165              		.loc 1 572 24 is_stmt 0 view .LVU48
ARM GAS  /tmp/ccZzxGTd.s 			page 22


 166 009c 0594     		str	r4, [sp, #20]
 573:Core/Src/main.c ****   HAL_GPIO_Init(RFID_TAG_IN_RANGE_GPIO_Port, &GPIO_InitStruct);
 167              		.loc 1 573 3 is_stmt 1 view .LVU49
 168 009e 03A9     		add	r1, sp, #12
 169 00a0 4FF09040 		mov	r0, #1207959552
 170 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 171              	.LVL9:
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** }
 172              		.loc 1 575 1 is_stmt 0 view .LVU50
 173 00a8 08B0     		add	sp, sp, #32
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 16
 176              		@ sp needed
 177 00aa 70BD     		pop	{r4, r5, r6, pc}
 178              	.L4:
 179              		.align	2
 180              	.L3:
 181 00ac 00040048 		.word	1207960576
 182              		.cfi_endproc
 183              	.LFE979:
 185              		.section	.text.Error_Handler,"ax",%progbits
 186              		.align	1
 187              		.global	Error_Handler
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu softvfp
 193              	Error_Handler:
 194              	.LFB980:
 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** /* USER CODE END 4 */
 580:Core/Src/main.c **** 
 581:Core/Src/main.c **** /**
 582:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 583:Core/Src/main.c ****   * @retval None
 584:Core/Src/main.c ****   */
 585:Core/Src/main.c **** void Error_Handler(void)
 586:Core/Src/main.c **** {
 195              		.loc 1 586 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ Volatile: function does not return.
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 587:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 588:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 589:Core/Src/main.c ****   __disable_irq();
 201              		.loc 1 589 3 view .LVU52
 202              	.LBB12:
 203              	.LBI12:
 204              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  /tmp/ccZzxGTd.s 			page 23


   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccZzxGTd.s 			page 24


  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
ARM GAS  /tmp/ccZzxGTd.s 			page 25


 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
ARM GAS  /tmp/ccZzxGTd.s 			page 26


 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 205              		.loc 3 207 27 view .LVU53
 206              	.LBB13:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 207              		.loc 3 209 3 view .LVU54
 208              		.syntax unified
 209              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 210 0000 72B6     		cpsid i
 211              	@ 0 "" 2
 212              		.thumb
 213              		.syntax unified
 214              	.L6:
 215              	.LBE13:
 216              	.LBE12:
 590:Core/Src/main.c ****   while (1)
 217              		.loc 1 590 3 discriminator 1 view .LVU55
 591:Core/Src/main.c ****   {
 592:Core/Src/main.c ****   }
 218              		.loc 1 592 3 discriminator 1 view .LVU56
 590:Core/Src/main.c ****   while (1)
 219              		.loc 1 590 9 discriminator 1 view .LVU57
 220 0002 FEE7     		b	.L6
 221              		.cfi_endproc
 222              	.LFE980:
ARM GAS  /tmp/ccZzxGTd.s 			page 27


 224              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 225              		.align	1
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	MX_USART1_UART_Init:
 232              	.LFB976:
 360:Core/Src/main.c **** 
 233              		.loc 1 360 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI3:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 369:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 242              		.loc 1 369 3 view .LVU59
 369:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 243              		.loc 1 369 19 is_stmt 0 view .LVU60
 244 0002 1748     		ldr	r0, .L17
 245 0004 174B     		ldr	r3, .L17+4
 246 0006 0360     		str	r3, [r0]
 370:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 247              		.loc 1 370 3 is_stmt 1 view .LVU61
 370:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 248              		.loc 1 370 24 is_stmt 0 view .LVU62
 249 0008 4FF41653 		mov	r3, #9600
 250 000c 4360     		str	r3, [r0, #4]
 371:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 251              		.loc 1 371 3 is_stmt 1 view .LVU63
 371:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 252              		.loc 1 371 26 is_stmt 0 view .LVU64
 253 000e 0023     		movs	r3, #0
 254 0010 8360     		str	r3, [r0, #8]
 372:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 255              		.loc 1 372 3 is_stmt 1 view .LVU65
 372:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 256              		.loc 1 372 24 is_stmt 0 view .LVU66
 257 0012 C360     		str	r3, [r0, #12]
 373:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 258              		.loc 1 373 3 is_stmt 1 view .LVU67
 373:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 259              		.loc 1 373 22 is_stmt 0 view .LVU68
 260 0014 0361     		str	r3, [r0, #16]
 374:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 261              		.loc 1 374 3 is_stmt 1 view .LVU69
 374:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 262              		.loc 1 374 20 is_stmt 0 view .LVU70
 263 0016 0C22     		movs	r2, #12
 264 0018 4261     		str	r2, [r0, #20]
 375:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_8;
 265              		.loc 1 375 3 is_stmt 1 view .LVU71
 375:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_8;
 266              		.loc 1 375 25 is_stmt 0 view .LVU72
ARM GAS  /tmp/ccZzxGTd.s 			page 28


 267 001a 8361     		str	r3, [r0, #24]
 376:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_ENABLE;
 268              		.loc 1 376 3 is_stmt 1 view .LVU73
 376:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_ENABLE;
 269              		.loc 1 376 28 is_stmt 0 view .LVU74
 270 001c 4FF40042 		mov	r2, #32768
 271 0020 C261     		str	r2, [r0, #28]
 377:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 272              		.loc 1 377 3 is_stmt 1 view .LVU75
 377:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 273              		.loc 1 377 30 is_stmt 0 view .LVU76
 274 0022 4FF40062 		mov	r2, #2048
 275 0026 0262     		str	r2, [r0, #32]
 378:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 276              		.loc 1 378 3 is_stmt 1 view .LVU77
 378:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 277              		.loc 1 378 30 is_stmt 0 view .LVU78
 278 0028 4362     		str	r3, [r0, #36]
 379:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 279              		.loc 1 379 3 is_stmt 1 view .LVU79
 379:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 280              		.loc 1 379 38 is_stmt 0 view .LVU80
 281 002a 8362     		str	r3, [r0, #40]
 380:Core/Src/main.c ****   {
 282              		.loc 1 380 3 is_stmt 1 view .LVU81
 380:Core/Src/main.c ****   {
 283              		.loc 1 380 7 is_stmt 0 view .LVU82
 284 002c FFF7FEFF 		bl	HAL_UART_Init
 285              	.LVL10:
 380:Core/Src/main.c ****   {
 286              		.loc 1 380 6 view .LVU83
 287 0030 70B9     		cbnz	r0, .L13
 384:Core/Src/main.c ****   {
 288              		.loc 1 384 3 is_stmt 1 view .LVU84
 384:Core/Src/main.c ****   {
 289              		.loc 1 384 7 is_stmt 0 view .LVU85
 290 0032 0021     		movs	r1, #0
 291 0034 0A48     		ldr	r0, .L17
 292 0036 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 293              	.LVL11:
 384:Core/Src/main.c ****   {
 294              		.loc 1 384 6 view .LVU86
 295 003a 58B9     		cbnz	r0, .L14
 388:Core/Src/main.c ****   {
 296              		.loc 1 388 3 is_stmt 1 view .LVU87
 388:Core/Src/main.c ****   {
 297              		.loc 1 388 7 is_stmt 0 view .LVU88
 298 003c 0021     		movs	r1, #0
 299 003e 0848     		ldr	r0, .L17
 300 0040 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 301              	.LVL12:
 388:Core/Src/main.c ****   {
 302              		.loc 1 388 6 view .LVU89
 303 0044 40B9     		cbnz	r0, .L15
 392:Core/Src/main.c ****   {
 304              		.loc 1 392 3 is_stmt 1 view .LVU90
 392:Core/Src/main.c ****   {
ARM GAS  /tmp/ccZzxGTd.s 			page 29


 305              		.loc 1 392 7 is_stmt 0 view .LVU91
 306 0046 0648     		ldr	r0, .L17
 307 0048 FFF7FEFF 		bl	HAL_UARTEx_EnableFifoMode
 308              	.LVL13:
 392:Core/Src/main.c ****   {
 309              		.loc 1 392 6 view .LVU92
 310 004c 30B9     		cbnz	r0, .L16
 400:Core/Src/main.c **** 
 311              		.loc 1 400 1 view .LVU93
 312 004e 08BD     		pop	{r3, pc}
 313              	.L13:
 382:Core/Src/main.c ****   }
 314              		.loc 1 382 5 is_stmt 1 view .LVU94
 315 0050 FFF7FEFF 		bl	Error_Handler
 316              	.LVL14:
 317              	.L14:
 386:Core/Src/main.c ****   }
 318              		.loc 1 386 5 view .LVU95
 319 0054 FFF7FEFF 		bl	Error_Handler
 320              	.LVL15:
 321              	.L15:
 390:Core/Src/main.c ****   }
 322              		.loc 1 390 5 view .LVU96
 323 0058 FFF7FEFF 		bl	Error_Handler
 324              	.LVL16:
 325              	.L16:
 394:Core/Src/main.c ****   }
 326              		.loc 1 394 5 view .LVU97
 327 005c FFF7FEFF 		bl	Error_Handler
 328              	.LVL17:
 329              	.L18:
 330              		.align	2
 331              	.L17:
 332 0060 00000000 		.word	.LANCHOR0
 333 0064 00380140 		.word	1073821696
 334              		.cfi_endproc
 335              	.LFE976:
 337              		.section	.text.MX_ADC_Init,"ax",%progbits
 338              		.align	1
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu softvfp
 344              	MX_ADC_Init:
 345              	.LFB974:
 264:Core/Src/main.c **** 
 346              		.loc 1 264 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350 0000 08B5     		push	{r3, lr}
 351              	.LCFI4:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 3, -8
 354              		.cfi_offset 14, -4
 276:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 355              		.loc 1 276 3 view .LVU99
ARM GAS  /tmp/ccZzxGTd.s 			page 30


 276:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 356              		.loc 1 276 17 is_stmt 0 view .LVU100
 357 0002 1248     		ldr	r0, .L23
 358 0004 124B     		ldr	r3, .L23+4
 359 0006 0360     		str	r3, [r0]
 277:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 360              		.loc 1 277 3 is_stmt 1 view .LVU101
 277:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 361              		.loc 1 277 28 is_stmt 0 view .LVU102
 362 0008 4FF00043 		mov	r3, #-2147483648
 363 000c 4360     		str	r3, [r0, #4]
 278:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 364              		.loc 1 278 3 is_stmt 1 view .LVU103
 278:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 365              		.loc 1 278 24 is_stmt 0 view .LVU104
 366 000e 0023     		movs	r3, #0
 367 0010 8360     		str	r3, [r0, #8]
 279:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DISABLE;
 368              		.loc 1 279 3 is_stmt 1 view .LVU105
 279:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DISABLE;
 369              		.loc 1 279 23 is_stmt 0 view .LVU106
 370 0012 C360     		str	r3, [r0, #12]
 280:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 371              		.loc 1 280 3 is_stmt 1 view .LVU107
 280:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 372              		.loc 1 280 26 is_stmt 0 view .LVU108
 373 0014 0361     		str	r3, [r0, #16]
 281:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 374              		.loc 1 281 3 is_stmt 1 view .LVU109
 281:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 375              		.loc 1 281 26 is_stmt 0 view .LVU110
 376 0016 0422     		movs	r2, #4
 377 0018 4261     		str	r2, [r0, #20]
 282:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 378              		.loc 1 282 3 is_stmt 1 view .LVU111
 282:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 379              		.loc 1 282 30 is_stmt 0 view .LVU112
 380 001a 0376     		strb	r3, [r0, #24]
 283:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 381              		.loc 1 283 3 is_stmt 1 view .LVU113
 283:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 382              		.loc 1 283 34 is_stmt 0 view .LVU114
 383 001c 4376     		strb	r3, [r0, #25]
 284:Core/Src/main.c ****   hadc.Init.NbrOfConversion = 1;
 384              		.loc 1 284 3 is_stmt 1 view .LVU115
 284:Core/Src/main.c ****   hadc.Init.NbrOfConversion = 1;
 385              		.loc 1 284 32 is_stmt 0 view .LVU116
 386 001e 8376     		strb	r3, [r0, #26]
 285:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 387              		.loc 1 285 3 is_stmt 1 view .LVU117
 285:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 388              		.loc 1 285 29 is_stmt 0 view .LVU118
 389 0020 0122     		movs	r2, #1
 390 0022 C261     		str	r2, [r0, #28]
 286:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 391              		.loc 1 286 3 is_stmt 1 view .LVU119
 286:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  /tmp/ccZzxGTd.s 			page 31


 392              		.loc 1 286 35 is_stmt 0 view .LVU120
 393 0024 80F82030 		strb	r3, [r0, #32]
 287:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 394              		.loc 1 287 3 is_stmt 1 view .LVU121
 287:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 395              		.loc 1 287 30 is_stmt 0 view .LVU122
 396 0028 4362     		str	r3, [r0, #36]
 288:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 397              		.loc 1 288 3 is_stmt 1 view .LVU123
 288:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 398              		.loc 1 288 34 is_stmt 0 view .LVU124
 399 002a 8362     		str	r3, [r0, #40]
 289:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 400              		.loc 1 289 3 is_stmt 1 view .LVU125
 289:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 401              		.loc 1 289 35 is_stmt 0 view .LVU126
 402 002c 80F82C30 		strb	r3, [r0, #44]
 290:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 403              		.loc 1 290 3 is_stmt 1 view .LVU127
 290:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 404              		.loc 1 290 21 is_stmt 0 view .LVU128
 405 0030 4FF48052 		mov	r2, #4096
 406 0034 0263     		str	r2, [r0, #48]
 291:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_1CYCLE_5;
 407              		.loc 1 291 3 is_stmt 1 view .LVU129
 291:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_1CYCLE_5;
 408              		.loc 1 291 33 is_stmt 0 view .LVU130
 409 0036 4363     		str	r3, [r0, #52]
 292:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 410              		.loc 1 292 3 is_stmt 1 view .LVU131
 292:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 411              		.loc 1 292 33 is_stmt 0 view .LVU132
 412 0038 8363     		str	r3, [r0, #56]
 293:Core/Src/main.c ****   hadc.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 413              		.loc 1 293 3 is_stmt 1 view .LVU133
 293:Core/Src/main.c ****   hadc.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 414              		.loc 1 293 30 is_stmt 0 view .LVU134
 415 003a 80F83C30 		strb	r3, [r0, #60]
 294:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 416              		.loc 1 294 3 is_stmt 1 view .LVU135
 294:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 417              		.loc 1 294 34 is_stmt 0 view .LVU136
 418 003e C364     		str	r3, [r0, #76]
 295:Core/Src/main.c ****   {
 419              		.loc 1 295 3 is_stmt 1 view .LVU137
 295:Core/Src/main.c ****   {
 420              		.loc 1 295 7 is_stmt 0 view .LVU138
 421 0040 FFF7FEFF 		bl	HAL_ADC_Init
 422              	.LVL18:
 295:Core/Src/main.c ****   {
 423              		.loc 1 295 6 view .LVU139
 424 0044 00B9     		cbnz	r0, .L22
 303:Core/Src/main.c **** 
 425              		.loc 1 303 1 view .LVU140
 426 0046 08BD     		pop	{r3, pc}
 427              	.L22:
 297:Core/Src/main.c ****   }
ARM GAS  /tmp/ccZzxGTd.s 			page 32


 428              		.loc 1 297 5 is_stmt 1 view .LVU141
 429 0048 FFF7FEFF 		bl	Error_Handler
 430              	.LVL19:
 431              	.L24:
 432              		.align	2
 433              	.L23:
 434 004c 00000000 		.word	.LANCHOR1
 435 0050 00240140 		.word	1073816576
 436              		.cfi_endproc
 437              	.LFE974:
 439              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 440              		.align	1
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu softvfp
 446              	MX_LPUART1_UART_Init:
 447              	.LFB975:
 311:Core/Src/main.c **** 
 448              		.loc 1 311 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452 0000 08B5     		push	{r3, lr}
 453              	.LCFI5:
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 3, -8
 456              		.cfi_offset 14, -4
 320:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 9600;
 457              		.loc 1 320 3 view .LVU143
 320:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 9600;
 458              		.loc 1 320 21 is_stmt 0 view .LVU144
 459 0002 1748     		ldr	r0, .L35
 460 0004 174B     		ldr	r3, .L35+4
 461 0006 0360     		str	r3, [r0]
 321:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 462              		.loc 1 321 3 is_stmt 1 view .LVU145
 321:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 463              		.loc 1 321 26 is_stmt 0 view .LVU146
 464 0008 4FF41653 		mov	r3, #9600
 465 000c 4360     		str	r3, [r0, #4]
 322:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 466              		.loc 1 322 3 is_stmt 1 view .LVU147
 322:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 467              		.loc 1 322 28 is_stmt 0 view .LVU148
 468 000e 0023     		movs	r3, #0
 469 0010 8360     		str	r3, [r0, #8]
 323:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 470              		.loc 1 323 3 is_stmt 1 view .LVU149
 323:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 471              		.loc 1 323 26 is_stmt 0 view .LVU150
 472 0012 C360     		str	r3, [r0, #12]
 324:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 473              		.loc 1 324 3 is_stmt 1 view .LVU151
 324:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 474              		.loc 1 324 24 is_stmt 0 view .LVU152
 475 0014 0361     		str	r3, [r0, #16]
ARM GAS  /tmp/ccZzxGTd.s 			page 33


 325:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 476              		.loc 1 325 3 is_stmt 1 view .LVU153
 325:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 477              		.loc 1 325 22 is_stmt 0 view .LVU154
 478 0016 0C22     		movs	r2, #12
 479 0018 4261     		str	r2, [r0, #20]
 326:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 480              		.loc 1 326 3 is_stmt 1 view .LVU155
 326:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 481              		.loc 1 326 27 is_stmt 0 view .LVU156
 482 001a 8361     		str	r3, [r0, #24]
 327:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 483              		.loc 1 327 3 is_stmt 1 view .LVU157
 327:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 484              		.loc 1 327 32 is_stmt 0 view .LVU158
 485 001c 0362     		str	r3, [r0, #32]
 328:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_SWAP_INIT;
 486              		.loc 1 328 3 is_stmt 1 view .LVU159
 328:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_SWAP_INIT;
 487              		.loc 1 328 32 is_stmt 0 view .LVU160
 488 001e 4362     		str	r3, [r0, #36]
 329:Core/Src/main.c ****   hlpuart1.AdvancedInit.Swap = UART_ADVFEATURE_SWAP_ENABLE;
 489              		.loc 1 329 3 is_stmt 1 view .LVU161
 329:Core/Src/main.c ****   hlpuart1.AdvancedInit.Swap = UART_ADVFEATURE_SWAP_ENABLE;
 490              		.loc 1 329 40 is_stmt 0 view .LVU162
 491 0020 0822     		movs	r2, #8
 492 0022 8262     		str	r2, [r0, #40]
 330:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 493              		.loc 1 330 3 is_stmt 1 view .LVU163
 330:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 494              		.loc 1 330 30 is_stmt 0 view .LVU164
 495 0024 4FF40042 		mov	r2, #32768
 496 0028 8263     		str	r2, [r0, #56]
 331:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 497              		.loc 1 331 3 is_stmt 1 view .LVU165
 331:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 498              		.loc 1 331 21 is_stmt 0 view .LVU166
 499 002a 4366     		str	r3, [r0, #100]
 332:Core/Src/main.c ****   {
 500              		.loc 1 332 3 is_stmt 1 view .LVU167
 332:Core/Src/main.c ****   {
 501              		.loc 1 332 7 is_stmt 0 view .LVU168
 502 002c FFF7FEFF 		bl	HAL_UART_Init
 503              	.LVL20:
 332:Core/Src/main.c ****   {
 504              		.loc 1 332 6 view .LVU169
 505 0030 70B9     		cbnz	r0, .L31
 336:Core/Src/main.c ****   {
 506              		.loc 1 336 3 is_stmt 1 view .LVU170
 336:Core/Src/main.c ****   {
 507              		.loc 1 336 7 is_stmt 0 view .LVU171
 508 0032 0021     		movs	r1, #0
 509 0034 0A48     		ldr	r0, .L35
 510 0036 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 511              	.LVL21:
 336:Core/Src/main.c ****   {
 512              		.loc 1 336 6 view .LVU172
ARM GAS  /tmp/ccZzxGTd.s 			page 34


 513 003a 58B9     		cbnz	r0, .L32
 340:Core/Src/main.c ****   {
 514              		.loc 1 340 3 is_stmt 1 view .LVU173
 340:Core/Src/main.c ****   {
 515              		.loc 1 340 7 is_stmt 0 view .LVU174
 516 003c 0021     		movs	r1, #0
 517 003e 0848     		ldr	r0, .L35
 518 0040 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 519              	.LVL22:
 340:Core/Src/main.c ****   {
 520              		.loc 1 340 6 view .LVU175
 521 0044 40B9     		cbnz	r0, .L33
 344:Core/Src/main.c ****   {
 522              		.loc 1 344 3 is_stmt 1 view .LVU176
 344:Core/Src/main.c ****   {
 523              		.loc 1 344 7 is_stmt 0 view .LVU177
 524 0046 0648     		ldr	r0, .L35
 525 0048 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 526              	.LVL23:
 344:Core/Src/main.c ****   {
 527              		.loc 1 344 6 view .LVU178
 528 004c 30B9     		cbnz	r0, .L34
 352:Core/Src/main.c **** 
 529              		.loc 1 352 1 view .LVU179
 530 004e 08BD     		pop	{r3, pc}
 531              	.L31:
 334:Core/Src/main.c ****   }
 532              		.loc 1 334 5 is_stmt 1 view .LVU180
 533 0050 FFF7FEFF 		bl	Error_Handler
 534              	.LVL24:
 535              	.L32:
 338:Core/Src/main.c ****   }
 536              		.loc 1 338 5 view .LVU181
 537 0054 FFF7FEFF 		bl	Error_Handler
 538              	.LVL25:
 539              	.L33:
 342:Core/Src/main.c ****   }
 540              		.loc 1 342 5 view .LVU182
 541 0058 FFF7FEFF 		bl	Error_Handler
 542              	.LVL26:
 543              	.L34:
 346:Core/Src/main.c ****   }
 544              		.loc 1 346 5 view .LVU183
 545 005c FFF7FEFF 		bl	Error_Handler
 546              	.LVL27:
 547              	.L36:
 548              		.align	2
 549              	.L35:
 550 0060 00000000 		.word	.LANCHOR2
 551 0064 00800040 		.word	1073774592
 552              		.cfi_endproc
 553              	.LFE975:
 555              		.section	.text.MX_TIM1_Init,"ax",%progbits
 556              		.align	1
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
ARM GAS  /tmp/ccZzxGTd.s 			page 35


 560              		.fpu softvfp
 562              	MX_TIM1_Init:
 563              	.LFB977:
 408:Core/Src/main.c **** 
 564              		.loc 1 408 1 view -0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 112
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568 0000 10B5     		push	{r4, lr}
 569              	.LCFI6:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 4, -8
 572              		.cfi_offset 14, -4
 573 0002 9CB0     		sub	sp, sp, #112
 574              	.LCFI7:
 575              		.cfi_def_cfa_offset 120
 414:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 576              		.loc 1 414 3 view .LVU185
 414:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 577              		.loc 1 414 26 is_stmt 0 view .LVU186
 578 0004 0024     		movs	r4, #0
 579 0006 1894     		str	r4, [sp, #96]
 580 0008 1994     		str	r4, [sp, #100]
 581 000a 1A94     		str	r4, [sp, #104]
 582 000c 1B94     		str	r4, [sp, #108]
 415:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 583              		.loc 1 415 3 is_stmt 1 view .LVU187
 415:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 584              		.loc 1 415 27 is_stmt 0 view .LVU188
 585 000e 1594     		str	r4, [sp, #84]
 586 0010 1694     		str	r4, [sp, #88]
 587 0012 1794     		str	r4, [sp, #92]
 416:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 588              		.loc 1 416 3 is_stmt 1 view .LVU189
 416:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 589              		.loc 1 416 22 is_stmt 0 view .LVU190
 590 0014 0E94     		str	r4, [sp, #56]
 591 0016 0F94     		str	r4, [sp, #60]
 592 0018 1094     		str	r4, [sp, #64]
 593 001a 1194     		str	r4, [sp, #68]
 594 001c 1294     		str	r4, [sp, #72]
 595 001e 1394     		str	r4, [sp, #76]
 596 0020 1494     		str	r4, [sp, #80]
 417:Core/Src/main.c **** 
 597              		.loc 1 417 3 is_stmt 1 view .LVU191
 417:Core/Src/main.c **** 
 598              		.loc 1 417 34 is_stmt 0 view .LVU192
 599 0022 3422     		movs	r2, #52
 600 0024 2146     		mov	r1, r4
 601 0026 01A8     		add	r0, sp, #4
 602 0028 FFF7FEFF 		bl	memset
 603              	.LVL28:
 422:Core/Src/main.c ****   htim1.Init.Prescaler = 2400;
 604              		.loc 1 422 3 is_stmt 1 view .LVU193
 422:Core/Src/main.c ****   htim1.Init.Prescaler = 2400;
 605              		.loc 1 422 18 is_stmt 0 view .LVU194
 606 002c 2F48     		ldr	r0, .L51
ARM GAS  /tmp/ccZzxGTd.s 			page 36


 607 002e 304B     		ldr	r3, .L51+4
 608 0030 0360     		str	r3, [r0]
 423:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 609              		.loc 1 423 3 is_stmt 1 view .LVU195
 423:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 610              		.loc 1 423 24 is_stmt 0 view .LVU196
 611 0032 4FF41663 		mov	r3, #2400
 612 0036 4360     		str	r3, [r0, #4]
 424:Core/Src/main.c ****   htim1.Init.Period = 3;
 613              		.loc 1 424 3 is_stmt 1 view .LVU197
 424:Core/Src/main.c ****   htim1.Init.Period = 3;
 614              		.loc 1 424 26 is_stmt 0 view .LVU198
 615 0038 8460     		str	r4, [r0, #8]
 425:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 616              		.loc 1 425 3 is_stmt 1 view .LVU199
 425:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 617              		.loc 1 425 21 is_stmt 0 view .LVU200
 618 003a 0323     		movs	r3, #3
 619 003c C360     		str	r3, [r0, #12]
 426:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 620              		.loc 1 426 3 is_stmt 1 view .LVU201
 426:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 621              		.loc 1 426 28 is_stmt 0 view .LVU202
 622 003e 0461     		str	r4, [r0, #16]
 427:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 623              		.loc 1 427 3 is_stmt 1 view .LVU203
 427:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 624              		.loc 1 427 32 is_stmt 0 view .LVU204
 625 0040 4461     		str	r4, [r0, #20]
 428:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 626              		.loc 1 428 3 is_stmt 1 view .LVU205
 428:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 627              		.loc 1 428 32 is_stmt 0 view .LVU206
 628 0042 8461     		str	r4, [r0, #24]
 429:Core/Src/main.c ****   {
 629              		.loc 1 429 3 is_stmt 1 view .LVU207
 429:Core/Src/main.c ****   {
 630              		.loc 1 429 7 is_stmt 0 view .LVU208
 631 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
 632              	.LVL29:
 429:Core/Src/main.c ****   {
 633              		.loc 1 429 6 view .LVU209
 634 0048 0028     		cmp	r0, #0
 635 004a 43D1     		bne	.L45
 433:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 636              		.loc 1 433 3 is_stmt 1 view .LVU210
 433:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 637              		.loc 1 433 34 is_stmt 0 view .LVU211
 638 004c 4FF48053 		mov	r3, #4096
 639 0050 1893     		str	r3, [sp, #96]
 434:Core/Src/main.c ****   {
 640              		.loc 1 434 3 is_stmt 1 view .LVU212
 434:Core/Src/main.c ****   {
 641              		.loc 1 434 7 is_stmt 0 view .LVU213
 642 0052 18A9     		add	r1, sp, #96
 643 0054 2548     		ldr	r0, .L51
 644 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
ARM GAS  /tmp/ccZzxGTd.s 			page 37


 645              	.LVL30:
 434:Core/Src/main.c ****   {
 646              		.loc 1 434 6 view .LVU214
 647 005a 0028     		cmp	r0, #0
 648 005c 3CD1     		bne	.L46
 438:Core/Src/main.c ****   {
 649              		.loc 1 438 3 is_stmt 1 view .LVU215
 438:Core/Src/main.c ****   {
 650              		.loc 1 438 7 is_stmt 0 view .LVU216
 651 005e 2348     		ldr	r0, .L51
 652 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 653              	.LVL31:
 438:Core/Src/main.c ****   {
 654              		.loc 1 438 6 view .LVU217
 655 0064 0028     		cmp	r0, #0
 656 0066 39D1     		bne	.L47
 442:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 657              		.loc 1 442 3 is_stmt 1 view .LVU218
 442:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 658              		.loc 1 442 37 is_stmt 0 view .LVU219
 659 0068 0023     		movs	r3, #0
 660 006a 1593     		str	r3, [sp, #84]
 443:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 661              		.loc 1 443 3 is_stmt 1 view .LVU220
 443:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 662              		.loc 1 443 38 is_stmt 0 view .LVU221
 663 006c 1693     		str	r3, [sp, #88]
 444:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 664              		.loc 1 444 3 is_stmt 1 view .LVU222
 444:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 665              		.loc 1 444 33 is_stmt 0 view .LVU223
 666 006e 1793     		str	r3, [sp, #92]
 445:Core/Src/main.c ****   {
 667              		.loc 1 445 3 is_stmt 1 view .LVU224
 445:Core/Src/main.c ****   {
 668              		.loc 1 445 7 is_stmt 0 view .LVU225
 669 0070 15A9     		add	r1, sp, #84
 670 0072 1E48     		ldr	r0, .L51
 671 0074 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 672              	.LVL32:
 445:Core/Src/main.c ****   {
 673              		.loc 1 445 6 view .LVU226
 674 0078 0028     		cmp	r0, #0
 675 007a 31D1     		bne	.L48
 449:Core/Src/main.c ****   sConfigOC.Pulse = 2;
 676              		.loc 1 449 3 is_stmt 1 view .LVU227
 449:Core/Src/main.c ****   sConfigOC.Pulse = 2;
 677              		.loc 1 449 20 is_stmt 0 view .LVU228
 678 007c 6023     		movs	r3, #96
 679 007e 0E93     		str	r3, [sp, #56]
 450:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 680              		.loc 1 450 3 is_stmt 1 view .LVU229
 450:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 681              		.loc 1 450 19 is_stmt 0 view .LVU230
 682 0080 0223     		movs	r3, #2
 683 0082 0F93     		str	r3, [sp, #60]
 451:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
ARM GAS  /tmp/ccZzxGTd.s 			page 38


 684              		.loc 1 451 3 is_stmt 1 view .LVU231
 451:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 685              		.loc 1 451 24 is_stmt 0 view .LVU232
 686 0084 0023     		movs	r3, #0
 687 0086 1093     		str	r3, [sp, #64]
 452:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 688              		.loc 1 452 3 is_stmt 1 view .LVU233
 452:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 689              		.loc 1 452 24 is_stmt 0 view .LVU234
 690 0088 0422     		movs	r2, #4
 691 008a 1292     		str	r2, [sp, #72]
 453:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 692              		.loc 1 453 3 is_stmt 1 view .LVU235
 453:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 693              		.loc 1 453 25 is_stmt 0 view .LVU236
 694 008c 1393     		str	r3, [sp, #76]
 454:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 695              		.loc 1 454 3 is_stmt 1 view .LVU237
 454:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 696              		.loc 1 454 26 is_stmt 0 view .LVU238
 697 008e 1493     		str	r3, [sp, #80]
 455:Core/Src/main.c ****   {
 698              		.loc 1 455 3 is_stmt 1 view .LVU239
 455:Core/Src/main.c ****   {
 699              		.loc 1 455 7 is_stmt 0 view .LVU240
 700 0090 0C22     		movs	r2, #12
 701 0092 0EA9     		add	r1, sp, #56
 702 0094 1548     		ldr	r0, .L51
 703 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 704              	.LVL33:
 455:Core/Src/main.c ****   {
 705              		.loc 1 455 6 view .LVU241
 706 009a 18BB     		cbnz	r0, .L49
 459:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 707              		.loc 1 459 3 is_stmt 1 view .LVU242
 459:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 708              		.loc 1 459 40 is_stmt 0 view .LVU243
 709 009c 0023     		movs	r3, #0
 710 009e 0193     		str	r3, [sp, #4]
 460:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 711              		.loc 1 460 3 is_stmt 1 view .LVU244
 460:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 712              		.loc 1 460 41 is_stmt 0 view .LVU245
 713 00a0 0293     		str	r3, [sp, #8]
 461:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 714              		.loc 1 461 3 is_stmt 1 view .LVU246
 461:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 715              		.loc 1 461 34 is_stmt 0 view .LVU247
 716 00a2 0393     		str	r3, [sp, #12]
 462:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 717              		.loc 1 462 3 is_stmt 1 view .LVU248
 462:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 718              		.loc 1 462 33 is_stmt 0 view .LVU249
 719 00a4 0493     		str	r3, [sp, #16]
 463:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 720              		.loc 1 463 3 is_stmt 1 view .LVU250
 463:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
ARM GAS  /tmp/ccZzxGTd.s 			page 39


 721              		.loc 1 463 35 is_stmt 0 view .LVU251
 722 00a6 0593     		str	r3, [sp, #20]
 464:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 723              		.loc 1 464 3 is_stmt 1 view .LVU252
 464:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 724              		.loc 1 464 38 is_stmt 0 view .LVU253
 725 00a8 4FF40052 		mov	r2, #8192
 726 00ac 0692     		str	r2, [sp, #24]
 465:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 727              		.loc 1 465 3 is_stmt 1 view .LVU254
 465:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 728              		.loc 1 465 36 is_stmt 0 view .LVU255
 729 00ae 0793     		str	r3, [sp, #28]
 466:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 730              		.loc 1 466 3 is_stmt 1 view .LVU256
 466:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 731              		.loc 1 466 36 is_stmt 0 view .LVU257
 732 00b0 0893     		str	r3, [sp, #32]
 467:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 733              		.loc 1 467 3 is_stmt 1 view .LVU258
 467:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 734              		.loc 1 467 36 is_stmt 0 view .LVU259
 735 00b2 0993     		str	r3, [sp, #36]
 468:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 736              		.loc 1 468 3 is_stmt 1 view .LVU260
 468:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 737              		.loc 1 468 39 is_stmt 0 view .LVU261
 738 00b4 4FF00072 		mov	r2, #33554432
 739 00b8 0A92     		str	r2, [sp, #40]
 469:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 740              		.loc 1 469 3 is_stmt 1 view .LVU262
 469:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 741              		.loc 1 469 37 is_stmt 0 view .LVU263
 742 00ba 0B93     		str	r3, [sp, #44]
 470:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 743              		.loc 1 470 3 is_stmt 1 view .LVU264
 470:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 744              		.loc 1 470 37 is_stmt 0 view .LVU265
 745 00bc 0C93     		str	r3, [sp, #48]
 471:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 746              		.loc 1 471 3 is_stmt 1 view .LVU266
 471:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 747              		.loc 1 471 40 is_stmt 0 view .LVU267
 748 00be 0D93     		str	r3, [sp, #52]
 472:Core/Src/main.c ****   {
 749              		.loc 1 472 3 is_stmt 1 view .LVU268
 472:Core/Src/main.c ****   {
 750              		.loc 1 472 7 is_stmt 0 view .LVU269
 751 00c0 01A9     		add	r1, sp, #4
 752 00c2 0A48     		ldr	r0, .L51
 753 00c4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 754              	.LVL34:
 472:Core/Src/main.c ****   {
 755              		.loc 1 472 6 view .LVU270
 756 00c8 70B9     		cbnz	r0, .L50
 479:Core/Src/main.c **** 
 757              		.loc 1 479 3 is_stmt 1 view .LVU271
ARM GAS  /tmp/ccZzxGTd.s 			page 40


 758 00ca 0848     		ldr	r0, .L51
 759 00cc FFF7FEFF 		bl	HAL_TIM_MspPostInit
 760              	.LVL35:
 481:Core/Src/main.c **** 
 761              		.loc 1 481 1 is_stmt 0 view .LVU272
 762 00d0 1CB0     		add	sp, sp, #112
 763              	.LCFI8:
 764              		.cfi_remember_state
 765              		.cfi_def_cfa_offset 8
 766              		@ sp needed
 767 00d2 10BD     		pop	{r4, pc}
 768              	.L45:
 769              	.LCFI9:
 770              		.cfi_restore_state
 431:Core/Src/main.c ****   }
 771              		.loc 1 431 5 is_stmt 1 view .LVU273
 772 00d4 FFF7FEFF 		bl	Error_Handler
 773              	.LVL36:
 774              	.L46:
 436:Core/Src/main.c ****   }
 775              		.loc 1 436 5 view .LVU274
 776 00d8 FFF7FEFF 		bl	Error_Handler
 777              	.LVL37:
 778              	.L47:
 440:Core/Src/main.c ****   }
 779              		.loc 1 440 5 view .LVU275
 780 00dc FFF7FEFF 		bl	Error_Handler
 781              	.LVL38:
 782              	.L48:
 447:Core/Src/main.c ****   }
 783              		.loc 1 447 5 view .LVU276
 784 00e0 FFF7FEFF 		bl	Error_Handler
 785              	.LVL39:
 786              	.L49:
 457:Core/Src/main.c ****   }
 787              		.loc 1 457 5 view .LVU277
 788 00e4 FFF7FEFF 		bl	Error_Handler
 789              	.LVL40:
 790              	.L50:
 474:Core/Src/main.c ****   }
 791              		.loc 1 474 5 view .LVU278
 792 00e8 FFF7FEFF 		bl	Error_Handler
 793              	.LVL41:
 794              	.L52:
 795              		.align	2
 796              	.L51:
 797 00ec 00000000 		.word	.LANCHOR3
 798 00f0 002C0140 		.word	1073818624
 799              		.cfi_endproc
 800              	.LFE977:
 802              		.section	.text.MX_TIM2_Init,"ax",%progbits
 803              		.align	1
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu softvfp
 809              	MX_TIM2_Init:
ARM GAS  /tmp/ccZzxGTd.s 			page 41


 810              	.LFB978:
 489:Core/Src/main.c **** 
 811              		.loc 1 489 1 view -0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 32
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815 0000 00B5     		push	{lr}
 816              	.LCFI10:
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 14, -4
 819 0002 89B0     		sub	sp, sp, #36
 820              	.LCFI11:
 821              		.cfi_def_cfa_offset 40
 495:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 822              		.loc 1 495 3 view .LVU280
 495:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 823              		.loc 1 495 26 is_stmt 0 view .LVU281
 824 0004 0023     		movs	r3, #0
 825 0006 0493     		str	r3, [sp, #16]
 826 0008 0593     		str	r3, [sp, #20]
 827 000a 0693     		str	r3, [sp, #24]
 828 000c 0793     		str	r3, [sp, #28]
 496:Core/Src/main.c **** 
 829              		.loc 1 496 3 is_stmt 1 view .LVU282
 496:Core/Src/main.c **** 
 830              		.loc 1 496 27 is_stmt 0 view .LVU283
 831 000e 0193     		str	r3, [sp, #4]
 832 0010 0293     		str	r3, [sp, #8]
 833 0012 0393     		str	r3, [sp, #12]
 501:Core/Src/main.c ****   htim2.Init.Prescaler = 48000-1;
 834              		.loc 1 501 3 is_stmt 1 view .LVU284
 501:Core/Src/main.c ****   htim2.Init.Prescaler = 48000-1;
 835              		.loc 1 501 18 is_stmt 0 view .LVU285
 836 0014 1548     		ldr	r0, .L61
 837 0016 4FF08042 		mov	r2, #1073741824
 838 001a 0260     		str	r2, [r0]
 502:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 839              		.loc 1 502 3 is_stmt 1 view .LVU286
 502:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 840              		.loc 1 502 24 is_stmt 0 view .LVU287
 841 001c 4BF67F32 		movw	r2, #47999
 842 0020 4260     		str	r2, [r0, #4]
 503:Core/Src/main.c ****   htim2.Init.Period = 5000000;
 843              		.loc 1 503 3 is_stmt 1 view .LVU288
 503:Core/Src/main.c ****   htim2.Init.Period = 5000000;
 844              		.loc 1 503 26 is_stmt 0 view .LVU289
 845 0022 8360     		str	r3, [r0, #8]
 504:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 846              		.loc 1 504 3 is_stmt 1 view .LVU290
 504:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 847              		.loc 1 504 21 is_stmt 0 view .LVU291
 848 0024 02F59702 		add	r2, r2, #4947968
 849 0028 02F6C172 		addw	r2, r2, #4033
 850 002c C260     		str	r2, [r0, #12]
 505:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 851              		.loc 1 505 3 is_stmt 1 view .LVU292
 505:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  /tmp/ccZzxGTd.s 			page 42


 852              		.loc 1 505 28 is_stmt 0 view .LVU293
 853 002e 0361     		str	r3, [r0, #16]
 506:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 854              		.loc 1 506 3 is_stmt 1 view .LVU294
 506:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 855              		.loc 1 506 32 is_stmt 0 view .LVU295
 856 0030 8361     		str	r3, [r0, #24]
 507:Core/Src/main.c ****   {
 857              		.loc 1 507 3 is_stmt 1 view .LVU296
 507:Core/Src/main.c ****   {
 858              		.loc 1 507 7 is_stmt 0 view .LVU297
 859 0032 FFF7FEFF 		bl	HAL_TIM_Base_Init
 860              	.LVL42:
 507:Core/Src/main.c ****   {
 861              		.loc 1 507 6 view .LVU298
 862 0036 90B9     		cbnz	r0, .L58
 511:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 863              		.loc 1 511 3 is_stmt 1 view .LVU299
 511:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 864              		.loc 1 511 34 is_stmt 0 view .LVU300
 865 0038 4FF48053 		mov	r3, #4096
 866 003c 0493     		str	r3, [sp, #16]
 512:Core/Src/main.c ****   {
 867              		.loc 1 512 3 is_stmt 1 view .LVU301
 512:Core/Src/main.c ****   {
 868              		.loc 1 512 7 is_stmt 0 view .LVU302
 869 003e 04A9     		add	r1, sp, #16
 870 0040 0A48     		ldr	r0, .L61
 871 0042 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 872              	.LVL43:
 512:Core/Src/main.c ****   {
 873              		.loc 1 512 6 view .LVU303
 874 0046 60B9     		cbnz	r0, .L59
 516:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 875              		.loc 1 516 3 is_stmt 1 view .LVU304
 516:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 876              		.loc 1 516 37 is_stmt 0 view .LVU305
 877 0048 0023     		movs	r3, #0
 878 004a 0193     		str	r3, [sp, #4]
 517:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 879              		.loc 1 517 3 is_stmt 1 view .LVU306
 517:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 880              		.loc 1 517 33 is_stmt 0 view .LVU307
 881 004c 0393     		str	r3, [sp, #12]
 518:Core/Src/main.c ****   {
 882              		.loc 1 518 3 is_stmt 1 view .LVU308
 518:Core/Src/main.c ****   {
 883              		.loc 1 518 7 is_stmt 0 view .LVU309
 884 004e 01A9     		add	r1, sp, #4
 885 0050 0648     		ldr	r0, .L61
 886 0052 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 887              	.LVL44:
 518:Core/Src/main.c ****   {
 888              		.loc 1 518 6 view .LVU310
 889 0056 30B9     		cbnz	r0, .L60
 526:Core/Src/main.c **** 
 890              		.loc 1 526 1 view .LVU311
ARM GAS  /tmp/ccZzxGTd.s 			page 43


 891 0058 09B0     		add	sp, sp, #36
 892              	.LCFI12:
 893              		.cfi_remember_state
 894              		.cfi_def_cfa_offset 4
 895              		@ sp needed
 896 005a 5DF804FB 		ldr	pc, [sp], #4
 897              	.L58:
 898              	.LCFI13:
 899              		.cfi_restore_state
 509:Core/Src/main.c ****   }
 900              		.loc 1 509 5 is_stmt 1 view .LVU312
 901 005e FFF7FEFF 		bl	Error_Handler
 902              	.LVL45:
 903              	.L59:
 514:Core/Src/main.c ****   }
 904              		.loc 1 514 5 view .LVU313
 905 0062 FFF7FEFF 		bl	Error_Handler
 906              	.LVL46:
 907              	.L60:
 520:Core/Src/main.c ****   }
 908              		.loc 1 520 5 view .LVU314
 909 0066 FFF7FEFF 		bl	Error_Handler
 910              	.LVL47:
 911              	.L62:
 912 006a 00BF     		.align	2
 913              	.L61:
 914 006c 00000000 		.word	.LANCHOR4
 915              		.cfi_endproc
 916              	.LFE978:
 918              		.section	.text.SystemClock_Config,"ax",%progbits
 919              		.align	1
 920              		.global	SystemClock_Config
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 924              		.fpu softvfp
 926              	SystemClock_Config:
 927              	.LFB973:
 219:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 928              		.loc 1 219 1 view -0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 104
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932 0000 00B5     		push	{lr}
 933              	.LCFI14:
 934              		.cfi_def_cfa_offset 4
 935              		.cfi_offset 14, -4
 936 0002 9BB0     		sub	sp, sp, #108
 937              	.LCFI15:
 938              		.cfi_def_cfa_offset 112
 220:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 939              		.loc 1 220 3 view .LVU316
 220:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 940              		.loc 1 220 22 is_stmt 0 view .LVU317
 941 0004 4822     		movs	r2, #72
 942 0006 0021     		movs	r1, #0
 943 0008 08A8     		add	r0, sp, #32
ARM GAS  /tmp/ccZzxGTd.s 			page 44


 944 000a FFF7FEFF 		bl	memset
 945              	.LVL48:
 221:Core/Src/main.c **** 
 946              		.loc 1 221 3 is_stmt 1 view .LVU318
 221:Core/Src/main.c **** 
 947              		.loc 1 221 22 is_stmt 0 view .LVU319
 948 000e 0023     		movs	r3, #0
 949 0010 0193     		str	r3, [sp, #4]
 950 0012 0293     		str	r3, [sp, #8]
 951 0014 0393     		str	r3, [sp, #12]
 952 0016 0493     		str	r3, [sp, #16]
 953 0018 0593     		str	r3, [sp, #20]
 954 001a 0693     		str	r3, [sp, #24]
 955 001c 0793     		str	r3, [sp, #28]
 225:Core/Src/main.c **** 
 956              		.loc 1 225 3 is_stmt 1 view .LVU320
 957              	.LBB14:
 225:Core/Src/main.c **** 
 958              		.loc 1 225 3 view .LVU321
 225:Core/Src/main.c **** 
 959              		.loc 1 225 3 view .LVU322
 960 001e 1849     		ldr	r1, .L69
 961 0020 0A68     		ldr	r2, [r1]
 962 0022 22F4C062 		bic	r2, r2, #1536
 963 0026 42F40072 		orr	r2, r2, #512
 964 002a 0A60     		str	r2, [r1]
 225:Core/Src/main.c **** 
 965              		.loc 1 225 3 view .LVU323
 966 002c 0A68     		ldr	r2, [r1]
 967 002e 02F4C062 		and	r2, r2, #1536
 968 0032 0092     		str	r2, [sp]
 225:Core/Src/main.c **** 
 969              		.loc 1 225 3 view .LVU324
 970 0034 009A     		ldr	r2, [sp]
 971              	.LBE14:
 225:Core/Src/main.c **** 
 972              		.loc 1 225 3 view .LVU325
 229:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 973              		.loc 1 229 3 view .LVU326
 229:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 974              		.loc 1 229 36 is_stmt 0 view .LVU327
 975 0036 2222     		movs	r2, #34
 976 0038 0892     		str	r2, [sp, #32]
 230:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 977              		.loc 1 230 3 is_stmt 1 view .LVU328
 230:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 978              		.loc 1 230 30 is_stmt 0 view .LVU329
 979 003a 4FF48072 		mov	r2, #256
 980 003e 0C92     		str	r2, [sp, #48]
 231:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 981              		.loc 1 231 3 is_stmt 1 view .LVU330
 231:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 982              		.loc 1 231 30 is_stmt 0 view .LVU331
 983 0040 0122     		movs	r2, #1
 984 0042 1092     		str	r2, [sp, #64]
 232:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 985              		.loc 1 232 3 is_stmt 1 view .LVU332
ARM GAS  /tmp/ccZzxGTd.s 			page 45


 232:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 986              		.loc 1 232 41 is_stmt 0 view .LVU333
 987 0044 4022     		movs	r2, #64
 988 0046 0D92     		str	r2, [sp, #52]
 233:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_11;
 989              		.loc 1 233 3 is_stmt 1 view .LVU334
 233:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_11;
 990              		.loc 1 233 41 is_stmt 0 view .LVU335
 991 0048 1193     		str	r3, [sp, #68]
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 992              		.loc 1 234 3 is_stmt 1 view .LVU336
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 993              		.loc 1 234 35 is_stmt 0 view .LVU337
 994 004a B022     		movs	r2, #176
 995 004c 1292     		str	r2, [sp, #72]
 235:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 996              		.loc 1 235 3 is_stmt 1 view .LVU338
 235:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 997              		.loc 1 235 34 is_stmt 0 view .LVU339
 998 004e 1393     		str	r3, [sp, #76]
 236:Core/Src/main.c ****   {
 999              		.loc 1 236 3 is_stmt 1 view .LVU340
 236:Core/Src/main.c ****   {
 1000              		.loc 1 236 7 is_stmt 0 view .LVU341
 1001 0050 08A8     		add	r0, sp, #32
 1002 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1003              	.LVL49:
 236:Core/Src/main.c ****   {
 1004              		.loc 1 236 6 view .LVU342
 1005 0056 78B9     		cbnz	r0, .L67
 243:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 1006              		.loc 1 243 3 is_stmt 1 view .LVU343
 243:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 1007              		.loc 1 243 31 is_stmt 0 view .LVU344
 1008 0058 4F23     		movs	r3, #79
 1009 005a 0193     		str	r3, [sp, #4]
 246:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1010              		.loc 1 246 3 is_stmt 1 view .LVU345
 246:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1011              		.loc 1 246 34 is_stmt 0 view .LVU346
 1012 005c 0023     		movs	r3, #0
 1013 005e 0293     		str	r3, [sp, #8]
 247:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1014              		.loc 1 247 3 is_stmt 1 view .LVU347
 247:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1015              		.loc 1 247 35 is_stmt 0 view .LVU348
 1016 0060 0393     		str	r3, [sp, #12]
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1017              		.loc 1 248 3 is_stmt 1 view .LVU349
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1018              		.loc 1 248 36 is_stmt 0 view .LVU350
 1019 0062 0493     		str	r3, [sp, #16]
 249:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 1020              		.loc 1 249 3 is_stmt 1 view .LVU351
 249:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 1021              		.loc 1 249 36 is_stmt 0 view .LVU352
 1022 0064 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccZzxGTd.s 			page 46


 250:Core/Src/main.c **** 
 1023              		.loc 1 250 3 is_stmt 1 view .LVU353
 250:Core/Src/main.c **** 
 1024              		.loc 1 250 36 is_stmt 0 view .LVU354
 1025 0066 0793     		str	r3, [sp, #28]
 252:Core/Src/main.c ****   {
 1026              		.loc 1 252 3 is_stmt 1 view .LVU355
 252:Core/Src/main.c ****   {
 1027              		.loc 1 252 7 is_stmt 0 view .LVU356
 1028 0068 0221     		movs	r1, #2
 1029 006a 01A8     		add	r0, sp, #4
 1030 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1031              	.LVL50:
 252:Core/Src/main.c ****   {
 1032              		.loc 1 252 6 view .LVU357
 1033 0070 20B9     		cbnz	r0, .L68
 256:Core/Src/main.c **** 
 1034              		.loc 1 256 1 view .LVU358
 1035 0072 1BB0     		add	sp, sp, #108
 1036              	.LCFI16:
 1037              		.cfi_remember_state
 1038              		.cfi_def_cfa_offset 4
 1039              		@ sp needed
 1040 0074 5DF804FB 		ldr	pc, [sp], #4
 1041              	.L67:
 1042              	.LCFI17:
 1043              		.cfi_restore_state
 238:Core/Src/main.c ****   }
 1044              		.loc 1 238 5 is_stmt 1 view .LVU359
 1045 0078 FFF7FEFF 		bl	Error_Handler
 1046              	.LVL51:
 1047              	.L68:
 254:Core/Src/main.c ****   }
 1048              		.loc 1 254 5 view .LVU360
 1049 007c FFF7FEFF 		bl	Error_Handler
 1050              	.LVL52:
 1051              	.L70:
 1052              		.align	2
 1053              	.L69:
 1054 0080 00040058 		.word	1476396032
 1055              		.cfi_endproc
 1056              	.LFE973:
 1058              		.global	__aeabi_d2uiz
 1059              		.section	.text.main,"ax",%progbits
 1060              		.align	1
 1061              		.global	main
 1062              		.syntax unified
 1063              		.thumb
 1064              		.thumb_func
 1065              		.fpu softvfp
 1067              	main:
 1068              	.LFB972:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1069              		.loc 1 92 1 view -0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 112
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccZzxGTd.s 			page 47


 1073 0000 70B5     		push	{r4, r5, r6, lr}
 1074              	.LCFI18:
 1075              		.cfi_def_cfa_offset 16
 1076              		.cfi_offset 4, -16
 1077              		.cfi_offset 5, -12
 1078              		.cfi_offset 6, -8
 1079              		.cfi_offset 14, -4
 1080 0002 9CB0     		sub	sp, sp, #112
 1081              	.LCFI19:
 1082              		.cfi_def_cfa_offset 128
  94:Core/Src/main.c ****   /* USER CODE END 1 */
 1083              		.loc 1 94 2 view .LVU362
  94:Core/Src/main.c ****   /* USER CODE END 1 */
 1084              		.loc 1 94 9 is_stmt 0 view .LVU363
 1085 0004 0026     		movs	r6, #0
 1086 0006 864B     		ldr	r3, .L82
 1087 0008 1E70     		strb	r6, [r3]
 100:Core/Src/main.c **** 
 1088              		.loc 1 100 3 is_stmt 1 view .LVU364
 1089 000a FFF7FEFF 		bl	HAL_Init
 1090              	.LVL53:
 106:Core/Src/main.c **** 
 1091              		.loc 1 106 3 view .LVU365
 1092 000e FFF7FEFF 		bl	SystemClock_Config
 1093              	.LVL54:
 113:Core/Src/main.c ****   MX_USART1_UART_Init();
 1094              		.loc 1 113 3 view .LVU366
 1095 0012 FFF7FEFF 		bl	MX_GPIO_Init
 1096              	.LVL55:
 114:Core/Src/main.c ****   MX_ADC_Init();
 1097              		.loc 1 114 3 view .LVU367
 1098 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1099              	.LVL56:
 115:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 1100              		.loc 1 115 3 view .LVU368
 1101 001a FFF7FEFF 		bl	MX_ADC_Init
 1102              	.LVL57:
 116:Core/Src/main.c ****   MX_TIM1_Init();
 1103              		.loc 1 116 3 view .LVU369
 1104 001e FFF7FEFF 		bl	MX_LPUART1_UART_Init
 1105              	.LVL58:
 117:Core/Src/main.c ****   MX_TIM2_Init();
 1106              		.loc 1 117 3 view .LVU370
 1107 0022 FFF7FEFF 		bl	MX_TIM1_Init
 1108              	.LVL59:
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1109              		.loc 1 118 3 view .LVU371
 1110 0026 FFF7FEFF 		bl	MX_TIM2_Init
 1111              	.LVL60:
 120:Core/Src/main.c ****   HAL_GPIO_WritePin(IDLE_GPIO_Port, IDLE_Pin, GPIO_PIN_RESET);
 1112              		.loc 1 120 3 view .LVU372
 1113 002a 7E4C     		ldr	r4, .L82+4
 1114 002c 0122     		movs	r2, #1
 1115 002e 4FF48071 		mov	r1, #256
 1116 0032 2046     		mov	r0, r4
 1117 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1118              	.LVL61:
ARM GAS  /tmp/ccZzxGTd.s 			page 48


 121:Core/Src/main.c ****   HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_SET);
 1119              		.loc 1 121 3 view .LVU373
 1120 0038 3246     		mov	r2, r6
 1121 003a 4FF48071 		mov	r1, #256
 1122 003e 2046     		mov	r0, r4
 1123 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1124              	.LVL62:
 122:Core/Src/main.c ****   HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 1125              		.loc 1 122 3 view .LVU374
 1126 0044 0122     		movs	r2, #1
 1127 0046 0221     		movs	r1, #2
 1128 0048 4FF09040 		mov	r0, #1207959552
 1129 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1130              	.LVL63:
 123:Core/Src/main.c ****   HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_SET);
 1131              		.loc 1 123 3 view .LVU375
 1132 0050 3246     		mov	r2, r6
 1133 0052 0221     		movs	r1, #2
 1134 0054 4FF09040 		mov	r0, #1207959552
 1135 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1136              	.LVL64:
 124:Core/Src/main.c ****   HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_RESET);
 1137              		.loc 1 124 3 view .LVU376
 1138 005c 0122     		movs	r2, #1
 1139 005e 1146     		mov	r1, r2
 1140 0060 4FF09040 		mov	r0, #1207959552
 1141 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1142              	.LVL65:
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_SET);
 1143              		.loc 1 125 3 view .LVU377
 1144 0068 3246     		mov	r2, r6
 1145 006a 0121     		movs	r1, #1
 1146 006c 4FF09040 		mov	r0, #1207959552
 1147 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1148              	.LVL66:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_RESET);
 1149              		.loc 1 126 3 view .LVU378
 1150 0074 0122     		movs	r2, #1
 1151 0076 2021     		movs	r1, #32
 1152 0078 2046     		mov	r0, r4
 1153 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1154              	.LVL67:
 127:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
 1155              		.loc 1 127 3 view .LVU379
 1156 007e 3246     		mov	r2, r6
 1157 0080 2021     		movs	r1, #32
 1158 0082 2046     		mov	r0, r4
 1159 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1160              	.LVL68:
 128:Core/Src/main.c ****   /* USER CODE END 2 */
 1161              		.loc 1 128 3 view .LVU380
 1162 0088 6748     		ldr	r0, .L82+8
 1163 008a FFF7FEFF 		bl	HAL_TIM_Base_Start
 1164              	.LVL69:
 133:Core/Src/main.c ****   nmea_gpgga_t testgps2 = {"170921.000","4006.9135",'N',"08813.6236",'W','1','7'};
 1165              		.loc 1 133 3 view .LVU381
 133:Core/Src/main.c ****   nmea_gpgga_t testgps2 = {"170921.000","4006.9135",'N',"08813.6236",'W','1','7'};
ARM GAS  /tmp/ccZzxGTd.s 			page 49


 1166              		.loc 1 133 16 is_stmt 0 view .LVU382
 1167 008e 674C     		ldr	r4, .L82+12
 1168 0090 13AD     		add	r5, sp, #76
 1169 0092 A446     		mov	ip, r4
 1170 0094 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1171 0098 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1172 009a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1173 009e 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1174 00a0 DCF80030 		ldr	r3, [ip]
 1175 00a4 2B70     		strb	r3, [r5]
 134:Core/Src/main.c ****   // GPS counter -- poll GPS once every 30 seconds 
 1176              		.loc 1 134 3 is_stmt 1 view .LVU383
 134:Core/Src/main.c ****   // GPS counter -- poll GPS once every 30 seconds 
 1177              		.loc 1 134 16 is_stmt 0 view .LVU384
 1178 00a6 0AAD     		add	r5, sp, #40
 1179 00a8 2434     		adds	r4, r4, #36
 1180 00aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1181 00ac 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1182 00ae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1183 00b0 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1184 00b2 2368     		ldr	r3, [r4]
 1185 00b4 2B70     		strb	r3, [r5]
 136:Core/Src/main.c ****   int getgpstime=0;
 1186              		.loc 1 136 3 is_stmt 1 view .LVU385
 1187              	.LVL70:
 137:Core/Src/main.c ****   uint32_t distbuffer[10] = {0};
 1188              		.loc 1 137 3 view .LVU386
 138:Core/Src/main.c ****   uint32_t latest_dist=0;
 1189              		.loc 1 138 3 view .LVU387
 138:Core/Src/main.c ****   uint32_t latest_dist=0;
 1190              		.loc 1 138 12 is_stmt 0 view .LVU388
 1191 00b6 2822     		movs	r2, #40
 1192 00b8 3146     		mov	r1, r6
 1193 00ba 6846     		mov	r0, sp
 1194 00bc FFF7FEFF 		bl	memset
 1195              	.LVL71:
 139:Core/Src/main.c ****   uint32_t full_dist=0;
 1196              		.loc 1 139 3 is_stmt 1 view .LVU389
 140:Core/Src/main.c ****   while (1)
 1197              		.loc 1 140 3 view .LVU390
 140:Core/Src/main.c ****   while (1)
 1198              		.loc 1 140 3 is_stmt 0 view .LVU391
 1199 00c0 93E0     		b	.L73
 1200              	.LVL72:
 1201              	.L78:
 1202              	.LBB15:
 1203              	.LBB16:
 167:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 1204              		.loc 1 167 5 is_stmt 1 view .LVU392
 1205 00c2 584D     		ldr	r5, .L82+4
 1206 00c4 0122     		movs	r2, #1
 1207 00c6 4FF48071 		mov	r1, #256
 1208 00ca 2846     		mov	r0, r5
 1209              	.LVL73:
 167:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 1210              		.loc 1 167 5 is_stmt 0 view .LVU393
 1211 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccZzxGTd.s 			page 50


 1212              	.LVL74:
 168:Core/Src/main.c **** 		  HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_RESET);
 1213              		.loc 1 168 5 is_stmt 1 view .LVU394
 1214 00d0 0022     		movs	r2, #0
 1215 00d2 0221     		movs	r1, #2
 1216 00d4 4FF09040 		mov	r0, #1207959552
 1217 00d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1218              	.LVL75:
 169:Core/Src/main.c **** 		  HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_RESET);
 1219              		.loc 1 169 5 view .LVU395
 1220 00dc 0022     		movs	r2, #0
 1221 00de 0121     		movs	r1, #1
 1222 00e0 4FF09040 		mov	r0, #1207959552
 1223 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1224              	.LVL76:
 170:Core/Src/main.c ****       // state transition for idle->unlocked is in the LPUART IRQ
 1225              		.loc 1 170 5 view .LVU396
 1226 00e8 0022     		movs	r2, #0
 1227 00ea 2021     		movs	r1, #32
 1228 00ec 2846     		mov	r0, r5
 1229 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1230              	.LVL77:
 172:Core/Src/main.c **** 		  if (full_dist>5){
 1231              		.loc 1 172 5 view .LVU397
 172:Core/Src/main.c **** 		  if (full_dist>5){
 1232              		.loc 1 172 29 is_stmt 0 view .LVU398
 1233 00f2 2822     		movs	r2, #40
 1234 00f4 4E49     		ldr	r1, .L82+16
 1235 00f6 4F48     		ldr	r0, .L82+20
 1236 00f8 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1237              	.LVL78:
 173:Core/Src/main.c ****         mystate=BT_ALARM;
 1238              		.loc 1 173 5 is_stmt 1 view .LVU399
 173:Core/Src/main.c ****         mystate=BT_ALARM;
 1239              		.loc 1 173 8 is_stmt 0 view .LVU400
 1240 00fc 052C     		cmp	r4, #5
 1241 00fe 74D9     		bls	.L73
 174:Core/Src/main.c ****       }
 1242              		.loc 1 174 9 is_stmt 1 view .LVU401
 174:Core/Src/main.c ****       }
 1243              		.loc 1 174 16 is_stmt 0 view .LVU402
 1244 0100 474B     		ldr	r3, .L82
 1245 0102 0322     		movs	r2, #3
 1246 0104 1A70     		strb	r2, [r3]
 1247 0106 70E0     		b	.L73
 1248              	.LVL79:
 1249              	.L77:
 179:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_SET);
 1250              		.loc 1 179 5 is_stmt 1 view .LVU403
 1251 0108 464D     		ldr	r5, .L82+4
 1252 010a 0022     		movs	r2, #0
 1253 010c 4FF48071 		mov	r1, #256
 1254 0110 2846     		mov	r0, r5
 1255              	.LVL80:
 179:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_SET);
 1256              		.loc 1 179 5 is_stmt 0 view .LVU404
 1257 0112 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccZzxGTd.s 			page 51


 1258              	.LVL81:
 180:Core/Src/main.c **** 		  HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_RESET);
 1259              		.loc 1 180 5 is_stmt 1 view .LVU405
 1260 0116 0122     		movs	r2, #1
 1261 0118 0221     		movs	r1, #2
 1262 011a 4FF09040 		mov	r0, #1207959552
 1263 011e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1264              	.LVL82:
 181:Core/Src/main.c **** 		  HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_RESET);
 1265              		.loc 1 181 5 view .LVU406
 1266 0122 0022     		movs	r2, #0
 1267 0124 0121     		movs	r1, #1
 1268 0126 4FF09040 		mov	r0, #1207959552
 1269 012a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1270              	.LVL83:
 182:Core/Src/main.c ****       int unlocked_time = __HAL_TIM_GET_COUNTER(&htim2);
 1271              		.loc 1 182 5 view .LVU407
 1272 012e 0022     		movs	r2, #0
 1273 0130 2021     		movs	r1, #32
 1274 0132 2846     		mov	r0, r5
 1275 0134 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1276              	.LVL84:
 183:Core/Src/main.c ****       if ((unlocked_time - rfidstarttime) > 5000){
 1277              		.loc 1 183 7 view .LVU408
 183:Core/Src/main.c ****       if ((unlocked_time - rfidstarttime) > 5000){
 1278              		.loc 1 183 27 is_stmt 0 view .LVU409
 1279 0138 3B4B     		ldr	r3, .L82+8
 1280 013a 1B68     		ldr	r3, [r3]
 1281 013c 5B6A     		ldr	r3, [r3, #36]
 1282              	.LVL85:
 184:Core/Src/main.c ****         mystate=BT_IDLE;
 1283              		.loc 1 184 7 is_stmt 1 view .LVU410
 184:Core/Src/main.c ****         mystate=BT_IDLE;
 1284              		.loc 1 184 26 is_stmt 0 view .LVU411
 1285 013e 3E4A     		ldr	r2, .L82+24
 1286 0140 1268     		ldr	r2, [r2]
 1287 0142 9B1A     		subs	r3, r3, r2
 1288              	.LVL86:
 184:Core/Src/main.c ****         mystate=BT_IDLE;
 1289              		.loc 1 184 10 view .LVU412
 1290 0144 41F28832 		movw	r2, #5000
 1291 0148 9342     		cmp	r3, r2
 1292 014a 02D9     		bls	.L80
 185:Core/Src/main.c ****       }
 1293              		.loc 1 185 9 is_stmt 1 view .LVU413
 185:Core/Src/main.c ****       }
 1294              		.loc 1 185 16 is_stmt 0 view .LVU414
 1295 014c 344B     		ldr	r3, .L82
 1296 014e 0022     		movs	r2, #0
 1297 0150 1A70     		strb	r2, [r3]
 1298              	.L80:
 187:Core/Src/main.c ****         mystate=BT_TRANSIT;
 1299              		.loc 1 187 7 is_stmt 1 view .LVU415
 187:Core/Src/main.c ****         mystate=BT_TRANSIT;
 1300              		.loc 1 187 10 is_stmt 0 view .LVU416
 1301 0152 052C     		cmp	r4, #5
 1302 0154 49D9     		bls	.L73
ARM GAS  /tmp/ccZzxGTd.s 			page 52


 188:Core/Src/main.c ****       }
 1303              		.loc 1 188 9 is_stmt 1 view .LVU417
 188:Core/Src/main.c ****       }
 1304              		.loc 1 188 16 is_stmt 0 view .LVU418
 1305 0156 324B     		ldr	r3, .L82
 1306 0158 0222     		movs	r2, #2
 1307 015a 1A70     		strb	r2, [r3]
 1308 015c 45E0     		b	.L73
 1309              	.LVL87:
 1310              	.L76:
 192:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 1311              		.loc 1 192 5 is_stmt 1 view .LVU419
 1312 015e 314D     		ldr	r5, .L82+4
 1313 0160 0022     		movs	r2, #0
 1314 0162 4FF48071 		mov	r1, #256
 1315 0166 2846     		mov	r0, r5
 1316              	.LVL88:
 192:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 1317              		.loc 1 192 5 is_stmt 0 view .LVU420
 1318 0168 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1319              	.LVL89:
 193:Core/Src/main.c **** 		  HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_SET);
 1320              		.loc 1 193 5 is_stmt 1 view .LVU421
 1321 016c 0022     		movs	r2, #0
 1322 016e 0221     		movs	r1, #2
 1323 0170 4FF09040 		mov	r0, #1207959552
 1324 0174 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1325              	.LVL90:
 194:Core/Src/main.c **** 		  HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_RESET);
 1326              		.loc 1 194 5 view .LVU422
 1327 0178 0122     		movs	r2, #1
 1328 017a 1146     		mov	r1, r2
 1329 017c 4FF09040 		mov	r0, #1207959552
 1330 0180 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1331              	.LVL91:
 195:Core/Src/main.c ****       if (full_dist<5){
 1332              		.loc 1 195 5 view .LVU423
 1333 0184 0022     		movs	r2, #0
 1334 0186 2021     		movs	r1, #32
 1335 0188 2846     		mov	r0, r5
 1336 018a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1337              	.LVL92:
 196:Core/Src/main.c ****         mystate=BT_IDLE;
 1338              		.loc 1 196 7 view .LVU424
 196:Core/Src/main.c ****         mystate=BT_IDLE;
 1339              		.loc 1 196 10 is_stmt 0 view .LVU425
 1340 018e 042C     		cmp	r4, #4
 1341 0190 2BD8     		bhi	.L73
 197:Core/Src/main.c ****       }
 1342              		.loc 1 197 9 is_stmt 1 view .LVU426
 197:Core/Src/main.c ****       }
 1343              		.loc 1 197 16 is_stmt 0 view .LVU427
 1344 0192 234B     		ldr	r3, .L82
 1345 0194 0022     		movs	r2, #0
 1346 0196 1A70     		strb	r2, [r3]
 1347 0198 27E0     		b	.L73
 1348              	.LVL93:
ARM GAS  /tmp/ccZzxGTd.s 			page 53


 1349              	.L74:
 201:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 1350              		.loc 1 201 5 is_stmt 1 view .LVU428
 1351 019a 224C     		ldr	r4, .L82+4
 1352 019c 0022     		movs	r2, #0
 1353 019e 4FF48071 		mov	r1, #256
 1354 01a2 2046     		mov	r0, r4
 1355              	.LVL94:
 201:Core/Src/main.c **** 		  HAL_GPIO_WritePin(UNLOCKED_GPIO_Port, UNLOCKED_Pin, GPIO_PIN_RESET);
 1356              		.loc 1 201 5 is_stmt 0 view .LVU429
 1357 01a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1358              	.LVL95:
 202:Core/Src/main.c **** 		  HAL_GPIO_WritePin(TRANSIT_GPIO_Port, TRANSIT_Pin, GPIO_PIN_RESET);
 1359              		.loc 1 202 5 is_stmt 1 view .LVU430
 1360 01a8 0022     		movs	r2, #0
 1361 01aa 0221     		movs	r1, #2
 1362 01ac 4FF09040 		mov	r0, #1207959552
 1363 01b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1364              	.LVL96:
 203:Core/Src/main.c **** 		  HAL_GPIO_WritePin(ALARM_GPIO_Port, ALARM_Pin, GPIO_PIN_SET);
 1365              		.loc 1 203 5 view .LVU431
 1366 01b4 0022     		movs	r2, #0
 1367 01b6 0121     		movs	r1, #1
 1368 01b8 4FF09040 		mov	r0, #1207959552
 1369 01bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1370              	.LVL97:
 204:Core/Src/main.c ****       HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_4);
 1371              		.loc 1 204 5 view .LVU432
 1372 01c0 0122     		movs	r2, #1
 1373 01c2 2021     		movs	r1, #32
 1374 01c4 2046     		mov	r0, r4
 1375 01c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1376              	.LVL98:
 205:Core/Src/main.c ****       HAL_Delay(5000);
 1377              		.loc 1 205 7 view .LVU433
 1378 01ca 1C4C     		ldr	r4, .L82+28
 1379 01cc 0C21     		movs	r1, #12
 1380 01ce 2046     		mov	r0, r4
 1381 01d0 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1382              	.LVL99:
 206:Core/Src/main.c ****       HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_4);
 1383              		.loc 1 206 7 view .LVU434
 1384 01d4 41F28830 		movw	r0, #5000
 1385 01d8 FFF7FEFF 		bl	HAL_Delay
 1386              	.LVL100:
 207:Core/Src/main.c ****       mystate=BT_IDLE;
 1387              		.loc 1 207 7 view .LVU435
 1388 01dc 0C21     		movs	r1, #12
 1389 01de 2046     		mov	r0, r4
 1390 01e0 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 1391              	.LVL101:
 208:Core/Src/main.c **** 	  }
 1392              		.loc 1 208 7 view .LVU436
 208:Core/Src/main.c **** 	  }
 1393              		.loc 1 208 14 is_stmt 0 view .LVU437
 1394 01e4 0E4B     		ldr	r3, .L82
 1395 01e6 0022     		movs	r2, #0
ARM GAS  /tmp/ccZzxGTd.s 			page 54


 1396 01e8 1A70     		strb	r2, [r3]
 1397              	.L73:
 208:Core/Src/main.c **** 	  }
 1398              		.loc 1 208 14 view .LVU438
 1399              	.LBE16:
 1400              	.LBE15:
 141:Core/Src/main.c ****   {
 1401              		.loc 1 141 3 is_stmt 1 view .LVU439
 1402              	.LBB17:
 161:Core/Src/main.c ****     /* USER CODE END WHILE */
 1403              		.loc 1 161 5 view .LVU440
 161:Core/Src/main.c ****     /* USER CODE END WHILE */
 1404              		.loc 1 161 26 is_stmt 0 view .LVU441
 1405 01ea 0FAB     		add	r3, sp, #60
 1406 01ec 0DF13202 		add	r2, sp, #50
 1407 01f0 18A9     		add	r1, sp, #96
 1408 01f2 0DF15600 		add	r0, sp, #86
 1409 01f6 FFF7FEFF 		bl	getdistance
 1410              	.LVL102:
 161:Core/Src/main.c ****     /* USER CODE END WHILE */
 1411              		.loc 1 161 14 view .LVU442
 1412 01fa FFF7FEFF 		bl	__aeabi_d2uiz
 1413              	.LVL103:
 1414 01fe 0446     		mov	r4, r0
 1415              	.LVL104:
 165:Core/Src/main.c **** 	  case BT_IDLE	:
 1416              		.loc 1 165 5 is_stmt 1 view .LVU443
 1417 0200 074B     		ldr	r3, .L82
 1418 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1419 0204 032B     		cmp	r3, #3
 1420 0206 F0D8     		bhi	.L73
 1421 0208 01A2     		adr	r2, .L75
 1422 020a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1423 020e 00BF     		.p2align 2
 1424              	.L75:
 1425 0210 C3000000 		.word	.L78+1
 1426 0214 09010000 		.word	.L77+1
 1427 0218 5F010000 		.word	.L76+1
 1428 021c 9B010000 		.word	.L74+1
 1429              		.p2align 1
 1430              	.L83:
 1431              		.align	2
 1432              	.L82:
 1433 0220 00000000 		.word	.LANCHOR5
 1434 0224 00040048 		.word	1207960576
 1435 0228 00000000 		.word	.LANCHOR4
 1436 022c 00000000 		.word	.LANCHOR6
 1437 0230 00000000 		.word	.LANCHOR7
 1438 0234 00000000 		.word	.LANCHOR2
 1439 0238 00000000 		.word	.LANCHOR8
 1440 023c 00000000 		.word	.LANCHOR3
 1441              	.LBE17:
 1442              		.cfi_endproc
 1443              	.LFE972:
 1445              		.global	rfidstarttime
 1446              		.global	rfidmsgbuf
 1447              		.global	rfidrawbuf
ARM GAS  /tmp/ccZzxGTd.s 			page 55


 1448              		.global	mystate
 1449              		.global	rfiddummydata
 1450              		.global	rfidbuf
 1451              		.global	rawbuf
 1452              		.global	prev_gpsmgsbuf
 1453              		.global	cur_gpsmsgbuf
 1454              		.global	testrxdata
 1455              		.global	rxdata
 1456              		.global	dma_buffer
 1457              		.global	gps_buffer
 1458              		.global	htim2
 1459              		.global	htim1
 1460              		.global	huart1
 1461              		.global	hlpuart1
 1462              		.global	hadc
 1463              		.section	.rodata
 1464              		.align	2
 1465              		.set	.LANCHOR6,. + 0
 1466              	.LC0:
 1467 0000 31373039 		.ascii	"170921.000"
 1467      32312E30 
 1467      3030
 1468 000a 34303036 		.ascii	"4006.9306"
 1468      2E393330 
 1468      36
 1469 0013 4E       		.byte	78
 1470 0014 30383831 		.ascii	"08813.6236"
 1470      332E3632 
 1470      3336
 1471 001e 57       		.byte	87
 1472 001f 31       		.byte	49
 1473 0020 37       		.byte	55
 1474 0021 000000   		.space	3
 1475              	.LC1:
 1476 0024 31373039 		.ascii	"170921.000"
 1476      32312E30 
 1476      3030
 1477 002e 34303036 		.ascii	"4006.9135"
 1477      2E393133 
 1477      35
 1478 0037 4E       		.byte	78
 1479 0038 30383831 		.ascii	"08813.6236"
 1479      332E3632 
 1479      3336
 1480 0042 57       		.byte	87
 1481 0043 31       		.byte	49
 1482 0044 37       		.byte	55
 1483              		.section	.bss.cur_gpsmsgbuf,"aw",%nobits
 1484              		.align	2
 1487              	cur_gpsmsgbuf:
 1488 0000 00000000 		.space	33
 1488      00000000 
 1488      00000000 
 1488      00000000 
 1488      00000000 
 1489              		.section	.bss.dma_buffer,"aw",%nobits
 1490              		.align	2
ARM GAS  /tmp/ccZzxGTd.s 			page 56


 1493              	dma_buffer:
 1494 0000 00000000 		.space	100
 1494      00000000 
 1494      00000000 
 1494      00000000 
 1494      00000000 
 1495              		.section	.bss.gps_buffer,"aw",%nobits
 1496              		.align	2
 1499              	gps_buffer:
 1500 0000 00000000 		.space	100
 1500      00000000 
 1500      00000000 
 1500      00000000 
 1500      00000000 
 1501              		.section	.bss.hadc,"aw",%nobits
 1502              		.align	2
 1503              		.set	.LANCHOR1,. + 0
 1506              	hadc:
 1507 0000 00000000 		.space	100
 1507      00000000 
 1507      00000000 
 1507      00000000 
 1507      00000000 
 1508              		.section	.bss.hlpuart1,"aw",%nobits
 1509              		.align	2
 1510              		.set	.LANCHOR2,. + 0
 1513              	hlpuart1:
 1514 0000 00000000 		.space	144
 1514      00000000 
 1514      00000000 
 1514      00000000 
 1514      00000000 
 1515              		.section	.bss.htim1,"aw",%nobits
 1516              		.align	2
 1517              		.set	.LANCHOR3,. + 0
 1520              	htim1:
 1521 0000 00000000 		.space	76
 1521      00000000 
 1521      00000000 
 1521      00000000 
 1521      00000000 
 1522              		.section	.bss.htim2,"aw",%nobits
 1523              		.align	2
 1524              		.set	.LANCHOR4,. + 0
 1527              	htim2:
 1528 0000 00000000 		.space	76
 1528      00000000 
 1528      00000000 
 1528      00000000 
 1528      00000000 
 1529              		.section	.bss.huart1,"aw",%nobits
 1530              		.align	2
 1531              		.set	.LANCHOR0,. + 0
 1534              	huart1:
 1535 0000 00000000 		.space	144
 1535      00000000 
 1535      00000000 
ARM GAS  /tmp/ccZzxGTd.s 			page 57


 1535      00000000 
 1535      00000000 
 1536              		.section	.bss.mystate,"aw",%nobits
 1537              		.set	.LANCHOR5,. + 0
 1540              	mystate:
 1541 0000 00       		.space	1
 1542              		.section	.bss.prev_gpsmgsbuf,"aw",%nobits
 1543              		.align	2
 1546              	prev_gpsmgsbuf:
 1547 0000 00000000 		.space	33
 1547      00000000 
 1547      00000000 
 1547      00000000 
 1547      00000000 
 1548              		.section	.bss.rawbuf,"aw",%nobits
 1549              		.align	2
 1552              	rawbuf:
 1553 0000 00000000 		.space	24
 1553      00000000 
 1553      00000000 
 1553      00000000 
 1553      00000000 
 1554              		.section	.bss.rfidbuf,"aw",%nobits
 1555              		.align	2
 1558              	rfidbuf:
 1559 0000 00000000 		.space	13
 1559      00000000 
 1559      00000000 
 1559      00
 1560              		.section	.bss.rfidmsgbuf,"aw",%nobits
 1561              		.align	2
 1564              	rfidmsgbuf:
 1565 0000 00000000 		.space	15
 1565      00000000 
 1565      00000000 
 1565      000000
 1566              		.section	.bss.rfidrawbuf,"aw",%nobits
 1567              		.align	2
 1568              		.set	.LANCHOR7,. + 0
 1571              	rfidrawbuf:
 1572 0000 00000000 		.space	50
 1572      00000000 
 1572      00000000 
 1572      00000000 
 1572      00000000 
 1573              		.section	.bss.rfidstarttime,"aw",%nobits
 1574              		.align	2
 1575              		.set	.LANCHOR8,. + 0
 1578              	rfidstarttime:
 1579 0000 00000000 		.space	4
 1580              		.section	.bss.rxdata,"aw",%nobits
 1581              		.align	2
 1584              	rxdata:
 1585 0000 00000000 		.space	90
 1585      00000000 
 1585      00000000 
 1585      00000000 
ARM GAS  /tmp/ccZzxGTd.s 			page 58


 1585      00000000 
 1586              		.section	.bss.testrxdata,"aw",%nobits
 1587              		.align	2
 1590              	testrxdata:
 1591 0000 00000000 		.space	90
 1591      00000000 
 1591      00000000 
 1591      00000000 
 1591      00000000 
 1592              		.section	.data.rfiddummydata,"aw"
 1593              		.align	2
 1596              	rfiddummydata:
 1597 0000 3FA6E6E6 		.ascii	"?\246\346\346\346&&\251\371.\312\326\362"
 1597      E62626A9 
 1597      F92ECAD6 
 1597      F2
 1598              		.text
 1599              	.Letext0:
 1600              		.file 4 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 1601              		.file 5 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 1602              		.file 6 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wl55xx.h"
 1603              		.file 7 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wlxx.h"
 1604              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 1605              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_dma.h"
 1606              		.file 10 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_adc.h"
 1607              		.file 11 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_gpio.h"
 1608              		.file 12 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_rcc.h"
 1609              		.file 13 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_tim.h"
 1610              		.file 14 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_uart.h"
 1611              		.file 15 "Core/Inc/btgps.h"
 1612              		.file 16 "Core/Inc/main.h"
 1613              		.file 17 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 1614              		.file 18 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_tim_ex.h"
 1615              		.file 19 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_uart_ex.h"
 1616              		.file 20 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal.h"
 1617              		.file 21 "<built-in>"
ARM GAS  /tmp/ccZzxGTd.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccZzxGTd.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccZzxGTd.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccZzxGTd.s:181    .text.MX_GPIO_Init:00000000000000ac $d
     /tmp/ccZzxGTd.s:186    .text.Error_Handler:0000000000000000 $t
     /tmp/ccZzxGTd.s:193    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccZzxGTd.s:225    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccZzxGTd.s:231    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccZzxGTd.s:332    .text.MX_USART1_UART_Init:0000000000000060 $d
     /tmp/ccZzxGTd.s:338    .text.MX_ADC_Init:0000000000000000 $t
     /tmp/ccZzxGTd.s:344    .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
     /tmp/ccZzxGTd.s:434    .text.MX_ADC_Init:000000000000004c $d
     /tmp/ccZzxGTd.s:440    .text.MX_LPUART1_UART_Init:0000000000000000 $t
     /tmp/ccZzxGTd.s:446    .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
     /tmp/ccZzxGTd.s:550    .text.MX_LPUART1_UART_Init:0000000000000060 $d
     /tmp/ccZzxGTd.s:556    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccZzxGTd.s:562    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccZzxGTd.s:797    .text.MX_TIM1_Init:00000000000000ec $d
     /tmp/ccZzxGTd.s:803    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccZzxGTd.s:809    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccZzxGTd.s:914    .text.MX_TIM2_Init:000000000000006c $d
     /tmp/ccZzxGTd.s:919    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccZzxGTd.s:926    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccZzxGTd.s:1054   .text.SystemClock_Config:0000000000000080 $d
     /tmp/ccZzxGTd.s:1060   .text.main:0000000000000000 $t
     /tmp/ccZzxGTd.s:1067   .text.main:0000000000000000 main
     /tmp/ccZzxGTd.s:1425   .text.main:0000000000000210 $d
     /tmp/ccZzxGTd.s:1433   .text.main:0000000000000220 $d
     /tmp/ccZzxGTd.s:1578   .bss.rfidstarttime:0000000000000000 rfidstarttime
     /tmp/ccZzxGTd.s:1564   .bss.rfidmsgbuf:0000000000000000 rfidmsgbuf
     /tmp/ccZzxGTd.s:1571   .bss.rfidrawbuf:0000000000000000 rfidrawbuf
     /tmp/ccZzxGTd.s:1540   .bss.mystate:0000000000000000 mystate
     /tmp/ccZzxGTd.s:1596   .data.rfiddummydata:0000000000000000 rfiddummydata
     /tmp/ccZzxGTd.s:1558   .bss.rfidbuf:0000000000000000 rfidbuf
     /tmp/ccZzxGTd.s:1552   .bss.rawbuf:0000000000000000 rawbuf
     /tmp/ccZzxGTd.s:1546   .bss.prev_gpsmgsbuf:0000000000000000 prev_gpsmgsbuf
     /tmp/ccZzxGTd.s:1487   .bss.cur_gpsmsgbuf:0000000000000000 cur_gpsmsgbuf
     /tmp/ccZzxGTd.s:1590   .bss.testrxdata:0000000000000000 testrxdata
     /tmp/ccZzxGTd.s:1584   .bss.rxdata:0000000000000000 rxdata
     /tmp/ccZzxGTd.s:1493   .bss.dma_buffer:0000000000000000 dma_buffer
     /tmp/ccZzxGTd.s:1499   .bss.gps_buffer:0000000000000000 gps_buffer
     /tmp/ccZzxGTd.s:1527   .bss.htim2:0000000000000000 htim2
     /tmp/ccZzxGTd.s:1520   .bss.htim1:0000000000000000 htim1
     /tmp/ccZzxGTd.s:1534   .bss.huart1:0000000000000000 huart1
     /tmp/ccZzxGTd.s:1513   .bss.hlpuart1:0000000000000000 hlpuart1
     /tmp/ccZzxGTd.s:1506   .bss.hadc:0000000000000000 hadc
     /tmp/ccZzxGTd.s:1464   .rodata:0000000000000000 $d
     /tmp/ccZzxGTd.s:1484   .bss.cur_gpsmsgbuf:0000000000000000 $d
     /tmp/ccZzxGTd.s:1490   .bss.dma_buffer:0000000000000000 $d
     /tmp/ccZzxGTd.s:1496   .bss.gps_buffer:0000000000000000 $d
     /tmp/ccZzxGTd.s:1502   .bss.hadc:0000000000000000 $d
     /tmp/ccZzxGTd.s:1509   .bss.hlpuart1:0000000000000000 $d
     /tmp/ccZzxGTd.s:1516   .bss.htim1:0000000000000000 $d
     /tmp/ccZzxGTd.s:1523   .bss.htim2:0000000000000000 $d
     /tmp/ccZzxGTd.s:1530   .bss.huart1:0000000000000000 $d
     /tmp/ccZzxGTd.s:1541   .bss.mystate:0000000000000000 $d
ARM GAS  /tmp/ccZzxGTd.s 			page 60


     /tmp/ccZzxGTd.s:1543   .bss.prev_gpsmgsbuf:0000000000000000 $d
     /tmp/ccZzxGTd.s:1549   .bss.rawbuf:0000000000000000 $d
     /tmp/ccZzxGTd.s:1555   .bss.rfidbuf:0000000000000000 $d
     /tmp/ccZzxGTd.s:1561   .bss.rfidmsgbuf:0000000000000000 $d
     /tmp/ccZzxGTd.s:1567   .bss.rfidrawbuf:0000000000000000 $d
     /tmp/ccZzxGTd.s:1574   .bss.rfidstarttime:0000000000000000 $d
     /tmp/ccZzxGTd.s:1581   .bss.rxdata:0000000000000000 $d
     /tmp/ccZzxGTd.s:1587   .bss.testrxdata:0000000000000000 $d
     /tmp/ccZzxGTd.s:1593   .data.rfiddummydata:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_EnableFifoMode
HAL_ADC_Init
HAL_UARTEx_DisableFifoMode
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_d2uiz
HAL_Init
HAL_TIM_Base_Start
HAL_UART_Receive_IT
HAL_TIM_PWM_Start
HAL_Delay
HAL_TIM_PWM_Stop
getdistance
