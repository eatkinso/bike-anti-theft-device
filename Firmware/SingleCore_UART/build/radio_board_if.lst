ARM GAS  /tmp/ccBVdhsd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"radio_board_if.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RBI_Init,"ax",%progbits
  16              		.align	1
  17              		.global	RBI_Init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	RBI_Init:
  25              	.LFB984:
  26              		.file 1 "LoRaWAN/Target/radio_board_if.c"
   1:LoRaWAN/Target/radio_board_if.c **** /* USER CODE BEGIN Header */
   2:LoRaWAN/Target/radio_board_if.c **** /**
   3:LoRaWAN/Target/radio_board_if.c ****   ******************************************************************************
   4:LoRaWAN/Target/radio_board_if.c ****   * @file    radio_board_if.c
   5:LoRaWAN/Target/radio_board_if.c ****   * @author  MCD Application Team
   6:LoRaWAN/Target/radio_board_if.c ****   * @brief   This file provides an interface layer between MW and Radio Board
   7:LoRaWAN/Target/radio_board_if.c ****   ******************************************************************************
   8:LoRaWAN/Target/radio_board_if.c ****   * @attention
   9:LoRaWAN/Target/radio_board_if.c ****   *
  10:LoRaWAN/Target/radio_board_if.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  11:LoRaWAN/Target/radio_board_if.c ****   * All rights reserved.</center></h2>
  12:LoRaWAN/Target/radio_board_if.c ****   *
  13:LoRaWAN/Target/radio_board_if.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:LoRaWAN/Target/radio_board_if.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:LoRaWAN/Target/radio_board_if.c ****   * the License. You may obtain a copy of the License at:
  16:LoRaWAN/Target/radio_board_if.c ****   *                             www.st.com/SLA0044
  17:LoRaWAN/Target/radio_board_if.c ****   *
  18:LoRaWAN/Target/radio_board_if.c ****   ******************************************************************************
  19:LoRaWAN/Target/radio_board_if.c ****   */
  20:LoRaWAN/Target/radio_board_if.c **** /* USER CODE END Header */
  21:LoRaWAN/Target/radio_board_if.c **** 
  22:LoRaWAN/Target/radio_board_if.c **** /* Includes ------------------------------------------------------------------*/
  23:LoRaWAN/Target/radio_board_if.c **** #include "radio_board_if.h"
  24:LoRaWAN/Target/radio_board_if.c **** 
  25:LoRaWAN/Target/radio_board_if.c **** /* USER CODE BEGIN Includes */
  26:LoRaWAN/Target/radio_board_if.c **** 
  27:LoRaWAN/Target/radio_board_if.c **** /* USER CODE END Includes */
  28:LoRaWAN/Target/radio_board_if.c **** 
  29:LoRaWAN/Target/radio_board_if.c **** /* External variables ---------------------------------------------------------*/
  30:LoRaWAN/Target/radio_board_if.c **** /* USER CODE BEGIN EV */
  31:LoRaWAN/Target/radio_board_if.c **** 
  32:LoRaWAN/Target/radio_board_if.c **** /* USER CODE END EV */
ARM GAS  /tmp/ccBVdhsd.s 			page 2


  33:LoRaWAN/Target/radio_board_if.c **** 
  34:LoRaWAN/Target/radio_board_if.c **** /* Private typedef -----------------------------------------------------------*/
  35:LoRaWAN/Target/radio_board_if.c **** /* USER CODE BEGIN PTD */
  36:LoRaWAN/Target/radio_board_if.c **** 
  37:LoRaWAN/Target/radio_board_if.c **** /* USER CODE END PTD */
  38:LoRaWAN/Target/radio_board_if.c **** 
  39:LoRaWAN/Target/radio_board_if.c **** /* Private define ------------------------------------------------------------*/
  40:LoRaWAN/Target/radio_board_if.c **** /* USER CODE BEGIN PD */
  41:LoRaWAN/Target/radio_board_if.c **** 
  42:LoRaWAN/Target/radio_board_if.c **** /* USER CODE END PD */
  43:LoRaWAN/Target/radio_board_if.c **** 
  44:LoRaWAN/Target/radio_board_if.c **** /* Private macro -------------------------------------------------------------*/
  45:LoRaWAN/Target/radio_board_if.c **** /* USER CODE BEGIN PM */
  46:LoRaWAN/Target/radio_board_if.c **** 
  47:LoRaWAN/Target/radio_board_if.c **** /* USER CODE END PM */
  48:LoRaWAN/Target/radio_board_if.c **** 
  49:LoRaWAN/Target/radio_board_if.c **** /* Private variables ---------------------------------------------------------*/
  50:LoRaWAN/Target/radio_board_if.c **** /* USER CODE BEGIN PV */
  51:LoRaWAN/Target/radio_board_if.c **** 
  52:LoRaWAN/Target/radio_board_if.c **** /* USER CODE END PV */
  53:LoRaWAN/Target/radio_board_if.c **** 
  54:LoRaWAN/Target/radio_board_if.c **** /* Private function prototypes -----------------------------------------------*/
  55:LoRaWAN/Target/radio_board_if.c **** /* USER CODE BEGIN PFP */
  56:LoRaWAN/Target/radio_board_if.c **** 
  57:LoRaWAN/Target/radio_board_if.c **** /* USER CODE END PFP */
  58:LoRaWAN/Target/radio_board_if.c **** 
  59:LoRaWAN/Target/radio_board_if.c **** /* Exported functions --------------------------------------------------------*/
  60:LoRaWAN/Target/radio_board_if.c **** int32_t RBI_Init(void)
  61:LoRaWAN/Target/radio_board_if.c **** {
  27              		.loc 1 61 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  62:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_Init_1 */
  63:LoRaWAN/Target/radio_board_if.c **** 
  64:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_Init_1 */
  65:LoRaWAN/Target/radio_board_if.c **** #if defined(USE_BSP_DRIVER)
  66:LoRaWAN/Target/radio_board_if.c ****   /* Important note: BSP code is board dependent
  67:LoRaWAN/Target/radio_board_if.c ****    * STM32WL_Nucleo code can be found
  68:LoRaWAN/Target/radio_board_if.c ****    *       either in STM32CubeWL package under Drivers/BSP/STM32WLxx_Nucleo/
  69:LoRaWAN/Target/radio_board_if.c ****    *       or at https://github.com/STMicroelectronics/STM32CubeWL/tree/main/Drivers/BSP/STM32WLxx_
  70:LoRaWAN/Target/radio_board_if.c ****    * 1/ For User boards, the BSP/STM32WLxx_Nucleo/ directory can be copied and replaced in the proj
  71:LoRaWAN/Target/radio_board_if.c ****    *       on board RF switch configuration (pin control, number of port etc)
  72:LoRaWAN/Target/radio_board_if.c ****    *       on TCXO configuration
  73:LoRaWAN/Target/radio_board_if.c ****    *       on DC/DC configuration */
  74:LoRaWAN/Target/radio_board_if.c ****   return BSP_RADIO_Init();
  75:LoRaWAN/Target/radio_board_if.c **** #else
  76:LoRaWAN/Target/radio_board_if.c ****   /* 2/ Or implement RBI_Init here */
  77:LoRaWAN/Target/radio_board_if.c ****   int32_t retcode = 0;
  32              		.loc 1 77 3 view .LVU1
  33              	.LVL0:
  78:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_Init_2 */
  79:LoRaWAN/Target/radio_board_if.c **** #warning user to provide its board code or to call his board driver functions
  80:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_Init_2 */
  81:LoRaWAN/Target/radio_board_if.c ****   return retcode;
  34              		.loc 1 81 3 view .LVU2
ARM GAS  /tmp/ccBVdhsd.s 			page 3


  82:LoRaWAN/Target/radio_board_if.c **** #endif  /* USE_BSP_DRIVER  */
  83:LoRaWAN/Target/radio_board_if.c **** }
  35              		.loc 1 83 1 is_stmt 0 view .LVU3
  36 0000 0020     		movs	r0, #0
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE984:
  41              		.section	.text.RBI_DeInit,"ax",%progbits
  42              		.align	1
  43              		.global	RBI_DeInit
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu softvfp
  49              	RBI_DeInit:
  50              	.LFB985:
  84:LoRaWAN/Target/radio_board_if.c **** 
  85:LoRaWAN/Target/radio_board_if.c **** int32_t RBI_DeInit(void)
  86:LoRaWAN/Target/radio_board_if.c **** {
  51              		.loc 1 86 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  87:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_DeInit_1 */
  88:LoRaWAN/Target/radio_board_if.c **** 
  89:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_DeInit_1 */
  90:LoRaWAN/Target/radio_board_if.c **** #if defined(USE_BSP_DRIVER)
  91:LoRaWAN/Target/radio_board_if.c ****   /* Important note: BSP code is board dependent
  92:LoRaWAN/Target/radio_board_if.c ****    * STM32WL_Nucleo code can be found
  93:LoRaWAN/Target/radio_board_if.c ****    *       either in STM32CubeWL package under Drivers/BSP/STM32WLxx_Nucleo/
  94:LoRaWAN/Target/radio_board_if.c ****    *       or at https://github.com/STMicroelectronics/STM32CubeWL/tree/main/Drivers/BSP/STM32WLxx_
  95:LoRaWAN/Target/radio_board_if.c ****    * 1/ For User boards, the BSP/STM32WLxx_Nucleo/ directory can be copied and replaced in the proj
  96:LoRaWAN/Target/radio_board_if.c ****    *       on board RF switch configuration (pin control, number of port etc)
  97:LoRaWAN/Target/radio_board_if.c ****    *       on TCXO configuration
  98:LoRaWAN/Target/radio_board_if.c ****    *       on DC/DC configuration */
  99:LoRaWAN/Target/radio_board_if.c ****   return BSP_RADIO_DeInit();
 100:LoRaWAN/Target/radio_board_if.c **** #else
 101:LoRaWAN/Target/radio_board_if.c ****   /* 2/ Or implement RBI_DeInit here */
 102:LoRaWAN/Target/radio_board_if.c ****   int32_t retcode = 0;
  56              		.loc 1 102 3 view .LVU5
  57              	.LVL1:
 103:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_DeInit_2 */
 104:LoRaWAN/Target/radio_board_if.c **** #warning user to provide its board code or to call his board driver functions
 105:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_DeInit_2 */
 106:LoRaWAN/Target/radio_board_if.c ****   return retcode;
  58              		.loc 1 106 3 view .LVU6
 107:LoRaWAN/Target/radio_board_if.c **** #endif  /* USE_BSP_DRIVER */
 108:LoRaWAN/Target/radio_board_if.c **** }
  59              		.loc 1 108 1 is_stmt 0 view .LVU7
  60 0000 0020     		movs	r0, #0
  61 0002 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE985:
  65              		.section	.text.RBI_ConfigRFSwitch,"ax",%progbits
  66              		.align	1
  67              		.global	RBI_ConfigRFSwitch
ARM GAS  /tmp/ccBVdhsd.s 			page 4


  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu softvfp
  73              	RBI_ConfigRFSwitch:
  74              	.LVL2:
  75              	.LFB986:
 109:LoRaWAN/Target/radio_board_if.c **** 
 110:LoRaWAN/Target/radio_board_if.c **** int32_t RBI_ConfigRFSwitch(RBI_Switch_TypeDef Config)
 111:LoRaWAN/Target/radio_board_if.c **** {
  76              		.loc 1 111 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
 112:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_ConfigRFSwitch_1 */
 113:LoRaWAN/Target/radio_board_if.c **** 
 114:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_ConfigRFSwitch_1 */
 115:LoRaWAN/Target/radio_board_if.c **** #if defined(USE_BSP_DRIVER)
 116:LoRaWAN/Target/radio_board_if.c **** 
 117:LoRaWAN/Target/radio_board_if.c ****   /* Important note: BSP code is board dependent
 118:LoRaWAN/Target/radio_board_if.c ****    * STM32WL_Nucleo code can be found
 119:LoRaWAN/Target/radio_board_if.c ****    *       either in STM32CubeWL package under Drivers/BSP/STM32WLxx_Nucleo/
 120:LoRaWAN/Target/radio_board_if.c ****    *       or at https://github.com/STMicroelectronics/STM32CubeWL/tree/main/Drivers/BSP/STM32WLxx_
 121:LoRaWAN/Target/radio_board_if.c ****    * 1/ For User boards, the BSP/STM32WLxx_Nucleo/ directory can be copied and replaced in the proj
 122:LoRaWAN/Target/radio_board_if.c ****    *       on board RF switch configuration (pin control, number of port etc)
 123:LoRaWAN/Target/radio_board_if.c ****    *       on TCXO configuration
 124:LoRaWAN/Target/radio_board_if.c ****    *       on DC/DC configuration */
 125:LoRaWAN/Target/radio_board_if.c ****   return BSP_RADIO_ConfigRFSwitch((BSP_RADIO_Switch_TypeDef) Config);
 126:LoRaWAN/Target/radio_board_if.c **** #else
 127:LoRaWAN/Target/radio_board_if.c ****   /* 2/ Or implement RBI_ConfigRFSwitch here */
 128:LoRaWAN/Target/radio_board_if.c ****   int32_t retcode = 0;
  81              		.loc 1 128 3 view .LVU9
 129:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_ConfigRFSwitch_2 */
 130:LoRaWAN/Target/radio_board_if.c **** #warning user to provide its board code or to call his board driver functions
 131:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_ConfigRFSwitch_2 */
 132:LoRaWAN/Target/radio_board_if.c ****   return retcode;
  82              		.loc 1 132 3 view .LVU10
 133:LoRaWAN/Target/radio_board_if.c **** #endif  /* USE_BSP_DRIVER */
 134:LoRaWAN/Target/radio_board_if.c **** }
  83              		.loc 1 134 1 is_stmt 0 view .LVU11
  84 0000 0020     		movs	r0, #0
  85              	.LVL3:
  86              		.loc 1 134 1 view .LVU12
  87 0002 7047     		bx	lr
  88              		.cfi_endproc
  89              	.LFE986:
  91              		.section	.text.RBI_GetTxConfig,"ax",%progbits
  92              		.align	1
  93              		.global	RBI_GetTxConfig
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu softvfp
  99              	RBI_GetTxConfig:
 100              	.LFB987:
 135:LoRaWAN/Target/radio_board_if.c **** 
ARM GAS  /tmp/ccBVdhsd.s 			page 5


 136:LoRaWAN/Target/radio_board_if.c **** int32_t RBI_GetTxConfig(void)
 137:LoRaWAN/Target/radio_board_if.c **** {
 101              		.loc 1 137 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 138:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_GetTxConfig_1 */
 139:LoRaWAN/Target/radio_board_if.c **** 
 140:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_GetTxConfig_1 */
 141:LoRaWAN/Target/radio_board_if.c **** #if defined(USE_BSP_DRIVER)
 142:LoRaWAN/Target/radio_board_if.c ****   /* Important note: BSP code is board dependent
 143:LoRaWAN/Target/radio_board_if.c ****    * STM32WL_Nucleo code can be found
 144:LoRaWAN/Target/radio_board_if.c ****    *       either in STM32CubeWL package under Drivers/BSP/STM32WLxx_Nucleo/
 145:LoRaWAN/Target/radio_board_if.c ****    *       or at https://github.com/STMicroelectronics/STM32CubeWL/tree/main/Drivers/BSP/STM32WLxx_
 146:LoRaWAN/Target/radio_board_if.c ****    * 1/ For User boards, the BSP/STM32WLxx_Nucleo/ directory can be copied and replaced in the proj
 147:LoRaWAN/Target/radio_board_if.c ****    *       on board RF switch configuration (pin control, number of port etc)
 148:LoRaWAN/Target/radio_board_if.c ****    *       on TCXO configuration
 149:LoRaWAN/Target/radio_board_if.c ****    *       on DC/DC configuration */
 150:LoRaWAN/Target/radio_board_if.c ****   return BSP_RADIO_GetTxConfig();
 151:LoRaWAN/Target/radio_board_if.c **** #else
 152:LoRaWAN/Target/radio_board_if.c ****   /* 2/ Or implement RBI_GetTxConfig here */
 153:LoRaWAN/Target/radio_board_if.c ****   int32_t retcode = RBI_CONF_RFO;
 106              		.loc 1 153 3 view .LVU14
 107              	.LVL4:
 154:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_GetTxConfig_2 */
 155:LoRaWAN/Target/radio_board_if.c **** #warning user to provide its board code or to call his board driver functions
 156:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_GetTxConfig_2 */
 157:LoRaWAN/Target/radio_board_if.c ****   return retcode;
 108              		.loc 1 157 3 view .LVU15
 158:LoRaWAN/Target/radio_board_if.c **** #endif  /* USE_BSP_DRIVER */
 159:LoRaWAN/Target/radio_board_if.c **** }
 109              		.loc 1 159 1 is_stmt 0 view .LVU16
 110 0000 0020     		movs	r0, #0
 111 0002 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE987:
 115              		.section	.text.RBI_IsTCXO,"ax",%progbits
 116              		.align	1
 117              		.global	RBI_IsTCXO
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu softvfp
 123              	RBI_IsTCXO:
 124              	.LFB988:
 160:LoRaWAN/Target/radio_board_if.c **** 
 161:LoRaWAN/Target/radio_board_if.c **** int32_t RBI_IsTCXO(void)
 162:LoRaWAN/Target/radio_board_if.c **** {
 125              		.loc 1 162 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 163:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_IsTCXO_1 */
 164:LoRaWAN/Target/radio_board_if.c **** 
 165:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_IsTCXO_1 */
ARM GAS  /tmp/ccBVdhsd.s 			page 6


 166:LoRaWAN/Target/radio_board_if.c **** #if defined(USE_BSP_DRIVER)
 167:LoRaWAN/Target/radio_board_if.c ****   /* Important note: BSP code is board dependent
 168:LoRaWAN/Target/radio_board_if.c ****    * STM32WL_Nucleo code can be found
 169:LoRaWAN/Target/radio_board_if.c ****    *       either in STM32CubeWL package under Drivers/BSP/STM32WLxx_Nucleo/
 170:LoRaWAN/Target/radio_board_if.c ****    *       or at https://github.com/STMicroelectronics/STM32CubeWL/tree/main/Drivers/BSP/STM32WLxx_
 171:LoRaWAN/Target/radio_board_if.c ****    * 1/ For User boards, the BSP/STM32WLxx_Nucleo/ directory can be copied and replaced in the proj
 172:LoRaWAN/Target/radio_board_if.c ****    *       on board RF switch configuration (pin control, number of port etc)
 173:LoRaWAN/Target/radio_board_if.c ****    *       on TCXO configuration
 174:LoRaWAN/Target/radio_board_if.c ****    *       on DC/DC configuration */
 175:LoRaWAN/Target/radio_board_if.c ****   return BSP_RADIO_IsTCXO();
 176:LoRaWAN/Target/radio_board_if.c **** #else
 177:LoRaWAN/Target/radio_board_if.c ****   /* 2/ Or implement RBI_IsTCXO here */
 178:LoRaWAN/Target/radio_board_if.c ****   int32_t retcode = IS_TCXO_SUPPORTED;
 130              		.loc 1 178 3 view .LVU18
 131              	.LVL5:
 179:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_IsTCXO_2 */
 180:LoRaWAN/Target/radio_board_if.c **** #warning user to provide its board code or to call his board driver functions
 181:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_IsTCXO_2 */
 182:LoRaWAN/Target/radio_board_if.c ****   return retcode;
 132              		.loc 1 182 3 view .LVU19
 183:LoRaWAN/Target/radio_board_if.c **** #endif  /* USE_BSP_DRIVER  */
 184:LoRaWAN/Target/radio_board_if.c **** }
 133              		.loc 1 184 1 is_stmt 0 view .LVU20
 134 0000 0020     		movs	r0, #0
 135 0002 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE988:
 139              		.section	.text.RBI_IsDCDC,"ax",%progbits
 140              		.align	1
 141              		.global	RBI_IsDCDC
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu softvfp
 147              	RBI_IsDCDC:
 148              	.LFB989:
 185:LoRaWAN/Target/radio_board_if.c **** 
 186:LoRaWAN/Target/radio_board_if.c **** int32_t RBI_IsDCDC(void)
 187:LoRaWAN/Target/radio_board_if.c **** {
 149              		.loc 1 187 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 188:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_IsDCDC_1 */
 189:LoRaWAN/Target/radio_board_if.c **** 
 190:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_IsDCDC_1 */
 191:LoRaWAN/Target/radio_board_if.c **** #if defined(USE_BSP_DRIVER)
 192:LoRaWAN/Target/radio_board_if.c ****   /* Important note: BSP code is board dependent
 193:LoRaWAN/Target/radio_board_if.c ****    * STM32WL_Nucleo code can be found
 194:LoRaWAN/Target/radio_board_if.c ****    *       either in STM32CubeWL package under Drivers/BSP/STM32WLxx_Nucleo/
 195:LoRaWAN/Target/radio_board_if.c ****    *       or at https://github.com/STMicroelectronics/STM32CubeWL/tree/main/Drivers/BSP/STM32WLxx_
 196:LoRaWAN/Target/radio_board_if.c ****    * 1/ For User boards, the BSP/STM32WLxx_Nucleo/ directory can be copied and replaced in the proj
 197:LoRaWAN/Target/radio_board_if.c ****    *       on board RF switch configuration (pin control, number of port etc)
 198:LoRaWAN/Target/radio_board_if.c ****    *       on TCXO configuration
 199:LoRaWAN/Target/radio_board_if.c ****    *       on DC/DC configuration */
 200:LoRaWAN/Target/radio_board_if.c ****   return BSP_RADIO_IsDCDC();
ARM GAS  /tmp/ccBVdhsd.s 			page 7


 201:LoRaWAN/Target/radio_board_if.c **** #else
 202:LoRaWAN/Target/radio_board_if.c ****   /* 2/ Or implement RBI_IsDCDC here */
 203:LoRaWAN/Target/radio_board_if.c ****   int32_t retcode = IS_DCDC_SUPPORTED;
 154              		.loc 1 203 3 view .LVU22
 155              	.LVL6:
 204:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE BEGIN RBI_IsDCDC_2 */
 205:LoRaWAN/Target/radio_board_if.c **** #warning user to provide its board code or to call his board driver functions
 206:LoRaWAN/Target/radio_board_if.c ****   /* USER CODE END RBI_IsDCDC_2 */
 207:LoRaWAN/Target/radio_board_if.c ****   return retcode;
 156              		.loc 1 207 3 view .LVU23
 208:LoRaWAN/Target/radio_board_if.c **** #endif  /* USE_BSP_DRIVER  */
 209:LoRaWAN/Target/radio_board_if.c **** }
 157              		.loc 1 209 1 is_stmt 0 view .LVU24
 158 0000 0120     		movs	r0, #1
 159 0002 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE989:
 163              		.text
 164              	.Letext0:
 165              		.file 2 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 166              		.file 3 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 167              		.file 4 "LoRaWAN/Target/radio_board_if.h"
 168              		.file 5 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
ARM GAS  /tmp/ccBVdhsd.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 radio_board_if.c
     /tmp/ccBVdhsd.s:16     .text.RBI_Init:0000000000000000 $t
     /tmp/ccBVdhsd.s:24     .text.RBI_Init:0000000000000000 RBI_Init
     /tmp/ccBVdhsd.s:42     .text.RBI_DeInit:0000000000000000 $t
     /tmp/ccBVdhsd.s:49     .text.RBI_DeInit:0000000000000000 RBI_DeInit
     /tmp/ccBVdhsd.s:66     .text.RBI_ConfigRFSwitch:0000000000000000 $t
     /tmp/ccBVdhsd.s:73     .text.RBI_ConfigRFSwitch:0000000000000000 RBI_ConfigRFSwitch
     /tmp/ccBVdhsd.s:92     .text.RBI_GetTxConfig:0000000000000000 $t
     /tmp/ccBVdhsd.s:99     .text.RBI_GetTxConfig:0000000000000000 RBI_GetTxConfig
     /tmp/ccBVdhsd.s:116    .text.RBI_IsTCXO:0000000000000000 $t
     /tmp/ccBVdhsd.s:123    .text.RBI_IsTCXO:0000000000000000 RBI_IsTCXO
     /tmp/ccBVdhsd.s:140    .text.RBI_IsDCDC:0000000000000000 $t
     /tmp/ccBVdhsd.s:147    .text.RBI_IsDCDC:0000000000000000 RBI_IsDCDC

NO UNDEFINED SYMBOLS
