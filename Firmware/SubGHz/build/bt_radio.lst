ARM GAS  /tmp/ccDeB17N.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"bt_radio.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.btLoRaSetup,"ax",%progbits
  16              		.align	1
  17              		.global	btLoRaSetup
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	btLoRaSetup:
  25              	.LFB1116:
  26              		.file 1 "Core/Src/bt_radio.c"
   1:Core/Src/bt_radio.c **** /**
   2:Core/Src/bt_radio.c ****   ******************************************************************************
   3:Core/Src/bt_radio.c ****   * @file    bt_radio.c
   4:Core/Src/bt_radio.c ****   * @brief   This file provides code for the radio transactions for the LoRa bike tracker project. 
   5:Core/Src/bt_radio.c ****   ******************************************************************************
   6:Core/Src/bt_radio.c ****   * @attention
   7:Core/Src/bt_radio.c ****   *
   8:Core/Src/bt_radio.c ****   * Elizabeth Atkinson 
   9:Core/Src/bt_radio.c ****   * eatkinso@illinois.edu
  10:Core/Src/bt_radio.c ****   * April 2022
  11:Core/Src/bt_radio.c ****   *
  12:Core/Src/bt_radio.c ****   ******************************************************************************
  13:Core/Src/bt_radio.c ****   */
  14:Core/Src/bt_radio.c **** 
  15:Core/Src/bt_radio.c **** #include "bt_radio.h"
  16:Core/Src/bt_radio.c **** #include "radio.h"
  17:Core/Src/bt_radio.c **** #include "radio_fw.h"
  18:Core/Src/bt_radio.c **** #include "radio_driver.h"
  19:Core/Src/bt_radio.c **** #include "radio_conf.h"
  20:Core/Src/bt_radio.c **** #include "mw_log_conf.h"
  21:Core/Src/bt_radio.c **** #include "timer.h"
  22:Core/Src/bt_radio.c **** 
  23:Core/Src/bt_radio.c **** //IMPORTANT: ALWAYS COMMENT OUT LINES 1415, 1280 in radio.c. 
  24:Core/Src/bt_radio.c **** 
  25:Core/Src/bt_radio.c **** //// copied from radio.c to fix compilation error
  26:Core/Src/bt_radio.c **** #ifndef IRQ_TX_DBG
  27:Core/Src/bt_radio.c **** #define IRQ_TX_DBG ((uint16_t) 0)
  28:Core/Src/bt_radio.c **** #endif
  29:Core/Src/bt_radio.c **** /*can be overridden in radio_conf.h*/
  30:Core/Src/bt_radio.c **** #ifndef IRQ_RX_DBG
  31:Core/Src/bt_radio.c **** #define IRQ_RX_DBG ((uint16_t) 0)
  32:Core/Src/bt_radio.c **** #endif
ARM GAS  /tmp/ccDeB17N.s 			page 2


  33:Core/Src/bt_radio.c **** 
  34:Core/Src/bt_radio.c **** /*!
  35:Core/Src/bt_radio.c ****  * \brief Sets up the radio for TX and RX (channel, frequency, packet type, etc) for this project. 
  36:Core/Src/bt_radio.c ****  * \returns 0 on success, other on failure. 
  37:Core/Src/bt_radio.c ****  * 
  38:Core/Src/bt_radio.c ****  */
  39:Core/Src/bt_radio.c **** void btLoRaSetup(void){
  27              		.loc 1 39 23 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8AB0     		sub	sp, sp, #40
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
  40:Core/Src/bt_radio.c ****     /* radio_init already called in MX_SubGHz_Phy_Init(), this just sets up other params*/
  41:Core/Src/bt_radio.c ****     // US LoRa channels: 903 MHz to 914.2 MHz spaced at 1.6 MHz apart (Upstream- 8 channels at 500 
  42:Core/Src/bt_radio.c ****     Radio.SetChannel(904600000);
  43              		.loc 1 42 5 view .LVU1
  44              		.loc 1 42 10 is_stmt 0 view .LVU2
  45 0006 184F     		ldr	r7, .L3
  46 0008 FB68     		ldr	r3, [r7, #12]
  47              		.loc 1 42 5 view .LVU3
  48 000a 1848     		ldr	r0, .L3+4
  49 000c 9847     		blx	r3
  50              	.LVL0:
  43:Core/Src/bt_radio.c ****     /* modem: \param [in] modem        Radio modem to be used [0: FSK, 1: LoRa]
  44:Core/Src/bt_radio.c ****     * \param [in] bandwidth    Sets the bandwidth
  45:Core/Src/bt_radio.c ****     *                          FSK : >= 2600 and <= 250000 Hz
  46:Core/Src/bt_radio.c ****     *                          LoRa: [0: 125 kHz, 1: 250 kHz,
  47:Core/Src/bt_radio.c ****     *                                 2: 500 kHz, 3: Reserved]
  48:Core/Src/bt_radio.c ****     * \param [in] datarate     Sets the Datarate
  49:Core/Src/bt_radio.c ****     *                          FSK : 600..300000 bits/s
  50:Core/Src/bt_radio.c ****     *                          LoRa: [6: 64, 7: 128, 8: 256, 9: 512,
  51:Core/Src/bt_radio.c ****     *                                10: 1024, 11: 2048, 12: 4096  chips]
  52:Core/Src/bt_radio.c ****     * \param [in] coderate     Sets the coding rate (LoRa only)
  53:Core/Src/bt_radio.c ****     *                          FSK : N/A ( set to 0 )
  54:Core/Src/bt_radio.c ****     *                          LoRa: [1: 4/5, 2: 4/6, 3: 4/7, 4: 4/8]
  55:Core/Src/bt_radio.c ****     * \param [in] bandwidthAfc Sets the AFC Bandwidth (FSK only)
  56:Core/Src/bt_radio.c ****     *                          FSK : >= 2600 and <= 250000 Hz
  57:Core/Src/bt_radio.c ****     *                          LoRa: N/A ( set to 0 )
  58:Core/Src/bt_radio.c ****     * \param [in] preambleLen  Sets the Preamble length
  59:Core/Src/bt_radio.c ****     *                          FSK : Number of bytes
  60:Core/Src/bt_radio.c ****     *                          LoRa: Length in symbols (the hardware adds 4 more symbols)
  61:Core/Src/bt_radio.c ****     * \param [in] symbTimeout  Sets the RxSingle timeout value
  62:Core/Src/bt_radio.c ****     *                          FSK : timeout in number of bytes
  63:Core/Src/bt_radio.c ****     *                          LoRa: timeout in symbols
  64:Core/Src/bt_radio.c ****     * \param [in] fixLen       Fixed length packets [0: variable, 1: fixed]
  65:Core/Src/bt_radio.c ****     * \param [in] payloadLen   Sets payload length when fixed length is used. guessing this is byte
ARM GAS  /tmp/ccDeB17N.s 			page 3


  66:Core/Src/bt_radio.c ****     * \param [in] crcOn        Enables/Disables the CRC [0: OFF, 1: ON]
  67:Core/Src/bt_radio.c ****     * \param [in] FreqHopOn    Enables disables the intra-packet frequency hopping
  68:Core/Src/bt_radio.c ****     *                          FSK : N/A ( set to 0 )
  69:Core/Src/bt_radio.c ****     *                          LoRa: [0: OFF, 1: ON]
  70:Core/Src/bt_radio.c ****     * \param [in] HopPeriod    Number of symbols between each hop
  71:Core/Src/bt_radio.c ****     *                          FSK : N/A ( set to 0 )
  72:Core/Src/bt_radio.c ****     *                          LoRa: Number of symbols
  73:Core/Src/bt_radio.c ****     * \param [in] iqInverted   Inverts IQ signals (LoRa only)
  74:Core/Src/bt_radio.c ****     *                          FSK : N/A ( set to 0 )
  75:Core/Src/bt_radio.c ****     *                          LoRa: [0: not inverted, 1: inverted]
  76:Core/Src/bt_radio.c ****     * \param [in] rxContinuous Sets the reception in continuous mode
  77:Core/Src/bt_radio.c ****     *                          [false: single mode, true: continuous mode]
  78:Core/Src/bt_radio.c ****     */
  79:Core/Src/bt_radio.c **** 
  80:Core/Src/bt_radio.c ****     Radio.SetRxConfig(1, 1, 12, 4, 0, 8, 12, 1, 90, 1, 0, 0, 0, 0);
  51              		.loc 1 80 5 is_stmt 1 view .LVU4
  52 000e 0024     		movs	r4, #0
  53 0010 0994     		str	r4, [sp, #36]
  54 0012 0894     		str	r4, [sp, #32]
  55 0014 0794     		str	r4, [sp, #28]
  56 0016 0694     		str	r4, [sp, #24]
  57 0018 0125     		movs	r5, #1
  58 001a 0595     		str	r5, [sp, #20]
  59 001c 5A23     		movs	r3, #90
  60 001e 0493     		str	r3, [sp, #16]
  61 0020 0395     		str	r5, [sp, #12]
  62 0022 0C26     		movs	r6, #12
  63 0024 0296     		str	r6, [sp, #8]
  64 0026 4FF00808 		mov	r8, #8
  65 002a CDF80480 		str	r8, [sp, #4]
  66 002e 0094     		str	r4, [sp]
  67 0030 0423     		movs	r3, #4
  68 0032 3246     		mov	r2, r6
  69 0034 2946     		mov	r1, r5
  70 0036 2846     		mov	r0, r5
  71 0038 D7F818C0 		ldr	ip, [r7, #24]
  72 003c E047     		blx	ip
  73              	.LVL1:
  81:Core/Src/bt_radio.c ****     /*!
  82:Core/Src/bt_radio.c ****  * \brief Sets the transmission parameters
  83:Core/Src/bt_radio.c ****  *
  84:Core/Src/bt_radio.c ****  * \param [in] modem        Radio modem to be used [0: FSK, 1: LoRa]
  85:Core/Src/bt_radio.c ****  * \param [in] power        Sets the output power [dBm]
  86:Core/Src/bt_radio.c ****  * \param [in] fdev         Sets the frequency deviation (FSK only)
  87:Core/Src/bt_radio.c ****  *                          FSK : [Hz]
  88:Core/Src/bt_radio.c ****  *                          LoRa: 0
  89:Core/Src/bt_radio.c ****  * \param [in] bandwidth    Sets the bandwidth (LoRa only)
  90:Core/Src/bt_radio.c ****  *                          FSK : 0
  91:Core/Src/bt_radio.c ****  *                          LoRa: [0: 125 kHz, 1: 250 kHz,
  92:Core/Src/bt_radio.c ****  *                                 2: 500 kHz, 3: Reserved]
  93:Core/Src/bt_radio.c ****  * \param [in] datarate     Sets the Datarate
  94:Core/Src/bt_radio.c ****  *                          FSK : 600..300000 bits/s
  95:Core/Src/bt_radio.c ****  *                          LoRa: [6: 64, 7: 128, 8: 256, 9: 512,
  96:Core/Src/bt_radio.c ****  *                                10: 1024, 11: 2048, 12: 4096  chips]
  97:Core/Src/bt_radio.c ****  * \param [in] coderate     Sets the coding rate (LoRa only)
  98:Core/Src/bt_radio.c ****  *                          FSK : N/A ( set to 0 )
  99:Core/Src/bt_radio.c ****  *                          LoRa: [1: 4/5, 2: 4/6, 3: 4/7, 4: 4/8]
ARM GAS  /tmp/ccDeB17N.s 			page 4


 100:Core/Src/bt_radio.c ****  * \param [in] preambleLen  Sets the preamble length
 101:Core/Src/bt_radio.c ****  *                          FSK : Number of bytes
 102:Core/Src/bt_radio.c ****  *                          LoRa: Length in symbols (the hardware adds 4 more symbols)
 103:Core/Src/bt_radio.c ****  * \param [in] fixLen       Fixed length packets [0: variable, 1: fixed]
 104:Core/Src/bt_radio.c ****  * \param [in] crcOn        Enables disables the CRC [0: OFF, 1: ON]
 105:Core/Src/bt_radio.c ****  * \param [in] FreqHopOn    Enables disables the intra-packet frequency hopping
 106:Core/Src/bt_radio.c ****  *                          FSK : N/A ( set to 0 )
 107:Core/Src/bt_radio.c ****  *                          LoRa: [0: OFF, 1: ON]
 108:Core/Src/bt_radio.c ****  * \param [in] HopPeriod    Number of symbols between each hop
 109:Core/Src/bt_radio.c ****  *                          FSK : N/A ( set to 0 )
 110:Core/Src/bt_radio.c ****  *                          LoRa: Number of symbols
 111:Core/Src/bt_radio.c ****  * \param [in] iqInverted   Inverts IQ signals (LoRa only)
 112:Core/Src/bt_radio.c ****  *                          FSK : N/A ( set to 0 )
 113:Core/Src/bt_radio.c ****  *                          LoRa: [0: not inverted, 1: inverted]
 114:Core/Src/bt_radio.c ****  * \param [in] timeout      Transmission timeout [ms]
 115:Core/Src/bt_radio.c ****  * 
 116:Core/Src/bt_radio.c ****  * Notes about bike tracker config: 
 117:Core/Src/bt_radio.c ****  *  -- board is setup to use the high-power RF output config (RFO_HP, VR_PA=VCC=3V3.) Max output po
 118:Core/Src/bt_radio.c ****  *      setting ours to 17 dBm because these things are like 1 foot apart.
 119:Core/Src/bt_radio.c ****  *      Note that +15dBm is the minimum power from the RFO_HP output. 
 120:Core/Src/bt_radio.c ****  *  -- RF switch (SKY13370) can handle up to 40 dBm, insertion loss = 0.7dB. 
 121:Core/Src/bt_radio.c ****  * 
 122:Core/Src/bt_radio.c ****  */
 123:Core/Src/bt_radio.c ****     Radio.SetTxConfig(1, 17, 0, 1, 12, 4, 8, 1, 0, 0, 0, 0, 100);
  74              		.loc 1 123 5 view .LVU5
  75              		.loc 1 123 10 is_stmt 0 view .LVU6
  76 003e FF69     		ldr	r7, [r7, #28]
  77              		.loc 1 123 5 view .LVU7
  78 0040 6423     		movs	r3, #100
  79 0042 0893     		str	r3, [sp, #32]
  80 0044 0794     		str	r4, [sp, #28]
  81 0046 0694     		str	r4, [sp, #24]
  82 0048 0594     		str	r4, [sp, #20]
  83 004a 0494     		str	r4, [sp, #16]
  84 004c 0395     		str	r5, [sp, #12]
  85 004e CDF80880 		str	r8, [sp, #8]
  86 0052 0423     		movs	r3, #4
  87 0054 0193     		str	r3, [sp, #4]
  88 0056 0096     		str	r6, [sp]
  89 0058 2B46     		mov	r3, r5
  90 005a 2246     		mov	r2, r4
  91 005c 1121     		movs	r1, #17
  92 005e 2846     		mov	r0, r5
  93 0060 B847     		blx	r7
  94              	.LVL2:
 124:Core/Src/bt_radio.c **** }
  95              		.loc 1 124 1 view .LVU8
  96 0062 0AB0     		add	sp, sp, #40
  97              	.LCFI2:
  98              		.cfi_def_cfa_offset 24
  99              		@ sp needed
 100 0064 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 101              	.L4:
 102              		.align	2
 103              	.L3:
 104 0068 00000000 		.word	Radio
 105 006c C019EB35 		.word	904600000
ARM GAS  /tmp/ccDeB17N.s 			page 5


 106              		.cfi_endproc
 107              	.LFE1116:
 109              		.section	.text.btLoRaListen,"ax",%progbits
 110              		.align	1
 111              		.global	btLoRaListen
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	btLoRaListen:
 118              	.LVL3:
 119              	.LFB1117:
 125:Core/Src/bt_radio.c **** 
 126:Core/Src/bt_radio.c **** /*
 127:Core/Src/bt_radio.c **** * adapted from RadioRx to set up RX for the bike tracker board; sets RF switch and then enters RX. 
 128:Core/Src/bt_radio.c **** * Note this function does not receive or save any data!! that must be done with the callback. 
 129:Core/Src/bt_radio.c **** */
 130:Core/Src/bt_radio.c **** void btLoRaListen(uint32_t ltimeout)
 131:Core/Src/bt_radio.c **** {
 120              		.loc 1 131 1 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		.loc 1 131 1 is_stmt 0 view .LVU10
 125 0000 10B5     		push	{r4, lr}
 126              	.LCFI3:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 130 0002 0446     		mov	r4, r0
 132:Core/Src/bt_radio.c ****     /* 
 133:Core/Src/bt_radio.c ****     if( 1UL == RFW_Is_Init( ) )
 134:Core/Src/bt_radio.c ****     {
 135:Core/Src/bt_radio.c ****         RFW_ReceiveInit( );
 136:Core/Src/bt_radio.c ****     }
 137:Core/Src/bt_radio.c ****     else
 138:Core/Src/bt_radio.c ****     {
 139:Core/Src/bt_radio.c ****         SUBGRF_SetDioIrqParams( IRQ_RX_DONE | IRQ_RX_TX_TIMEOUT | IRQ_CRC_ERROR | IRQ_HEADER_ERROR 
 140:Core/Src/bt_radio.c ****                                 IRQ_RX_DONE | IRQ_RX_TX_TIMEOUT | IRQ_CRC_ERROR | IRQ_HEADER_ERROR 
 141:Core/Src/bt_radio.c ****                                 IRQ_RADIO_NONE,
 142:Core/Src/bt_radio.c ****                                 IRQ_RADIO_NONE );
 143:Core/Src/bt_radio.c ****     }
 144:Core/Src/bt_radio.c **** 
 145:Core/Src/bt_radio.c ****     if( ltimeout != 0 )
 146:Core/Src/bt_radio.c ****     {
 147:Core/Src/bt_radio.c ****         TimerSetValue( &RxTimeoutTimer, ltimeout );
 148:Core/Src/bt_radio.c ****         TimerStart( &RxTimeoutTimer );
 149:Core/Src/bt_radio.c ****     }
 150:Core/Src/bt_radio.c ****     // ST_WORKAROUND_BEGIN : Set the debug pin and update the radio switch 
 151:Core/Src/bt_radio.c ****     / switch off RxDcPreambleDetect See STM32WL Errata: RadioSetRxDutyCycle
 152:Core/Src/bt_radio.c ****     SubgRf.RxDcPreambleDetectTimeout = 0;
 153:Core/Src/bt_radio.c ****     // ST_WORKAROUND_END 
 154:Core/Src/bt_radio.c **** 
 155:Core/Src/bt_radio.c ****     if( SubgRf.RxContinuous == true )
 156:Core/Src/bt_radio.c ****     {
 157:Core/Src/bt_radio.c ****         SUBGRF_SetRx( 0xFFFFFF ); // Rx Continuous
 158:Core/Src/bt_radio.c ****     }
ARM GAS  /tmp/ccDeB17N.s 			page 6


 159:Core/Src/bt_radio.c ****     else
 160:Core/Src/bt_radio.c ****     {
 161:Core/Src/bt_radio.c ****         SUBGRF_SetRx( SubgRf.RxTimeout << 6 );
 162:Core/Src/bt_radio.c ****     }
 163:Core/Src/bt_radio.c ****     /* RF switch configuration
 164:Core/Src/bt_radio.c ****     // For RX, set VC1 high, VC2 low.*/
 165:Core/Src/bt_radio.c ****     HAL_GPIO_WritePin(RFSW_VC1_GPIO_Port, RFSW_VC1_Pin, GPIO_PIN_SET);
 131              		.loc 1 165 5 is_stmt 1 view .LVU11
 132 0004 0122     		movs	r2, #1
 133 0006 0821     		movs	r1, #8
 134 0008 4FF09040 		mov	r0, #1207959552
 135              	.LVL4:
 136              		.loc 1 165 5 is_stmt 0 view .LVU12
 137 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL5:
 166:Core/Src/bt_radio.c ****     HAL_GPIO_WritePin(RFSW_VC2_GPIO_Port, RFSW_VC2_Pin, GPIO_PIN_RESET);
 139              		.loc 1 166 5 is_stmt 1 view .LVU13
 140 0010 0022     		movs	r2, #0
 141 0012 0421     		movs	r1, #4
 142 0014 0348     		ldr	r0, .L7
 143 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 144              	.LVL6:
 167:Core/Src/bt_radio.c ****     Radio.Rx(ltimeout);
 145              		.loc 1 167 5 view .LVU14
 146              		.loc 1 167 10 is_stmt 0 view .LVU15
 147 001a 034B     		ldr	r3, .L7+4
 148 001c 5B6B     		ldr	r3, [r3, #52]
 149              		.loc 1 167 5 view .LVU16
 150 001e 2046     		mov	r0, r4
 151 0020 9847     		blx	r3
 152              	.LVL7:
 168:Core/Src/bt_radio.c **** }
 153              		.loc 1 168 1 view .LVU17
 154 0022 10BD     		pop	{r4, pc}
 155              	.LVL8:
 156              	.L8:
 157              		.loc 1 168 1 view .LVU18
 158              		.align	2
 159              	.L7:
 160 0024 00040048 		.word	1207960576
 161 0028 00000000 		.word	Radio
 162              		.cfi_endproc
 163              	.LFE1117:
 165              		.section	.text.btLoRaTx,"ax",%progbits
 166              		.align	1
 167              		.global	btLoRaTx
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	btLoRaTx:
 174              	.LVL9:
 175              	.LFB1118:
 169:Core/Src/bt_radio.c **** 
 170:Core/Src/bt_radio.c **** /*Adapted from 
 171:Core/Src/bt_radio.c **** * Adapted from RadioSend in radio.c. Sets RF switch, loads TX data into register, sets radio into T
 172:Core/Src/bt_radio.c **** */
ARM GAS  /tmp/ccDeB17N.s 			page 7


 173:Core/Src/bt_radio.c **** void btLoRaTx(uint8_t *pData, uint8_t datalen){
 176              		.loc 1 173 47 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		.loc 1 173 47 is_stmt 0 view .LVU20
 181 0000 38B5     		push	{r3, r4, r5, lr}
 182              	.LCFI4:
 183              		.cfi_def_cfa_offset 16
 184              		.cfi_offset 3, -16
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 5, -8
 187              		.cfi_offset 14, -4
 188 0002 0446     		mov	r4, r0
 189 0004 0D46     		mov	r5, r1
 174:Core/Src/bt_radio.c ****     /* RF switch configuration */
 175:Core/Src/bt_radio.c ****     // For RX, set VC1 low, VC2 high. 
 176:Core/Src/bt_radio.c ****     HAL_GPIO_WritePin(RFSW_VC1_GPIO_Port, RFSW_VC1_Pin, GPIO_PIN_RESET);
 190              		.loc 1 176 5 is_stmt 1 view .LVU21
 191 0006 0022     		movs	r2, #0
 192 0008 0821     		movs	r1, #8
 193              	.LVL10:
 194              		.loc 1 176 5 is_stmt 0 view .LVU22
 195 000a 4FF09040 		mov	r0, #1207959552
 196              	.LVL11:
 197              		.loc 1 176 5 view .LVU23
 198 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 199              	.LVL12:
 177:Core/Src/bt_radio.c ****     HAL_GPIO_WritePin(RFSW_VC2_GPIO_Port, RFSW_VC2_Pin, GPIO_PIN_SET);
 200              		.loc 1 177 5 is_stmt 1 view .LVU24
 201 0012 0122     		movs	r2, #1
 202 0014 0421     		movs	r1, #4
 203 0016 0448     		ldr	r0, .L11
 204 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 205              	.LVL13:
 178:Core/Src/bt_radio.c ****     /*
 179:Core/Src/bt_radio.c ****     /* ST_WORKAROUND_BEGIN : Set the debug pin and update the radio switch 
 180:Core/Src/bt_radio.c ****     SUBGRF_SetDioIrqParams( IRQ_TX_DONE | IRQ_RX_TX_TIMEOUT | IRQ_TX_DBG,
 181:Core/Src/bt_radio.c ****                             IRQ_TX_DONE | IRQ_RX_TX_TIMEOUT | IRQ_TX_DBG,
 182:Core/Src/bt_radio.c ****                             IRQ_RADIO_NONE,
 183:Core/Src/bt_radio.c ****                             IRQ_RADIO_NONE );
 184:Core/Src/bt_radio.c ****     /* ST_WORKAROUND_END */
 185:Core/Src/bt_radio.c **** 
 186:Core/Src/bt_radio.c ****     /* ST_WORKAROUND_BEGIN : Set the debug pin and update the radio switch 
 187:Core/Src/bt_radio.c ****     /* Set DBG pin 
 188:Core/Src/bt_radio.c ****     DBG_GPIO_RADIO_TX( SET );
 189:Core/Src/bt_radio.c ****     /* WORKAROUND - Modulation Quality with 500 kHz LoRaTM Bandwidth*/
 190:Core/Src/bt_radio.c ****     /* RegTxModulation = @address 0x0889 
 191:Core/Src/bt_radio.c ****     if( ( SubgRf.Modem == MODEM_LORA ) && ( SubgRf.ModulationParams.Params.LoRa.Bandwidth == LORA_B
 192:Core/Src/bt_radio.c ****     {
 193:Core/Src/bt_radio.c ****         SUBGRF_WriteRegister( SUBGHZ_SDCFG0R, SUBGRF_ReadRegister( SUBGHZ_SDCFG0R ) & ~( 1 << 2 ) )
 194:Core/Src/bt_radio.c ****     }
 195:Core/Src/bt_radio.c ****     else
 196:Core/Src/bt_radio.c ****     {
 197:Core/Src/bt_radio.c ****         SUBGRF_WriteRegister( SUBGHZ_SDCFG0R, SUBGRF_ReadRegister( SUBGHZ_SDCFG0R ) | ( 1 << 2 ) );
 198:Core/Src/bt_radio.c ****     }
 199:Core/Src/bt_radio.c ****     /* WORKAROUND END
ARM GAS  /tmp/ccDeB17N.s 			page 8


 200:Core/Src/bt_radio.c ****     SubgRf.PacketParams.Params.LoRa.PayloadLength = datalen;
 201:Core/Src/bt_radio.c ****     SUBGRF_SetPacketParams( &SubgRf.PacketParams );
 202:Core/Src/bt_radio.c ****     SUBGRF_SendPayload( pData, datalen, 0 );
 203:Core/Src/bt_radio.c ****     TimerSetValue( &TxTimeoutTimer, SubgRf.TxTimeout );
 204:Core/Src/bt_radio.c ****     TimerStart( &TxTimeoutTimer ); */
 205:Core/Src/bt_radio.c ****     
 206:Core/Src/bt_radio.c ****     Radio.Send(pData, datalen);
 206              		.loc 1 206 5 view .LVU25
 207              		.loc 1 206 10 is_stmt 0 view .LVU26
 208 001c 034B     		ldr	r3, .L11+4
 209 001e 9B6A     		ldr	r3, [r3, #40]
 210              		.loc 1 206 5 view .LVU27
 211 0020 2946     		mov	r1, r5
 212 0022 2046     		mov	r0, r4
 213 0024 9847     		blx	r3
 214              	.LVL14:
 207:Core/Src/bt_radio.c **** 
 208:Core/Src/bt_radio.c **** }...
 215              		.loc 1 208 1 view .LVU28
 216 0026 38BD     		pop	{r3, r4, r5, pc}
 217              	.LVL15:
 218              	.L12:
 219              		.loc 1 208 1 view .LVU29
 220              		.align	2
 221              	.L11:
 222 0028 00040048 		.word	1207960576
 223 002c 00000000 		.word	Radio
 224              		.cfi_endproc
 225              	.LFE1118:
 227              		.text
 228              	.Letext0:
 229              		.file 2 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 230              		.file 3 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 231              		.file 4 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wl55xx.h"
 232              		.file 5 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_gpio.h"
 233              		.file 6 "Middlewares/Third_Party/SubGHz_Phy/radio.h"
 234              		.file 7 "Middlewares/Third_Party/SubGHz_Phy/radio_ex.h"
 235              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
ARM GAS  /tmp/ccDeB17N.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bt_radio.c
     /tmp/ccDeB17N.s:16     .text.btLoRaSetup:0000000000000000 $t
     /tmp/ccDeB17N.s:24     .text.btLoRaSetup:0000000000000000 btLoRaSetup
     /tmp/ccDeB17N.s:104    .text.btLoRaSetup:0000000000000068 $d
     /tmp/ccDeB17N.s:110    .text.btLoRaListen:0000000000000000 $t
     /tmp/ccDeB17N.s:117    .text.btLoRaListen:0000000000000000 btLoRaListen
     /tmp/ccDeB17N.s:160    .text.btLoRaListen:0000000000000024 $d
     /tmp/ccDeB17N.s:166    .text.btLoRaTx:0000000000000000 $t
     /tmp/ccDeB17N.s:173    .text.btLoRaTx:0000000000000000 btLoRaTx
     /tmp/ccDeB17N.s:222    .text.btLoRaTx:0000000000000028 $d

UNDEFINED SYMBOLS
Radio
HAL_GPIO_WritePin
