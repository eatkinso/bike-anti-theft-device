ARM GAS  /tmp/ccjT8vm0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler:
  25              	.LFB1095:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "subghz.h"
  23:Core/Src/main.c **** #include "app_subghz_phy.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "bt_radio.h"
  30:Core/Src/main.c **** #include "radio.h"
  31:Core/Src/main.c **** #include "timer.h"
  32:Core/Src/main.c **** #include "radio_driver.h"
ARM GAS  /tmp/ccjT8vm0.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE END 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Core/Src/main.c ****   HAL_Init();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Configure the system clock */
  87:Core/Src/main.c ****   SystemClock_Config();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccjT8vm0.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Initialize all configured peripherals */
  94:Core/Src/main.c ****   MX_SUBGHZ_Init();
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_USART1_UART_Init();
  97:Core/Src/main.c ****   MX_ADC_Init();
  98:Core/Src/main.c ****   MX_SubGHz_Phy_Init();
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 100:Core/Src/main.c ****   // btLoRaSetup();
 101:Core/Src/main.c ****   uint8_t dummydata[180] = {
 102:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 103:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 104:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 105:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 106:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 107:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 108:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 109:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 110:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 111:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 112:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 113:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 114:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 115:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 116:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 117:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 118:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 119:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,};
 120:Core/Src/main.c ****   
 121:Core/Src/main.c ****   volatile RadioStatus_t radio_state;
 122:Core/Src/main.c ****   volatile RadioError_t radio_errors;
 123:Core/Src/main.c ****   /* USER CODE END 2 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Infinite loop */
 126:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 127:Core/Src/main.c ****   while (1)
 128:Core/Src/main.c ****   {
 129:Core/Src/main.c ****     /* USER CODE END WHILE */
 130:Core/Src/main.c ****     MX_SubGHz_Phy_Process();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.c ****   //  HAL_GPIO_WritePin(RFSW_VC1_GPIO_Port, RFSW_VC1_Pin, GPIO_PIN_RESET);
 134:Core/Src/main.c ****   //  HAL_GPIO_WritePin(RFSW_VC2_GPIO_Port, RFSW_VC2_Pin, GPIO_PIN_SET);
 135:Core/Src/main.c ****     radio_state =SUBGRF_GetStatus();
 136:Core/Src/main.c ****     SUBGRF_SetRfFrequency(904600000);
 137:Core/Src/main.c ****     SUBGRF_SetRfTxPower(17);
 138:Core/Src/main.c ****     SUBGRF_SetTxContinuousWave();
 139:Core/Src/main.c ****     radio_state = SUBGRF_GetStatus();
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     radio_errors = SUBGRF_GetDeviceErrors();
 142:Core/Src/main.c ****     Radio.Standby();
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   }
 145:Core/Src/main.c ****   /* USER CODE END 3 */
 146:Core/Src/main.c **** }
ARM GAS  /tmp/ccjT8vm0.s 			page 4


 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****   * @brief System Clock Configuration
 150:Core/Src/main.c ****   * @retval None
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c **** void SystemClock_Config(void)
 153:Core/Src/main.c **** {
 154:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 155:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_MSI;
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 165:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 166:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 167:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_10;
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEDiv = RCC_HSE_DIV1;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 170:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     Error_Handler();
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Configure the SYSCLKSource, HCLK, PCLK1 and PCLK2 clocks dividers
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK3|RCC_CLOCKTYPE_HCLK
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK2;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSE, RCC_MCODIV_1);
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /* USER CODE END 4 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /**
 198:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 199:Core/Src/main.c ****   * @retval None
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c **** void Error_Handler(void)
 202:Core/Src/main.c **** {
  27              		.loc 1 202 1 view -0
ARM GAS  /tmp/ccjT8vm0.s 			page 5


  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 203:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 204:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 205:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 205 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccjT8vm0.s 			page 6


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  /tmp/ccjT8vm0.s 			page 7


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
ARM GAS  /tmp/ccjT8vm0.s 			page 8


 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 207 27 view .LVU2
  38              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 209 3 view .LVU3
  40              		.syntax unified
  41              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
ARM GAS  /tmp/ccjT8vm0.s 			page 9


  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 206:Core/Src/main.c ****   while (1)
  49              		.loc 1 206 3 discriminator 1 view .LVU4
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****   }
  50              		.loc 1 208 3 discriminator 1 view .LVU5
 206:Core/Src/main.c ****   while (1)
  51              		.loc 1 206 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE1095:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	SystemClock_Config:
  65              	.LFB1094:
 153:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  66              		.loc 1 153 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 104
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 00B5     		push	{lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 9BB0     		sub	sp, sp, #108
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 112
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 154 3 view .LVU8
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 154 22 is_stmt 0 view .LVU9
  79 0004 4822     		movs	r2, #72
  80 0006 0021     		movs	r1, #0
  81 0008 08A8     		add	r0, sp, #32
  82 000a FFF7FEFF 		bl	memset
  83              	.LVL0:
 155:Core/Src/main.c **** 
  84              		.loc 1 155 3 is_stmt 1 view .LVU10
 155:Core/Src/main.c **** 
  85              		.loc 1 155 22 is_stmt 0 view .LVU11
  86 000e 0023     		movs	r3, #0
  87 0010 0193     		str	r3, [sp, #4]
  88 0012 0293     		str	r3, [sp, #8]
  89 0014 0393     		str	r3, [sp, #12]
  90 0016 0493     		str	r3, [sp, #16]
  91 0018 0593     		str	r3, [sp, #20]
  92 001a 0693     		str	r3, [sp, #24]
  93 001c 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccjT8vm0.s 			page 10


 159:Core/Src/main.c **** 
  94              		.loc 1 159 3 is_stmt 1 view .LVU12
  95              	.LBB6:
 159:Core/Src/main.c **** 
  96              		.loc 1 159 3 view .LVU13
 159:Core/Src/main.c **** 
  97              		.loc 1 159 3 view .LVU14
  98 001e 1B49     		ldr	r1, .L9
  99 0020 0A68     		ldr	r2, [r1]
 100 0022 22F4C062 		bic	r2, r2, #1536
 101 0026 42F40072 		orr	r2, r2, #512
 102 002a 0A60     		str	r2, [r1]
 159:Core/Src/main.c **** 
 103              		.loc 1 159 3 view .LVU15
 104 002c 0A68     		ldr	r2, [r1]
 105 002e 02F4C062 		and	r2, r2, #1536
 106 0032 0092     		str	r2, [sp]
 159:Core/Src/main.c **** 
 107              		.loc 1 159 3 view .LVU16
 108 0034 009A     		ldr	r2, [sp]
 109              	.LBE6:
 159:Core/Src/main.c **** 
 110              		.loc 1 159 3 view .LVU17
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 111              		.loc 1 163 3 view .LVU18
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 112              		.loc 1 163 36 is_stmt 0 view .LVU19
 113 0036 2122     		movs	r2, #33
 114 0038 0892     		str	r2, [sp, #32]
 164:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 115              		.loc 1 164 3 is_stmt 1 view .LVU20
 164:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 116              		.loc 1 164 30 is_stmt 0 view .LVU21
 117 003a 4FF48032 		mov	r2, #65536
 118 003e 0992     		str	r2, [sp, #36]
 165:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 119              		.loc 1 165 3 is_stmt 1 view .LVU22
 165:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 120              		.loc 1 165 30 is_stmt 0 view .LVU23
 121 0040 0122     		movs	r2, #1
 122 0042 1092     		str	r2, [sp, #64]
 166:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_10;
 123              		.loc 1 166 3 is_stmt 1 view .LVU24
 166:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_10;
 124              		.loc 1 166 41 is_stmt 0 view .LVU25
 125 0044 1193     		str	r3, [sp, #68]
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSEDiv = RCC_HSE_DIV1;
 126              		.loc 1 167 3 is_stmt 1 view .LVU26
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSEDiv = RCC_HSE_DIV1;
 127              		.loc 1 167 35 is_stmt 0 view .LVU27
 128 0046 A022     		movs	r2, #160
 129 0048 1292     		str	r2, [sp, #72]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 130              		.loc 1 168 3 is_stmt 1 view .LVU28
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 131              		.loc 1 168 28 is_stmt 0 view .LVU29
 132 004a 0A93     		str	r3, [sp, #40]
ARM GAS  /tmp/ccjT8vm0.s 			page 11


 169:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133              		.loc 1 169 3 is_stmt 1 view .LVU30
 169:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 134              		.loc 1 169 34 is_stmt 0 view .LVU31
 135 004c 1393     		str	r3, [sp, #76]
 170:Core/Src/main.c ****   {
 136              		.loc 1 170 3 is_stmt 1 view .LVU32
 170:Core/Src/main.c ****   {
 137              		.loc 1 170 7 is_stmt 0 view .LVU33
 138 004e 08A8     		add	r0, sp, #32
 139 0050 FFF7FEFF 		bl	HAL_RCC_OscConfig
 140              	.LVL1:
 170:Core/Src/main.c ****   {
 141              		.loc 1 170 6 view .LVU34
 142 0054 B0B9     		cbnz	r0, .L7
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 143              		.loc 1 177 3 is_stmt 1 view .LVU35
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 144              		.loc 1 177 31 is_stmt 0 view .LVU36
 145 0056 4F23     		movs	r3, #79
 146 0058 0193     		str	r3, [sp, #4]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 147              		.loc 1 180 3 is_stmt 1 view .LVU37
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 148              		.loc 1 180 34 is_stmt 0 view .LVU38
 149 005a 0023     		movs	r3, #0
 150 005c 0293     		str	r3, [sp, #8]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 151              		.loc 1 181 3 is_stmt 1 view .LVU39
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 152              		.loc 1 181 35 is_stmt 0 view .LVU40
 153 005e 0393     		str	r3, [sp, #12]
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 154              		.loc 1 182 3 is_stmt 1 view .LVU41
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 155              		.loc 1 182 36 is_stmt 0 view .LVU42
 156 0060 0493     		str	r3, [sp, #16]
 183:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 157              		.loc 1 183 3 is_stmt 1 view .LVU43
 183:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 158              		.loc 1 183 36 is_stmt 0 view .LVU44
 159 0062 0593     		str	r3, [sp, #20]
 184:Core/Src/main.c **** 
 160              		.loc 1 184 3 is_stmt 1 view .LVU45
 184:Core/Src/main.c **** 
 161              		.loc 1 184 36 is_stmt 0 view .LVU46
 162 0064 0793     		str	r3, [sp, #28]
 186:Core/Src/main.c ****   {
 163              		.loc 1 186 3 is_stmt 1 view .LVU47
 186:Core/Src/main.c ****   {
 164              		.loc 1 186 7 is_stmt 0 view .LVU48
 165 0066 0121     		movs	r1, #1
 166 0068 01A8     		add	r0, sp, #4
 167 006a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 168              	.LVL2:
 186:Core/Src/main.c ****   {
 169              		.loc 1 186 6 view .LVU49
ARM GAS  /tmp/ccjT8vm0.s 			page 12


 170 006e 58B9     		cbnz	r0, .L8
 190:Core/Src/main.c **** }
 171              		.loc 1 190 3 is_stmt 1 view .LVU50
 172 0070 0022     		movs	r2, #0
 173 0072 4FF08061 		mov	r1, #67108864
 174 0076 4FF48070 		mov	r0, #256
 175 007a FFF7FEFF 		bl	HAL_RCC_MCOConfig
 176              	.LVL3:
 191:Core/Src/main.c **** 
 177              		.loc 1 191 1 is_stmt 0 view .LVU51
 178 007e 1BB0     		add	sp, sp, #108
 179              	.LCFI2:
 180              		.cfi_remember_state
 181              		.cfi_def_cfa_offset 4
 182              		@ sp needed
 183 0080 5DF804FB 		ldr	pc, [sp], #4
 184              	.L7:
 185              	.LCFI3:
 186              		.cfi_restore_state
 172:Core/Src/main.c ****   }
 187              		.loc 1 172 5 is_stmt 1 view .LVU52
 188 0084 FFF7FEFF 		bl	Error_Handler
 189              	.LVL4:
 190              	.L8:
 188:Core/Src/main.c ****   }
 191              		.loc 1 188 5 view .LVU53
 192 0088 FFF7FEFF 		bl	Error_Handler
 193              	.LVL5:
 194              	.L10:
 195              		.align	2
 196              	.L9:
 197 008c 00040058 		.word	1476396032
 198              		.cfi_endproc
 199              	.LFE1094:
 201              		.section	.text.main,"ax",%progbits
 202              		.align	1
 203              		.global	main
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu softvfp
 209              	main:
 210              	.LFB1093:
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 211              		.loc 1 72 1 view -0
 212              		.cfi_startproc
 213              		@ Volatile: function does not return.
 214              		@ args = 0, pretend = 0, frame = 192
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 00B5     		push	{lr}
 217              	.LCFI4:
 218              		.cfi_def_cfa_offset 4
 219              		.cfi_offset 14, -4
 220 0002 B1B0     		sub	sp, sp, #196
 221              	.LCFI5:
 222              		.cfi_def_cfa_offset 200
  80:Core/Src/main.c **** 
ARM GAS  /tmp/ccjT8vm0.s 			page 13


 223              		.loc 1 80 3 view .LVU55
 224 0004 FFF7FEFF 		bl	HAL_Init
 225              	.LVL6:
  87:Core/Src/main.c **** 
 226              		.loc 1 87 3 view .LVU56
 227 0008 FFF7FEFF 		bl	SystemClock_Config
 228              	.LVL7:
  94:Core/Src/main.c ****   MX_GPIO_Init();
 229              		.loc 1 94 3 view .LVU57
 230 000c FFF7FEFF 		bl	MX_SUBGHZ_Init
 231              	.LVL8:
  95:Core/Src/main.c ****   MX_USART1_UART_Init();
 232              		.loc 1 95 3 view .LVU58
 233 0010 FFF7FEFF 		bl	MX_GPIO_Init
 234              	.LVL9:
  96:Core/Src/main.c ****   MX_ADC_Init();
 235              		.loc 1 96 3 view .LVU59
 236 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 237              	.LVL10:
  97:Core/Src/main.c ****   MX_SubGHz_Phy_Init();
 238              		.loc 1 97 3 view .LVU60
 239 0018 FFF7FEFF 		bl	MX_ADC_Init
 240              	.LVL11:
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 241              		.loc 1 98 3 view .LVU61
 242 001c FFF7FEFF 		bl	MX_SubGHz_Phy_Init
 243              	.LVL12:
 101:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 244              		.loc 1 101 3 view .LVU62
 101:Core/Src/main.c ****     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
 245              		.loc 1 101 11 is_stmt 0 view .LVU63
 246 0020 B422     		movs	r2, #180
 247 0022 0F49     		ldr	r1, .L14
 248 0024 03A8     		add	r0, sp, #12
 249 0026 FFF7FEFF 		bl	memcpy
 250              	.LVL13:
 251              	.L12:
 121:Core/Src/main.c ****   volatile RadioError_t radio_errors;
 252              		.loc 1 121 3 is_stmt 1 discriminator 1 view .LVU64
 122:Core/Src/main.c ****   /* USER CODE END 2 */
 253              		.loc 1 122 3 discriminator 1 view .LVU65
 127:Core/Src/main.c ****   {
 254              		.loc 1 127 3 discriminator 1 view .LVU66
 130:Core/Src/main.c **** 
 255              		.loc 1 130 5 discriminator 1 view .LVU67
 256 002a FFF7FEFF 		bl	MX_SubGHz_Phy_Process
 257              	.LVL14:
 135:Core/Src/main.c ****     SUBGRF_SetRfFrequency(904600000);
 258              		.loc 1 135 5 discriminator 1 view .LVU68
 135:Core/Src/main.c ****     SUBGRF_SetRfFrequency(904600000);
 259              		.loc 1 135 18 is_stmt 0 discriminator 1 view .LVU69
 260 002e FFF7FEFF 		bl	SUBGRF_GetStatus
 261              	.LVL15:
 262 0032 8DF80800 		strb	r0, [sp, #8]
 136:Core/Src/main.c ****     SUBGRF_SetRfTxPower(17);
 263              		.loc 1 136 5 is_stmt 1 discriminator 1 view .LVU70
 264 0036 0B48     		ldr	r0, .L14+4
ARM GAS  /tmp/ccjT8vm0.s 			page 14


 265 0038 FFF7FEFF 		bl	SUBGRF_SetRfFrequency
 266              	.LVL16:
 137:Core/Src/main.c ****     SUBGRF_SetTxContinuousWave();
 267              		.loc 1 137 5 discriminator 1 view .LVU71
 268 003c 1120     		movs	r0, #17
 269 003e FFF7FEFF 		bl	SUBGRF_SetRfTxPower
 270              	.LVL17:
 138:Core/Src/main.c ****     radio_state = SUBGRF_GetStatus();
 271              		.loc 1 138 5 discriminator 1 view .LVU72
 272 0042 FFF7FEFF 		bl	SUBGRF_SetTxContinuousWave
 273              	.LVL18:
 139:Core/Src/main.c **** 
 274              		.loc 1 139 5 discriminator 1 view .LVU73
 139:Core/Src/main.c **** 
 275              		.loc 1 139 19 is_stmt 0 discriminator 1 view .LVU74
 276 0046 FFF7FEFF 		bl	SUBGRF_GetStatus
 277              	.LVL19:
 278 004a 8DF80800 		strb	r0, [sp, #8]
 141:Core/Src/main.c ****     Radio.Standby();
 279              		.loc 1 141 5 is_stmt 1 discriminator 1 view .LVU75
 141:Core/Src/main.c ****     Radio.Standby();
 280              		.loc 1 141 20 is_stmt 0 discriminator 1 view .LVU76
 281 004e FFF7FEFF 		bl	SUBGRF_GetDeviceErrors
 282              	.LVL20:
 283 0052 ADF80400 		strh	r0, [sp, #4]	@ movhi
 142:Core/Src/main.c **** 
 284              		.loc 1 142 5 is_stmt 1 discriminator 1 view .LVU77
 142:Core/Src/main.c **** 
 285              		.loc 1 142 10 is_stmt 0 discriminator 1 view .LVU78
 286 0056 044B     		ldr	r3, .L14+8
 287 0058 1B6B     		ldr	r3, [r3, #48]
 142:Core/Src/main.c **** 
 288              		.loc 1 142 5 discriminator 1 view .LVU79
 289 005a 9847     		blx	r3
 290              	.LVL21:
 127:Core/Src/main.c ****   {
 291              		.loc 1 127 9 is_stmt 1 discriminator 1 view .LVU80
 292 005c E5E7     		b	.L12
 293              	.L15:
 294 005e 00BF     		.align	2
 295              	.L14:
 296 0060 00000000 		.word	.LANCHOR0
 297 0064 C019EB35 		.word	904600000
 298 0068 00000000 		.word	Radio
 299              		.cfi_endproc
 300              	.LFE1093:
 302              		.section	.rodata
 303              		.align	2
 304              		.set	.LANCHOR0,. + 0
 305              	.LC0:
 306 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\000\001\002"
 306      04050607 
 306      08090001 
 306      02
 307 000d 03040506 		.ascii	"\003\004\005\006\007\010\011\000\001\002\003\004\005"
 307      07080900 
 307      01020304 
ARM GAS  /tmp/ccjT8vm0.s 			page 15


 307      05
 308 001a 06070809 		.ascii	"\006\007\010\011\000\001\002\003\004\005\006\007\010"
 308      00010203 
 308      04050607 
 308      08
 309 0027 09000102 		.ascii	"\011\000\001\002\003\004\005\006\007\010\011\000\001"
 309      03040506 
 309      07080900 
 309      01
 310 0034 02030405 		.ascii	"\002\003\004\005\006\007\010\011\000\001\002\003\004"
 310      06070809 
 310      00010203 
 310      04
 311 0041 05060708 		.ascii	"\005\006\007\010\011\000\001\002\003\004\005\006\007"
 311      09000102 
 311      03040506 
 311      07
 312 004e 08090001 		.ascii	"\010\011\000\001\002\003\004\005\006\007\010\011\000"
 312      02030405 
 312      06070809 
 312      00
 313 005b 01020304 		.ascii	"\001\002\003\004\005\006\007\010\011\000\001\002\003"
 313      05060708 
 313      09000102 
 313      03
 314 0068 04050607 		.ascii	"\004\005\006\007\010\011\000\001\002\003\004\005\006"
 314      08090001 
 314      02030405 
 314      06
 315 0075 07080900 		.ascii	"\007\010\011\000\001\002\003\004\005\006\007\010\011"
 315      01020304 
 315      05060708 
 315      09
 316 0082 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\000\001\002"
 316      04050607 
 316      08090001 
 316      02
 317 008f 03040506 		.ascii	"\003\004\005\006\007\010\011\000\001\002\003\004\005"
 317      07080900 
 317      01020304 
 317      05
 318 009c 06070809 		.ascii	"\006\007\010\011\000\001\002\003\004\005\006\007\010"
 318      00010203 
 318      04050607 
 318      08
 319 00a9 09000102 		.ascii	"\011\000\001\002\003\004\005\006\007\010\011"
 319      03040506 
 319      070809
 320              		.text
 321              	.Letext0:
 322              		.file 3 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 323              		.file 4 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 324              		.file 5 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wl55xx.h"
 325              		.file 6 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_rcc.h"
 326              		.file 7 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 327              		.file 8 "Middlewares/Third_Party/SubGHz_Phy/radio.h"
 328              		.file 9 "Middlewares/Third_Party/SubGHz_Phy/radio_ex.h"
ARM GAS  /tmp/ccjT8vm0.s 			page 16


 329              		.file 10 "Middlewares/Third_Party/SubGHz_Phy/stm32_radio_driver/radio_driver.h"
 330              		.file 11 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 331              		.file 12 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal.h"
 332              		.file 13 "Core/Inc/subghz.h"
 333              		.file 14 "Core/Inc/gpio.h"
 334              		.file 15 "Core/Inc/usart.h"
 335              		.file 16 "Core/Inc/adc.h"
 336              		.file 17 "SubGHz_Phy/App/app_subghz_phy.h"
 337              		.file 18 "<built-in>"
ARM GAS  /tmp/ccjT8vm0.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccjT8vm0.s:16     .text.Error_Handler:0000000000000000 $t
     /tmp/ccjT8vm0.s:24     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccjT8vm0.s:57     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccjT8vm0.s:64     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccjT8vm0.s:197    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccjT8vm0.s:202    .text.main:0000000000000000 $t
     /tmp/ccjT8vm0.s:209    .text.main:0000000000000000 main
     /tmp/ccjT8vm0.s:296    .text.main:0000000000000060 $d
     /tmp/ccjT8vm0.s:303    .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_Init
MX_SUBGHZ_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_ADC_Init
MX_SubGHz_Phy_Init
memcpy
MX_SubGHz_Phy_Process
SUBGRF_GetStatus
SUBGRF_SetRfFrequency
SUBGRF_SetRfTxPower
SUBGRF_SetTxContinuousWave
SUBGRF_GetDeviceErrors
Radio
