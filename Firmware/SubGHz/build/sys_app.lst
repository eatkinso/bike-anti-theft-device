ARM GAS  /tmp/ccHyTwH1.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"sys_app.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemApp_Init,"ax",%progbits
  16              		.align	1
  17              		.global	SystemApp_Init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemApp_Init:
  25              	.LFB1119:
  26              		.file 1 "Core/Src/sys_app.c"
   1:Core/Src/sys_app.c **** /* USER CODE BEGIN Header */
   2:Core/Src/sys_app.c **** /**
   3:Core/Src/sys_app.c ****   ******************************************************************************
   4:Core/Src/sys_app.c ****   * @file    sys_app.c
   5:Core/Src/sys_app.c ****   * @author  MCD Application Team
   6:Core/Src/sys_app.c ****   * @brief   Initializes HW and SW system entities (not related to the radio)
   7:Core/Src/sys_app.c ****   ******************************************************************************
   8:Core/Src/sys_app.c ****   * @attention
   9:Core/Src/sys_app.c ****   *
  10:Core/Src/sys_app.c ****   * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/sys_app.c ****   * All rights reserved.
  12:Core/Src/sys_app.c ****   *
  13:Core/Src/sys_app.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/sys_app.c ****   * in the root directory of this software component.
  15:Core/Src/sys_app.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/sys_app.c ****   *
  17:Core/Src/sys_app.c ****   ******************************************************************************
  18:Core/Src/sys_app.c ****   */
  19:Core/Src/sys_app.c **** /* USER CODE END Header */
  20:Core/Src/sys_app.c **** 
  21:Core/Src/sys_app.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/sys_app.c **** #include <stdio.h>
  23:Core/Src/sys_app.c **** #include "platform.h"
  24:Core/Src/sys_app.c **** #include "sys_app.h"
  25:Core/Src/sys_app.c **** #include "stm32_seq.h"
  26:Core/Src/sys_app.c **** #include "stm32_systime.h"
  27:Core/Src/sys_app.c **** #include "stm32_lpm.h"
  28:Core/Src/sys_app.c **** #include "timer_if.h"
  29:Core/Src/sys_app.c **** #include "utilities_def.h"
  30:Core/Src/sys_app.c **** 
  31:Core/Src/sys_app.c **** /* USER CODE BEGIN Includes */
  32:Core/Src/sys_app.c **** 
ARM GAS  /tmp/ccHyTwH1.s 			page 2


  33:Core/Src/sys_app.c **** /* USER CODE END Includes */
  34:Core/Src/sys_app.c **** 
  35:Core/Src/sys_app.c **** /* External variables ---------------------------------------------------------*/
  36:Core/Src/sys_app.c **** /* USER CODE BEGIN EV */
  37:Core/Src/sys_app.c **** 
  38:Core/Src/sys_app.c **** /* USER CODE END EV */
  39:Core/Src/sys_app.c **** 
  40:Core/Src/sys_app.c **** /* Private typedef -----------------------------------------------------------*/
  41:Core/Src/sys_app.c **** /* USER CODE BEGIN PTD */
  42:Core/Src/sys_app.c **** 
  43:Core/Src/sys_app.c **** /* USER CODE END PTD */
  44:Core/Src/sys_app.c **** 
  45:Core/Src/sys_app.c **** /* Private define ------------------------------------------------------------*/
  46:Core/Src/sys_app.c **** /* USER CODE BEGIN PD */
  47:Core/Src/sys_app.c **** 
  48:Core/Src/sys_app.c **** /* USER CODE END PD */
  49:Core/Src/sys_app.c **** 
  50:Core/Src/sys_app.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/sys_app.c **** /* USER CODE BEGIN PM */
  52:Core/Src/sys_app.c **** 
  53:Core/Src/sys_app.c **** /* USER CODE END PM */
  54:Core/Src/sys_app.c **** 
  55:Core/Src/sys_app.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/sys_app.c **** static uint8_t SYS_TimerInitialisedFlag = 0;
  57:Core/Src/sys_app.c **** 
  58:Core/Src/sys_app.c **** /* USER CODE BEGIN PV */
  59:Core/Src/sys_app.c **** 
  60:Core/Src/sys_app.c **** /* USER CODE END PV */
  61:Core/Src/sys_app.c **** 
  62:Core/Src/sys_app.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/sys_app.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/sys_app.c **** 
  65:Core/Src/sys_app.c **** /* USER CODE END PFP */
  66:Core/Src/sys_app.c **** 
  67:Core/Src/sys_app.c **** /* Exported functions ---------------------------------------------------------*/
  68:Core/Src/sys_app.c **** void SystemApp_Init(void)
  69:Core/Src/sys_app.c **** {
  27              		.loc 1 69 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  70:Core/Src/sys_app.c ****   /* USER CODE BEGIN SystemApp_Init_1 */
  71:Core/Src/sys_app.c **** 
  72:Core/Src/sys_app.c ****   /* USER CODE END SystemApp_Init_1 */
  73:Core/Src/sys_app.c **** 
  74:Core/Src/sys_app.c **** }
  32              		.loc 1 74 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE1119:
  37              		.section	.text.HAL_GetTick,"ax",%progbits
  38              		.align	1
  39              		.global	HAL_GetTick
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
ARM GAS  /tmp/ccHyTwH1.s 			page 3


  43              		.fpu softvfp
  45              	HAL_GetTick:
  46              	.LFB1120:
  75:Core/Src/sys_app.c **** 
  76:Core/Src/sys_app.c **** /* USER CODE BEGIN EF */
  77:Core/Src/sys_app.c **** 
  78:Core/Src/sys_app.c **** /* USER CODE END EF */
  79:Core/Src/sys_app.c **** 
  80:Core/Src/sys_app.c **** /* Private functions ---------------------------------------------------------*/
  81:Core/Src/sys_app.c **** /* USER CODE BEGIN PrFD */
  82:Core/Src/sys_app.c **** 
  83:Core/Src/sys_app.c **** /* USER CODE END PrFD */
  84:Core/Src/sys_app.c **** 
  85:Core/Src/sys_app.c **** /* HAL overload functions ---------------------------------------------------------*/
  86:Core/Src/sys_app.c **** 
  87:Core/Src/sys_app.c **** /* Set #if 0 if you want to keep the default HAL instead overcharge them*/
  88:Core/Src/sys_app.c **** /* USER CODE BEGIN Overload_HAL_weaks_1 */
  89:Core/Src/sys_app.c **** #if 1
  90:Core/Src/sys_app.c **** /* USER CODE END Overload_HAL_weaks_1 */
  91:Core/Src/sys_app.c **** 
  92:Core/Src/sys_app.c **** /* USER CODE BEGIN Overload_HAL_weaks_1a */
  93:Core/Src/sys_app.c **** 
  94:Core/Src/sys_app.c **** /* USER CODE END Overload_HAL_weaks_1a */
  95:Core/Src/sys_app.c **** 
  96:Core/Src/sys_app.c **** /**
  97:Core/Src/sys_app.c ****   * @note This function overwrites the __weak one from HAL
  98:Core/Src/sys_app.c ****   */
  99:Core/Src/sys_app.c **** uint32_t HAL_GetTick(void)
 100:Core/Src/sys_app.c **** {
  47              		.loc 1 100 1 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 101:Core/Src/sys_app.c ****   uint32_t ret = 0;
  52              		.loc 1 101 3 view .LVU3
  53              	.LVL0:
 102:Core/Src/sys_app.c ****   /* TIMER_IF can be based on other counter the SysTick e.g. RTC */
 103:Core/Src/sys_app.c ****   /* USER CODE BEGIN HAL_GetTick_1 */
 104:Core/Src/sys_app.c **** 
 105:Core/Src/sys_app.c ****   /* USER CODE END HAL_GetTick_1 */
 106:Core/Src/sys_app.c ****   if (SYS_TimerInitialisedFlag == 0)
  54              		.loc 1 106 3 view .LVU4
 107:Core/Src/sys_app.c ****   {
 108:Core/Src/sys_app.c ****     /* TIMER_IF_GetTimerValue should be used only once UTIL_TIMER_Init() is initialized */
 109:Core/Src/sys_app.c ****     /* If HAL_Delay or a TIMEOUT countdown is necessary during initialization phase */
 110:Core/Src/sys_app.c ****     /* please use temporarily another timebase source (SysTick or TIMx), which implies also */
 111:Core/Src/sys_app.c ****     /* to rework the above function HAL_InitTick() and to call HAL_IncTick() on the timebase IRQ */
 112:Core/Src/sys_app.c ****     /* Note: when TIMER_IF is based on RTC, stm32wlxx_hal_rtc.c calls this function before TimeServ
 113:Core/Src/sys_app.c ****     /* RTC TIMEOUT will not expire, i.e. if RTC has an hw problem it will keep looping in the RTC_I
 114:Core/Src/sys_app.c ****     /* USER CODE BEGIN HAL_GetTick_EarlyCall */
 115:Core/Src/sys_app.c **** 
 116:Core/Src/sys_app.c ****     /* USER CODE END HAL_GetTick_EarlyCall */
 117:Core/Src/sys_app.c ****   }
 118:Core/Src/sys_app.c ****   else
 119:Core/Src/sys_app.c ****   {
 120:Core/Src/sys_app.c ****     ret = TIMER_IF_GetTimerValue();
ARM GAS  /tmp/ccHyTwH1.s 			page 4


 121:Core/Src/sys_app.c ****   }
 122:Core/Src/sys_app.c ****   /* USER CODE BEGIN HAL_GetTick_2 */
 123:Core/Src/sys_app.c **** 
 124:Core/Src/sys_app.c ****   /* USER CODE END HAL_GetTick_2 */
 125:Core/Src/sys_app.c ****   return ret;
  55              		.loc 1 125 3 view .LVU5
 126:Core/Src/sys_app.c **** }
  56              		.loc 1 126 1 is_stmt 0 view .LVU6
  57 0000 0020     		movs	r0, #0
  58 0002 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE1120:
  62              		.section	.text.HAL_Delay,"ax",%progbits
  63              		.align	1
  64              		.global	HAL_Delay
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu softvfp
  70              	HAL_Delay:
  71              	.LVL1:
  72              	.LFB1121:
 127:Core/Src/sys_app.c **** 
 128:Core/Src/sys_app.c **** /**
 129:Core/Src/sys_app.c ****   * @note This function overwrites the __weak one from HAL
 130:Core/Src/sys_app.c ****   */
 131:Core/Src/sys_app.c **** void HAL_Delay(__IO uint32_t Delay)
 132:Core/Src/sys_app.c **** {
  73              		.loc 1 132 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 8
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		.loc 1 132 1 is_stmt 0 view .LVU8
  78 0000 00B5     		push	{lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 4
  81              		.cfi_offset 14, -4
  82 0002 83B0     		sub	sp, sp, #12
  83              	.LCFI1:
  84              		.cfi_def_cfa_offset 16
  85 0004 0190     		str	r0, [sp, #4]
 133:Core/Src/sys_app.c ****   /* TIMER_IF can be based on other counter the SysTick e.g. RTC */
 134:Core/Src/sys_app.c ****   /* USER CODE BEGIN HAL_Delay_1 */
 135:Core/Src/sys_app.c **** 
 136:Core/Src/sys_app.c ****   /* USER CODE END HAL_Delay_1 */
 137:Core/Src/sys_app.c ****   TIMER_IF_DelayMs(Delay);
  86              		.loc 1 137 3 is_stmt 1 view .LVU9
  87 0006 0198     		ldr	r0, [sp, #4]
  88              	.LVL2:
  89              		.loc 1 137 3 is_stmt 0 view .LVU10
  90 0008 FFF7FEFF 		bl	TIMER_IF_DelayMs
  91              	.LVL3:
 138:Core/Src/sys_app.c ****   /* USER CODE BEGIN HAL_Delay_2 */
 139:Core/Src/sys_app.c **** 
 140:Core/Src/sys_app.c ****   /* USER CODE END HAL_Delay_2 */
 141:Core/Src/sys_app.c **** }
  92              		.loc 1 141 1 view .LVU11
ARM GAS  /tmp/ccHyTwH1.s 			page 5


  93 000c 03B0     		add	sp, sp, #12
  94              	.LCFI2:
  95              		.cfi_def_cfa_offset 4
  96              		@ sp needed
  97 000e 5DF804FB 		ldr	pc, [sp], #4
  98              		.loc 1 141 1 view .LVU12
  99              		.cfi_endproc
 100              	.LFE1121:
 102              		.text
 103              	.Letext0:
 104              		.file 2 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 105              		.file 3 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 106              		.file 4 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 107              		.file 5 "Core/Inc/timer_if.h"
ARM GAS  /tmp/ccHyTwH1.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sys_app.c
     /tmp/ccHyTwH1.s:16     .text.SystemApp_Init:0000000000000000 $t
     /tmp/ccHyTwH1.s:24     .text.SystemApp_Init:0000000000000000 SystemApp_Init
     /tmp/ccHyTwH1.s:38     .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccHyTwH1.s:45     .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccHyTwH1.s:63     .text.HAL_Delay:0000000000000000 $t
     /tmp/ccHyTwH1.s:70     .text.HAL_Delay:0000000000000000 HAL_Delay

UNDEFINED SYMBOLS
TIMER_IF_DelayMs
