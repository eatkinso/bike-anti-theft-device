ARM GAS  /tmp/ccETXAHu.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB979:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccETXAHu.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c ****  ADC_HandleTypeDef hadc;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef hlpuart1;
  45:Core/Src/main.c **** UART_HandleTypeDef huart1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  48:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  58:Core/Src/main.c **** static void MX_ADC_Init(void);
  59:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void);
  60:Core/Src/main.c **** static void MX_TIM1_Init(void);
  61:Core/Src/main.c **** static void MX_TIM2_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  68:Core/Src/main.c **** char dummymsg[]={
  69:Core/Src/main.c **** 		 "dummymessage \n\r"
  70:Core/Src/main.c ****  };
  71:Core/Src/main.c **** /* USER CODE END 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****   * @brief  The application entry point.
  75:Core/Src/main.c ****   * @retval int
  76:Core/Src/main.c ****   */
  77:Core/Src/main.c **** int main(void)
  78:Core/Src/main.c **** {
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  /tmp/ccETXAHu.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   MX_USART1_UART_Init();
 102:Core/Src/main.c ****   MX_ADC_Init();
 103:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 104:Core/Src/main.c ****   MX_TIM1_Init();
 105:Core/Src/main.c ****   MX_TIM2_Init();
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Infinite loop */
 111:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 112:Core/Src/main.c ****   while (1)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 117:Core/Src/main.c ****     for (int i=0; i<17; i++){
 118:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart1, &dummymsg[i], 1, 1000);
 119:Core/Src/main.c **** 	  };
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c ****   /* USER CODE END 3 */
 122:Core/Src/main.c **** }
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /**
 125:Core/Src/main.c ****   * @brief System Clock Configuration
 126:Core/Src/main.c ****   * @retval None
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c **** void SystemClock_Config(void)
 129:Core/Src/main.c **** {
 130:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_MSI;
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 141:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 143:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 144:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_11;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 147:Core/Src/main.c ****   {
ARM GAS  /tmp/ccETXAHu.s 			page 4


 148:Core/Src/main.c ****     Error_Handler();
 149:Core/Src/main.c ****   }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Configure the SYSCLKSource, HCLK, PCLK1 and PCLK2 clocks dividers
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK3|RCC_CLOCKTYPE_HCLK
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK2;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c **** }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /**
 169:Core/Src/main.c ****   * @brief ADC Initialization Function
 170:Core/Src/main.c ****   * @param None
 171:Core/Src/main.c ****   * @retval None
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c **** static void MX_ADC_Init(void)
 174:Core/Src/main.c **** {
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c ****   hadc.Instance = ADC;
 187:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 188:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 189:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 190:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DISABLE;
 191:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 192:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 193:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 194:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 195:Core/Src/main.c ****   hadc.Init.NbrOfConversion = 1;
 196:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 197:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 198:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 199:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 200:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 201:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 202:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_1CYCLE_5;
 203:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 204:Core/Src/main.c ****   hadc.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
ARM GAS  /tmp/ccETXAHu.s 			page 5


 205:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** }
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /**
 216:Core/Src/main.c ****   * @brief LPUART1 Initialization Function
 217:Core/Src/main.c ****   * @param None
 218:Core/Src/main.c ****   * @retval None
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void)
 221:Core/Src/main.c **** {
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 0 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 0 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 1 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 1 */
 230:Core/Src/main.c ****   hlpuart1.Instance = LPUART1;
 231:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 9600;
 232:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 233:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 234:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 235:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 236:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 237:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 238:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 239:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_SWAP_INIT;
 240:Core/Src/main.c ****   hlpuart1.AdvancedInit.Swap = UART_ADVFEATURE_SWAP_ENABLE;
 241:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 242:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****     Error_Handler();
 245:Core/Src/main.c ****   }
 246:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 255:Core/Src/main.c ****   {
 256:Core/Src/main.c ****     Error_Handler();
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 2 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 2 */
 261:Core/Src/main.c **** 
ARM GAS  /tmp/ccETXAHu.s 			page 6


 262:Core/Src/main.c **** }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /**
 265:Core/Src/main.c ****   * @brief USART1 Initialization Function
 266:Core/Src/main.c ****   * @param None
 267:Core/Src/main.c ****   * @retval None
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 270:Core/Src/main.c **** {
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 279:Core/Src/main.c ****   huart1.Instance = USART1;
 280:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 281:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 282:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 283:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 284:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 285:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 286:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_8;
 287:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_ENABLE;
 288:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 289:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_SWAP_INIT;
 290:Core/Src/main.c ****   huart1.AdvancedInit.Swap = UART_ADVFEATURE_SWAP_ENABLE;
 291:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 292:Core/Src/main.c ****   {
 293:Core/Src/main.c ****     Error_Handler();
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     Error_Handler();
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 300:Core/Src/main.c ****   {
 301:Core/Src/main.c ****     Error_Handler();
 302:Core/Src/main.c ****   }
 303:Core/Src/main.c ****   if (HAL_UARTEx_EnableFifoMode(&huart1) != HAL_OK)
 304:Core/Src/main.c ****   {
 305:Core/Src/main.c ****     Error_Handler();
 306:Core/Src/main.c ****   }
 307:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** }
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** /**
 314:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 315:Core/Src/main.c ****   * @param None
 316:Core/Src/main.c ****   * @retval None
 317:Core/Src/main.c ****   */
 318:Core/Src/main.c **** static void MX_TIM1_Init(void)
ARM GAS  /tmp/ccETXAHu.s 			page 7


 319:Core/Src/main.c **** {
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 326:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 327:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 328:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 333:Core/Src/main.c ****   htim1.Instance = TIM1;
 334:Core/Src/main.c ****   htim1.Init.Prescaler = 2400;
 335:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 336:Core/Src/main.c ****   htim1.Init.Period = 3;
 337:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 338:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 339:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 340:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 345:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 350:Core/Src/main.c ****   {
 351:Core/Src/main.c ****     Error_Handler();
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 354:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 355:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 356:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 357:Core/Src/main.c ****   {
 358:Core/Src/main.c ****     Error_Handler();
 359:Core/Src/main.c ****   }
 360:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 361:Core/Src/main.c ****   sConfigOC.Pulse = 2;
 362:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 363:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 364:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 365:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 366:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 367:Core/Src/main.c ****   {
 368:Core/Src/main.c ****     Error_Handler();
 369:Core/Src/main.c ****   }
 370:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 371:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 372:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 373:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 374:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 375:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
ARM GAS  /tmp/ccETXAHu.s 			page 8


 376:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 377:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 378:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 379:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 380:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 381:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 382:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 383:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 384:Core/Src/main.c ****   {
 385:Core/Src/main.c ****     Error_Handler();
 386:Core/Src/main.c ****   }
 387:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 390:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** }
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** /**
 395:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 396:Core/Src/main.c ****   * @param None
 397:Core/Src/main.c ****   * @retval None
 398:Core/Src/main.c ****   */
 399:Core/Src/main.c **** static void MX_TIM2_Init(void)
 400:Core/Src/main.c **** {
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 407:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 412:Core/Src/main.c ****   htim2.Instance = TIM2;
 413:Core/Src/main.c ****   htim2.Init.Prescaler = 48000-1;
 414:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 415:Core/Src/main.c ****   htim2.Init.Period = 5000000;
 416:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 417:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 418:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 419:Core/Src/main.c ****   {
 420:Core/Src/main.c ****     Error_Handler();
 421:Core/Src/main.c ****   }
 422:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 423:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 424:Core/Src/main.c ****   {
 425:Core/Src/main.c ****     Error_Handler();
 426:Core/Src/main.c ****   }
 427:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 428:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 429:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 430:Core/Src/main.c ****   {
 431:Core/Src/main.c ****     Error_Handler();
 432:Core/Src/main.c ****   }
ARM GAS  /tmp/ccETXAHu.s 			page 9


 433:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** }
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** /**
 440:Core/Src/main.c ****   * @brief GPIO Initialization Function
 441:Core/Src/main.c ****   * @param None
 442:Core/Src/main.c ****   * @retval None
 443:Core/Src/main.c ****   */
 444:Core/Src/main.c **** static void MX_GPIO_Init(void)
 445:Core/Src/main.c **** {
  26              		.loc 1 445 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 446:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 446 3 view .LVU1
  41              		.loc 1 446 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 449:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  48              		.loc 1 449 3 is_stmt 1 view .LVU3
  49              	.LVL0:
  50              	.LBB8:
  51              	.LBI8:
  52              		.file 2 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @file    stm32wlxx_ll_bus.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * in the root directory of this software component.
ARM GAS  /tmp/ccETXAHu.s 			page 10


  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   @verbatim
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****                       ##### RCC Limitations #####
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ==============================================================================
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****     [..]
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       from/to registers.w<
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****     [..]
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       Workarounds:
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   @endverbatim
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   ******************************************************************************
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #ifndef __STM32WLxx_LL_BUS_H
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define __STM32WLxx_LL_BUS_H
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #ifdef __cplusplus
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** extern "C" {
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #include "stm32wlxx.h"
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @addtogroup STM32WLxx_LL_Driver
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(RCC)
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL BUS
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
ARM GAS  /tmp/ccETXAHu.s 			page 11


  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHB1ENR_DMA1EN
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHB1ENR_DMA2EN
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMAMUX1        RCC_AHB1ENR_DMAMUX1EN
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHB1ENR_CRCEN
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOA          RCC_AHB2ENR_GPIOAEN
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOB          RCC_AHB2ENR_GPIOBEN
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOC          RCC_AHB2ENR_GPIOCEN
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOH          RCC_AHB2ENR_GPIOHEN
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_PKA            RCC_AHB3ENR_PKAEN
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_AES            RCC_AHB3ENR_AESEN
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_RNG            RCC_AHB3ENR_RNGEN
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_HSEM           RCC_AHB3ENR_HSEMEN
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE)
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_IPCC           RCC_AHB3ENR_IPCCEN
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_SRAM1          RCC_AHB3SMENR_SRAM1SMEN
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_SRAM2          RCC_AHB3SMENR_SRAM2SMEN
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FLASH          RCC_AHB3ENR_FLASHEN
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR1_TIM2EN
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR1_RTCAPBEN
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR1_WWDGEN
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR1_SPI2EN
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR1_USART2EN
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR1_I2C1EN
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR1_I2C2EN
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR1_I2C3EN
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC            RCC_APB1ENR1_DACEN
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR1_LPTIM1EN
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
ARM GAS  /tmp/ccETXAHu.s 			page 12


 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (0xFFFFFFFFU)
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPUART1        RCC_APB1ENR2_LPUART1EN
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM2         RCC_APB1ENR2_LPTIM2EN
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM3         RCC_APB1ENR2_LPTIM3EN
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC            RCC_APB2ENR_ADCEN
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB3_GRP1_PERIPH  APB3 GRP1 PERIPH
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB3_GRP1_PERIPH_ALL            (0xFFFFFFFFU)
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_APB3_GRP1_PERIPH_SUBGHZSPI      RCC_APB3ENR_SUBGHZSPIEN
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #if defined(DUAL_CORE)
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB1_GRP1_PERIPH  C2 AHB1 GRP1 PERIPH
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMA1         RCC_C2AHB1ENR_DMA1EN
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMA2         RCC_C2AHB1ENR_DMA2EN
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_DMAMUX1      RCC_C2AHB1ENR_DMAMUX1EN
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB1_GRP1_PERIPH_CRC          RCC_C2AHB1ENR_CRCEN
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB2_GRP1_PERIPH  C2 AHB2 GRP1 PERIPH
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOA        RCC_C2AHB2ENR_GPIOAEN
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOB        RCC_C2AHB2ENR_GPIOBEN
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOC        RCC_C2AHB2ENR_GPIOCEN
ARM GAS  /tmp/ccETXAHu.s 			page 13


 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB2_GRP1_PERIPH_GPIOH        RCC_C2AHB2ENR_GPIOHEN
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_AHB3_GRP1_PERIPH  C2 AHB3 GRP1 PERIPH
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_PKA          RCC_C2AHB3ENR_PKAEN
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_AES          RCC_C2AHB3ENR_AESEN
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_RNG          RCC_C2AHB3ENR_RNGEN
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_HSEM         RCC_C2AHB3ENR_HSEMEN
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_IPCC         RCC_C2AHB3ENR_IPCCEN
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_FLASH        RCC_C2AHB3ENR_FLASHEN
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_SRAM1        RCC_C2AHB3SMENR_SRAM1SMEN
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_AHB3_GRP1_PERIPH_SRAM2        RCC_C2AHB3SMENR_SRAM2SMEN
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB1_GRP1_PERIPH  C2 APB1 GRP1 PERIPH
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_TIM2         RCC_C2APB1ENR1_TIM2EN
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_RTCAPB       RCC_C2APB1ENR1_RTCAPBEN
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_SPI2         RCC_C2APB1ENR1_SPI2EN
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_USART2       RCC_C2APB1ENR1_USART2EN
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C1         RCC_C2APB1ENR1_I2C1EN
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C2         RCC_C2APB1ENR1_I2C2EN
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_I2C3         RCC_C2APB1ENR1_I2C3EN
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_DAC          RCC_C2APB1ENR1_DACEN
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP1_PERIPH_LPTIM1       RCC_C2APB1ENR1_LPTIM1EN
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB1_GRP2_PERIPH  C2 APB1 GRP2 PERIPH
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPUART1      RCC_C2APB1ENR2_LPUART1EN
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPTIM2       RCC_C2APB1ENR2_LPTIM2EN
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB1_GRP2_PERIPH_LPTIM3       RCC_C2APB1ENR2_LPTIM3EN
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB2_GRP1_PERIPH  C2 APB2 GRP1 PERIPH
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_ADC          RCC_C2APB2ENR_ADCEN
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM1         RCC_C2APB2ENR_TIM1EN
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_SPI1         RCC_C2APB2ENR_SPI1EN
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_USART1       RCC_C2APB2ENR_USART1EN
ARM GAS  /tmp/ccETXAHu.s 			page 14


 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM16        RCC_C2APB2ENR_TIM16EN
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB2_GRP1_PERIPH_TIM17        RCC_C2APB2ENR_TIM17EN
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EC_C2_APB3_GRP1_PERIPH  C2 APB3 GRP1 PERIPH
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #define LL_C2_APB3_GRP1_PERIPH_SUBGHZSPI    RCC_C2APB3ENR_SUBGHZSPIEN
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** #endif /* DUAL_CORE */
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_EnableClock\n
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_EnableClock\n
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_EnableClock\n
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_EnableClock\n
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
ARM GAS  /tmp/ccETXAHu.s 			page 15


 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_IsEnabledClock\n
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_DisableClock\n
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_DisableClock\n
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_DisableClock\n
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_DisableClock\n
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST    LL_AHB1_GRP1_ForceReset\n
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset\n
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ReleaseReset\n
ARM GAS  /tmp/ccETXAHu.s 			page 16


 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_EnableClockSleep\n
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_EnableClockSleep\n
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_EnableClockSleep\n
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB1SMENR, Periphs);
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1SMENR, Periphs);
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled by the clock gating during CPU1 CSleep mode
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_IsEnabledClockSleep\n
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_IsEnabledClockSleep\n
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_IsEnabledClockSleep\n
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_IsEnabledClockSleep
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval uint32_t
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClockSleep(uint32_t Periphs)
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1SMENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_DisableClockSleep\n
ARM GAS  /tmp/ccETXAHu.s 			page 17


 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_DisableClockSleep\n
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_DisableClockSleep\n
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1SMENR, Periphs);
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** }
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @}
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB2 AHB2
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @{
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** 
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** /**
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock.
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_EnableClock\n
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_EnableClock\n
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_EnableClock\n
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_EnableClock\n
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   * @retval None
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   */
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
  53              		.loc 2 449 22 view .LVU4
  54              	.LBB9:
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   __IO uint32_t tmpreg;
  55              		.loc 2 451 3 view .LVU5
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
  56              		.loc 2 452 3 view .LVU6
  57 0010 4FF0B043 		mov	r3, #1476395008
  58 0014 DA6C     		ldr	r2, [r3, #76]
  59 0016 42F00202 		orr	r2, r2, #2
  60 001a DA64     		str	r2, [r3, #76]
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
  61              		.loc 2 454 3 view .LVU7
  62              		.loc 2 454 12 is_stmt 0 view .LVU8
  63 001c DA6C     		ldr	r2, [r3, #76]
  64 001e 02F00202 		and	r2, r2, #2
  65              		.loc 2 454 10 view .LVU9
  66 0022 0292     		str	r2, [sp, #8]
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
ARM GAS  /tmp/ccETXAHu.s 			page 18


  67              		.loc 2 455 3 is_stmt 1 view .LVU10
  68 0024 029A     		ldr	r2, [sp, #8]
  69              	.LVL1:
  70              		.loc 2 455 3 is_stmt 0 view .LVU11
  71              	.LBE9:
  72              	.LBE8:
 450:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  73              		.loc 1 450 3 is_stmt 1 view .LVU12
  74              	.LBB10:
  75              	.LBI10:
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h **** {
  76              		.loc 2 449 22 view .LVU13
  77              	.LBB11:
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
  78              		.loc 2 451 3 view .LVU14
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
  79              		.loc 2 452 3 view .LVU15
  80 0026 DA6C     		ldr	r2, [r3, #76]
  81 0028 42F00102 		orr	r2, r2, #1
  82 002c DA64     		str	r2, [r3, #76]
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
  83              		.loc 2 454 3 view .LVU16
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
  84              		.loc 2 454 12 is_stmt 0 view .LVU17
  85 002e DB6C     		ldr	r3, [r3, #76]
  86 0030 03F00103 		and	r3, r3, #1
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_bus.h ****   (void)tmpreg;
  87              		.loc 2 454 10 view .LVU18
  88 0034 0193     		str	r3, [sp, #4]
  89              		.loc 2 455 3 is_stmt 1 view .LVU19
  90 0036 019B     		ldr	r3, [sp, #4]
  91              	.LVL2:
  92              		.loc 2 455 3 is_stmt 0 view .LVU20
  93              	.LBE11:
  94              	.LBE10:
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 453:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, ALARM_Pin|IDLE_Pin, GPIO_PIN_SET);
  95              		.loc 1 453 3 is_stmt 1 view .LVU21
  96 0038 1C4D     		ldr	r5, .L3
  97 003a 0122     		movs	r2, #1
  98 003c 4FF49071 		mov	r1, #288
  99 0040 2846     		mov	r0, r5
 100 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL3:
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 456:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, TRANSIT_Pin|UNLOCKED_Pin|GET_GPS_Pin, GPIO_PIN_SET);
 102              		.loc 1 456 3 view .LVU22
 103 0046 0122     		movs	r2, #1
 104 0048 41F20301 		movw	r1, #4099
 105 004c 4FF09040 		mov	r0, #1207959552
 106 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 107              	.LVL4:
 457:Core/Src/main.c **** 
 458:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 459:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPS_NPWR_Pin|RFiD_NPWR_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/ccETXAHu.s 			page 19


 108              		.loc 1 459 3 view .LVU23
 109 0054 2246     		mov	r2, r4
 110 0056 6021     		movs	r1, #96
 111 0058 4FF09040 		mov	r0, #1207959552
 112 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL5:
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 462:Core/Src/main.c ****   HAL_GPIO_WritePin(RFSW_VC2_GPIO_Port, RFSW_VC2_Pin, GPIO_PIN_RESET);
 114              		.loc 1 462 3 view .LVU24
 115 0060 2246     		mov	r2, r4
 116 0062 0421     		movs	r1, #4
 117 0064 2846     		mov	r0, r5
 118 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL6:
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /*Configure GPIO pins : ALARM_Pin IDLE_Pin RFSW_VC2_Pin */
 465:Core/Src/main.c ****   GPIO_InitStruct.Pin = ALARM_Pin|IDLE_Pin|RFSW_VC2_Pin;
 120              		.loc 1 465 3 view .LVU25
 121              		.loc 1 465 23 is_stmt 0 view .LVU26
 122 006a 4FF49273 		mov	r3, #292
 123 006e 0393     		str	r3, [sp, #12]
 466:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 124              		.loc 1 466 3 is_stmt 1 view .LVU27
 125              		.loc 1 466 24 is_stmt 0 view .LVU28
 126 0070 0126     		movs	r6, #1
 127 0072 0496     		str	r6, [sp, #16]
 467:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 128              		.loc 1 467 3 is_stmt 1 view .LVU29
 129              		.loc 1 467 24 is_stmt 0 view .LVU30
 130 0074 0594     		str	r4, [sp, #20]
 468:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 131              		.loc 1 468 3 is_stmt 1 view .LVU31
 132              		.loc 1 468 25 is_stmt 0 view .LVU32
 133 0076 0694     		str	r4, [sp, #24]
 469:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 134              		.loc 1 469 3 is_stmt 1 view .LVU33
 135 0078 03A9     		add	r1, sp, #12
 136 007a 2846     		mov	r0, r5
 137 007c FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL7:
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   /*Configure GPIO pins : TRANSIT_Pin UNLOCKED_Pin GPS_NPWR_Pin RFiD_NPWR_Pin
 472:Core/Src/main.c ****                            GET_GPS_Pin */
 473:Core/Src/main.c ****   GPIO_InitStruct.Pin = TRANSIT_Pin|UNLOCKED_Pin|GPS_NPWR_Pin|RFiD_NPWR_Pin
 139              		.loc 1 473 3 view .LVU34
 140              		.loc 1 473 23 is_stmt 0 view .LVU35
 141 0080 41F26303 		movw	r3, #4195
 142 0084 0393     		str	r3, [sp, #12]
 474:Core/Src/main.c ****                           |GET_GPS_Pin;
 475:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 143              		.loc 1 475 3 is_stmt 1 view .LVU36
 144              		.loc 1 475 24 is_stmt 0 view .LVU37
 145 0086 0496     		str	r6, [sp, #16]
 476:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 146              		.loc 1 476 3 is_stmt 1 view .LVU38
 147              		.loc 1 476 24 is_stmt 0 view .LVU39
ARM GAS  /tmp/ccETXAHu.s 			page 20


 148 0088 0594     		str	r4, [sp, #20]
 477:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 149              		.loc 1 477 3 is_stmt 1 view .LVU40
 150              		.loc 1 477 25 is_stmt 0 view .LVU41
 151 008a 0694     		str	r4, [sp, #24]
 478:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 152              		.loc 1 478 3 is_stmt 1 view .LVU42
 153 008c 03A9     		add	r1, sp, #12
 154 008e 4FF09040 		mov	r0, #1207959552
 155 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL8:
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   /*Configure GPIO pin : RFID_TAG_IN_RANGE_Pin */
 481:Core/Src/main.c ****   GPIO_InitStruct.Pin = RFID_TAG_IN_RANGE_Pin;
 157              		.loc 1 481 3 view .LVU43
 158              		.loc 1 481 23 is_stmt 0 view .LVU44
 159 0096 8023     		movs	r3, #128
 160 0098 0393     		str	r3, [sp, #12]
 482:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 161              		.loc 1 482 3 is_stmt 1 view .LVU45
 162              		.loc 1 482 24 is_stmt 0 view .LVU46
 163 009a 0494     		str	r4, [sp, #16]
 483:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 164              		.loc 1 483 3 is_stmt 1 view .LVU47
 165              		.loc 1 483 24 is_stmt 0 view .LVU48
 166 009c 0594     		str	r4, [sp, #20]
 484:Core/Src/main.c ****   HAL_GPIO_Init(RFID_TAG_IN_RANGE_GPIO_Port, &GPIO_InitStruct);
 167              		.loc 1 484 3 is_stmt 1 view .LVU49
 168 009e 03A9     		add	r1, sp, #12
 169 00a0 4FF09040 		mov	r0, #1207959552
 170 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 171              	.LVL9:
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** }
 172              		.loc 1 486 1 is_stmt 0 view .LVU50
 173 00a8 08B0     		add	sp, sp, #32
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 16
 176              		@ sp needed
 177 00aa 70BD     		pop	{r4, r5, r6, pc}
 178              	.L4:
 179              		.align	2
 180              	.L3:
 181 00ac 00040048 		.word	1207960576
 182              		.cfi_endproc
 183              	.LFE979:
 185              		.section	.text.Error_Handler,"ax",%progbits
 186              		.align	1
 187              		.global	Error_Handler
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu softvfp
 193              	Error_Handler:
 194              	.LFB980:
 487:Core/Src/main.c **** 
 488:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  /tmp/ccETXAHu.s 			page 21


 489:Core/Src/main.c **** 
 490:Core/Src/main.c **** /* USER CODE END 4 */
 491:Core/Src/main.c **** 
 492:Core/Src/main.c **** /**
 493:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 494:Core/Src/main.c ****   * @retval None
 495:Core/Src/main.c ****   */
 496:Core/Src/main.c **** void Error_Handler(void)
 497:Core/Src/main.c **** {
 195              		.loc 1 497 1 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ Volatile: function does not return.
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 498:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 499:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 500:Core/Src/main.c ****   __disable_irq();
 201              		.loc 1 500 3 view .LVU52
 202              	.LBB12:
 203              	.LBI12:
 204              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  /tmp/ccETXAHu.s 			page 22


  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  /tmp/ccETXAHu.s 			page 23


  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
ARM GAS  /tmp/ccETXAHu.s 			page 24


 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccETXAHu.s 			page 25


 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 205              		.loc 3 207 27 view .LVU53
 206              	.LBB13:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 207              		.loc 3 209 3 view .LVU54
 208              		.syntax unified
 209              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 210 0000 72B6     		cpsid i
 211              	@ 0 "" 2
 212              		.thumb
 213              		.syntax unified
 214              	.L6:
 215              	.LBE13:
 216              	.LBE12:
 501:Core/Src/main.c ****   while (1)
 217              		.loc 1 501 3 discriminator 1 view .LVU55
 502:Core/Src/main.c ****   {
 503:Core/Src/main.c ****   }
 218              		.loc 1 503 3 discriminator 1 view .LVU56
 501:Core/Src/main.c ****   while (1)
 219              		.loc 1 501 9 discriminator 1 view .LVU57
 220 0002 FEE7     		b	.L6
 221              		.cfi_endproc
 222              	.LFE980:
 224              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 225              		.align	1
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	MX_USART1_UART_Init:
 232              	.LFB976:
 270:Core/Src/main.c **** 
 233              		.loc 1 270 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI3:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 279:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 242              		.loc 1 279 3 view .LVU59
 279:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 243              		.loc 1 279 19 is_stmt 0 view .LVU60
 244 0002 1848     		ldr	r0, .L17
 245 0004 184B     		ldr	r3, .L17+4
 246 0006 0360     		str	r3, [r0]
 280:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 247              		.loc 1 280 3 is_stmt 1 view .LVU61
 280:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 248              		.loc 1 280 24 is_stmt 0 view .LVU62
 249 0008 4FF41653 		mov	r3, #9600
 250 000c 4360     		str	r3, [r0, #4]
 281:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/ccETXAHu.s 			page 26


 251              		.loc 1 281 3 is_stmt 1 view .LVU63
 281:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 252              		.loc 1 281 26 is_stmt 0 view .LVU64
 253 000e 0023     		movs	r3, #0
 254 0010 8360     		str	r3, [r0, #8]
 282:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 255              		.loc 1 282 3 is_stmt 1 view .LVU65
 282:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 256              		.loc 1 282 24 is_stmt 0 view .LVU66
 257 0012 C360     		str	r3, [r0, #12]
 283:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 258              		.loc 1 283 3 is_stmt 1 view .LVU67
 283:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 259              		.loc 1 283 22 is_stmt 0 view .LVU68
 260 0014 0361     		str	r3, [r0, #16]
 284:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 261              		.loc 1 284 3 is_stmt 1 view .LVU69
 284:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 262              		.loc 1 284 20 is_stmt 0 view .LVU70
 263 0016 0C22     		movs	r2, #12
 264 0018 4261     		str	r2, [r0, #20]
 285:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_8;
 265              		.loc 1 285 3 is_stmt 1 view .LVU71
 285:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_8;
 266              		.loc 1 285 25 is_stmt 0 view .LVU72
 267 001a 8361     		str	r3, [r0, #24]
 286:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_ENABLE;
 268              		.loc 1 286 3 is_stmt 1 view .LVU73
 286:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_ENABLE;
 269              		.loc 1 286 28 is_stmt 0 view .LVU74
 270 001c 4FF40042 		mov	r2, #32768
 271 0020 C261     		str	r2, [r0, #28]
 287:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 272              		.loc 1 287 3 is_stmt 1 view .LVU75
 287:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 273              		.loc 1 287 30 is_stmt 0 view .LVU76
 274 0022 4FF40061 		mov	r1, #2048
 275 0026 0162     		str	r1, [r0, #32]
 288:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_SWAP_INIT;
 276              		.loc 1 288 3 is_stmt 1 view .LVU77
 288:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_SWAP_INIT;
 277              		.loc 1 288 30 is_stmt 0 view .LVU78
 278 0028 4362     		str	r3, [r0, #36]
 289:Core/Src/main.c ****   huart1.AdvancedInit.Swap = UART_ADVFEATURE_SWAP_ENABLE;
 279              		.loc 1 289 3 is_stmt 1 view .LVU79
 289:Core/Src/main.c ****   huart1.AdvancedInit.Swap = UART_ADVFEATURE_SWAP_ENABLE;
 280              		.loc 1 289 38 is_stmt 0 view .LVU80
 281 002a 0823     		movs	r3, #8
 282 002c 8362     		str	r3, [r0, #40]
 290:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 283              		.loc 1 290 3 is_stmt 1 view .LVU81
 290:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 284              		.loc 1 290 28 is_stmt 0 view .LVU82
 285 002e 8263     		str	r2, [r0, #56]
 291:Core/Src/main.c ****   {
 286              		.loc 1 291 3 is_stmt 1 view .LVU83
 291:Core/Src/main.c ****   {
ARM GAS  /tmp/ccETXAHu.s 			page 27


 287              		.loc 1 291 7 is_stmt 0 view .LVU84
 288 0030 FFF7FEFF 		bl	HAL_UART_Init
 289              	.LVL10:
 291:Core/Src/main.c ****   {
 290              		.loc 1 291 6 view .LVU85
 291 0034 70B9     		cbnz	r0, .L13
 295:Core/Src/main.c ****   {
 292              		.loc 1 295 3 is_stmt 1 view .LVU86
 295:Core/Src/main.c ****   {
 293              		.loc 1 295 7 is_stmt 0 view .LVU87
 294 0036 0021     		movs	r1, #0
 295 0038 0A48     		ldr	r0, .L17
 296 003a FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 297              	.LVL11:
 295:Core/Src/main.c ****   {
 298              		.loc 1 295 6 view .LVU88
 299 003e 58B9     		cbnz	r0, .L14
 299:Core/Src/main.c ****   {
 300              		.loc 1 299 3 is_stmt 1 view .LVU89
 299:Core/Src/main.c ****   {
 301              		.loc 1 299 7 is_stmt 0 view .LVU90
 302 0040 0021     		movs	r1, #0
 303 0042 0848     		ldr	r0, .L17
 304 0044 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 305              	.LVL12:
 299:Core/Src/main.c ****   {
 306              		.loc 1 299 6 view .LVU91
 307 0048 40B9     		cbnz	r0, .L15
 303:Core/Src/main.c ****   {
 308              		.loc 1 303 3 is_stmt 1 view .LVU92
 303:Core/Src/main.c ****   {
 309              		.loc 1 303 7 is_stmt 0 view .LVU93
 310 004a 0648     		ldr	r0, .L17
 311 004c FFF7FEFF 		bl	HAL_UARTEx_EnableFifoMode
 312              	.LVL13:
 303:Core/Src/main.c ****   {
 313              		.loc 1 303 6 view .LVU94
 314 0050 30B9     		cbnz	r0, .L16
 311:Core/Src/main.c **** 
 315              		.loc 1 311 1 view .LVU95
 316 0052 08BD     		pop	{r3, pc}
 317              	.L13:
 293:Core/Src/main.c ****   }
 318              		.loc 1 293 5 is_stmt 1 view .LVU96
 319 0054 FFF7FEFF 		bl	Error_Handler
 320              	.LVL14:
 321              	.L14:
 297:Core/Src/main.c ****   }
 322              		.loc 1 297 5 view .LVU97
 323 0058 FFF7FEFF 		bl	Error_Handler
 324              	.LVL15:
 325              	.L15:
 301:Core/Src/main.c ****   }
 326              		.loc 1 301 5 view .LVU98
 327 005c FFF7FEFF 		bl	Error_Handler
 328              	.LVL16:
 329              	.L16:
ARM GAS  /tmp/ccETXAHu.s 			page 28


 305:Core/Src/main.c ****   }
 330              		.loc 1 305 5 view .LVU99
 331 0060 FFF7FEFF 		bl	Error_Handler
 332              	.LVL17:
 333              	.L18:
 334              		.align	2
 335              	.L17:
 336 0064 00000000 		.word	.LANCHOR0
 337 0068 00380140 		.word	1073821696
 338              		.cfi_endproc
 339              	.LFE976:
 341              		.section	.text.MX_ADC_Init,"ax",%progbits
 342              		.align	1
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 346              		.fpu softvfp
 348              	MX_ADC_Init:
 349              	.LFB974:
 174:Core/Src/main.c **** 
 350              		.loc 1 174 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354 0000 08B5     		push	{r3, lr}
 355              	.LCFI4:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 3, -8
 358              		.cfi_offset 14, -4
 186:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 359              		.loc 1 186 3 view .LVU101
 186:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 360              		.loc 1 186 17 is_stmt 0 view .LVU102
 361 0002 1248     		ldr	r0, .L23
 362 0004 124B     		ldr	r3, .L23+4
 363 0006 0360     		str	r3, [r0]
 187:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 364              		.loc 1 187 3 is_stmt 1 view .LVU103
 187:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 365              		.loc 1 187 28 is_stmt 0 view .LVU104
 366 0008 4FF00043 		mov	r3, #-2147483648
 367 000c 4360     		str	r3, [r0, #4]
 188:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 368              		.loc 1 188 3 is_stmt 1 view .LVU105
 188:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 369              		.loc 1 188 24 is_stmt 0 view .LVU106
 370 000e 0023     		movs	r3, #0
 371 0010 8360     		str	r3, [r0, #8]
 189:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DISABLE;
 372              		.loc 1 189 3 is_stmt 1 view .LVU107
 189:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DISABLE;
 373              		.loc 1 189 23 is_stmt 0 view .LVU108
 374 0012 C360     		str	r3, [r0, #12]
 190:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 375              		.loc 1 190 3 is_stmt 1 view .LVU109
 190:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 376              		.loc 1 190 26 is_stmt 0 view .LVU110
ARM GAS  /tmp/ccETXAHu.s 			page 29


 377 0014 0361     		str	r3, [r0, #16]
 191:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 378              		.loc 1 191 3 is_stmt 1 view .LVU111
 191:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 379              		.loc 1 191 26 is_stmt 0 view .LVU112
 380 0016 0422     		movs	r2, #4
 381 0018 4261     		str	r2, [r0, #20]
 192:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 382              		.loc 1 192 3 is_stmt 1 view .LVU113
 192:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 383              		.loc 1 192 30 is_stmt 0 view .LVU114
 384 001a 0376     		strb	r3, [r0, #24]
 193:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 385              		.loc 1 193 3 is_stmt 1 view .LVU115
 193:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 386              		.loc 1 193 34 is_stmt 0 view .LVU116
 387 001c 4376     		strb	r3, [r0, #25]
 194:Core/Src/main.c ****   hadc.Init.NbrOfConversion = 1;
 388              		.loc 1 194 3 is_stmt 1 view .LVU117
 194:Core/Src/main.c ****   hadc.Init.NbrOfConversion = 1;
 389              		.loc 1 194 32 is_stmt 0 view .LVU118
 390 001e 8376     		strb	r3, [r0, #26]
 195:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 391              		.loc 1 195 3 is_stmt 1 view .LVU119
 195:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 392              		.loc 1 195 29 is_stmt 0 view .LVU120
 393 0020 0122     		movs	r2, #1
 394 0022 C261     		str	r2, [r0, #28]
 196:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 395              		.loc 1 196 3 is_stmt 1 view .LVU121
 196:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 396              		.loc 1 196 35 is_stmt 0 view .LVU122
 397 0024 80F82030 		strb	r3, [r0, #32]
 197:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 398              		.loc 1 197 3 is_stmt 1 view .LVU123
 197:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 399              		.loc 1 197 30 is_stmt 0 view .LVU124
 400 0028 4362     		str	r3, [r0, #36]
 198:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 401              		.loc 1 198 3 is_stmt 1 view .LVU125
 198:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 402              		.loc 1 198 34 is_stmt 0 view .LVU126
 403 002a 8362     		str	r3, [r0, #40]
 199:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 404              		.loc 1 199 3 is_stmt 1 view .LVU127
 199:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 405              		.loc 1 199 35 is_stmt 0 view .LVU128
 406 002c 80F82C30 		strb	r3, [r0, #44]
 200:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 407              		.loc 1 200 3 is_stmt 1 view .LVU129
 200:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 408              		.loc 1 200 21 is_stmt 0 view .LVU130
 409 0030 4FF48052 		mov	r2, #4096
 410 0034 0263     		str	r2, [r0, #48]
 201:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_1CYCLE_5;
 411              		.loc 1 201 3 is_stmt 1 view .LVU131
 201:Core/Src/main.c ****   hadc.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_1CYCLE_5;
ARM GAS  /tmp/ccETXAHu.s 			page 30


 412              		.loc 1 201 33 is_stmt 0 view .LVU132
 413 0036 4363     		str	r3, [r0, #52]
 202:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 414              		.loc 1 202 3 is_stmt 1 view .LVU133
 202:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 415              		.loc 1 202 33 is_stmt 0 view .LVU134
 416 0038 8363     		str	r3, [r0, #56]
 203:Core/Src/main.c ****   hadc.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 417              		.loc 1 203 3 is_stmt 1 view .LVU135
 203:Core/Src/main.c ****   hadc.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 418              		.loc 1 203 30 is_stmt 0 view .LVU136
 419 003a 80F83C30 		strb	r3, [r0, #60]
 204:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 420              		.loc 1 204 3 is_stmt 1 view .LVU137
 204:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 421              		.loc 1 204 34 is_stmt 0 view .LVU138
 422 003e C364     		str	r3, [r0, #76]
 205:Core/Src/main.c ****   {
 423              		.loc 1 205 3 is_stmt 1 view .LVU139
 205:Core/Src/main.c ****   {
 424              		.loc 1 205 7 is_stmt 0 view .LVU140
 425 0040 FFF7FEFF 		bl	HAL_ADC_Init
 426              	.LVL18:
 205:Core/Src/main.c ****   {
 427              		.loc 1 205 6 view .LVU141
 428 0044 00B9     		cbnz	r0, .L22
 213:Core/Src/main.c **** 
 429              		.loc 1 213 1 view .LVU142
 430 0046 08BD     		pop	{r3, pc}
 431              	.L22:
 207:Core/Src/main.c ****   }
 432              		.loc 1 207 5 is_stmt 1 view .LVU143
 433 0048 FFF7FEFF 		bl	Error_Handler
 434              	.LVL19:
 435              	.L24:
 436              		.align	2
 437              	.L23:
 438 004c 00000000 		.word	.LANCHOR1
 439 0050 00240140 		.word	1073816576
 440              		.cfi_endproc
 441              	.LFE974:
 443              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 444              		.align	1
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu softvfp
 450              	MX_LPUART1_UART_Init:
 451              	.LFB975:
 221:Core/Src/main.c **** 
 452              		.loc 1 221 1 view -0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456 0000 08B5     		push	{r3, lr}
 457              	.LCFI5:
 458              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccETXAHu.s 			page 31


 459              		.cfi_offset 3, -8
 460              		.cfi_offset 14, -4
 230:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 9600;
 461              		.loc 1 230 3 view .LVU145
 230:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 9600;
 462              		.loc 1 230 21 is_stmt 0 view .LVU146
 463 0002 1748     		ldr	r0, .L35
 464 0004 174B     		ldr	r3, .L35+4
 465 0006 0360     		str	r3, [r0]
 231:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 466              		.loc 1 231 3 is_stmt 1 view .LVU147
 231:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 467              		.loc 1 231 26 is_stmt 0 view .LVU148
 468 0008 4FF41653 		mov	r3, #9600
 469 000c 4360     		str	r3, [r0, #4]
 232:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 470              		.loc 1 232 3 is_stmt 1 view .LVU149
 232:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 471              		.loc 1 232 28 is_stmt 0 view .LVU150
 472 000e 0023     		movs	r3, #0
 473 0010 8360     		str	r3, [r0, #8]
 233:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 474              		.loc 1 233 3 is_stmt 1 view .LVU151
 233:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 475              		.loc 1 233 26 is_stmt 0 view .LVU152
 476 0012 C360     		str	r3, [r0, #12]
 234:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 477              		.loc 1 234 3 is_stmt 1 view .LVU153
 234:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 478              		.loc 1 234 24 is_stmt 0 view .LVU154
 479 0014 0361     		str	r3, [r0, #16]
 235:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 480              		.loc 1 235 3 is_stmt 1 view .LVU155
 235:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 481              		.loc 1 235 22 is_stmt 0 view .LVU156
 482 0016 0C22     		movs	r2, #12
 483 0018 4261     		str	r2, [r0, #20]
 236:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 484              		.loc 1 236 3 is_stmt 1 view .LVU157
 236:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 485              		.loc 1 236 27 is_stmt 0 view .LVU158
 486 001a 8361     		str	r3, [r0, #24]
 237:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 487              		.loc 1 237 3 is_stmt 1 view .LVU159
 237:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 488              		.loc 1 237 32 is_stmt 0 view .LVU160
 489 001c 0362     		str	r3, [r0, #32]
 238:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_SWAP_INIT;
 490              		.loc 1 238 3 is_stmt 1 view .LVU161
 238:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_SWAP_INIT;
 491              		.loc 1 238 32 is_stmt 0 view .LVU162
 492 001e 4362     		str	r3, [r0, #36]
 239:Core/Src/main.c ****   hlpuart1.AdvancedInit.Swap = UART_ADVFEATURE_SWAP_ENABLE;
 493              		.loc 1 239 3 is_stmt 1 view .LVU163
 239:Core/Src/main.c ****   hlpuart1.AdvancedInit.Swap = UART_ADVFEATURE_SWAP_ENABLE;
 494              		.loc 1 239 40 is_stmt 0 view .LVU164
 495 0020 0822     		movs	r2, #8
ARM GAS  /tmp/ccETXAHu.s 			page 32


 496 0022 8262     		str	r2, [r0, #40]
 240:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 497              		.loc 1 240 3 is_stmt 1 view .LVU165
 240:Core/Src/main.c ****   hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 498              		.loc 1 240 30 is_stmt 0 view .LVU166
 499 0024 4FF40042 		mov	r2, #32768
 500 0028 8263     		str	r2, [r0, #56]
 241:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 501              		.loc 1 241 3 is_stmt 1 view .LVU167
 241:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 502              		.loc 1 241 21 is_stmt 0 view .LVU168
 503 002a 4366     		str	r3, [r0, #100]
 242:Core/Src/main.c ****   {
 504              		.loc 1 242 3 is_stmt 1 view .LVU169
 242:Core/Src/main.c ****   {
 505              		.loc 1 242 7 is_stmt 0 view .LVU170
 506 002c FFF7FEFF 		bl	HAL_UART_Init
 507              	.LVL20:
 242:Core/Src/main.c ****   {
 508              		.loc 1 242 6 view .LVU171
 509 0030 70B9     		cbnz	r0, .L31
 246:Core/Src/main.c ****   {
 510              		.loc 1 246 3 is_stmt 1 view .LVU172
 246:Core/Src/main.c ****   {
 511              		.loc 1 246 7 is_stmt 0 view .LVU173
 512 0032 0021     		movs	r1, #0
 513 0034 0A48     		ldr	r0, .L35
 514 0036 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 515              	.LVL21:
 246:Core/Src/main.c ****   {
 516              		.loc 1 246 6 view .LVU174
 517 003a 58B9     		cbnz	r0, .L32
 250:Core/Src/main.c ****   {
 518              		.loc 1 250 3 is_stmt 1 view .LVU175
 250:Core/Src/main.c ****   {
 519              		.loc 1 250 7 is_stmt 0 view .LVU176
 520 003c 0021     		movs	r1, #0
 521 003e 0848     		ldr	r0, .L35
 522 0040 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 523              	.LVL22:
 250:Core/Src/main.c ****   {
 524              		.loc 1 250 6 view .LVU177
 525 0044 40B9     		cbnz	r0, .L33
 254:Core/Src/main.c ****   {
 526              		.loc 1 254 3 is_stmt 1 view .LVU178
 254:Core/Src/main.c ****   {
 527              		.loc 1 254 7 is_stmt 0 view .LVU179
 528 0046 0648     		ldr	r0, .L35
 529 0048 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 530              	.LVL23:
 254:Core/Src/main.c ****   {
 531              		.loc 1 254 6 view .LVU180
 532 004c 30B9     		cbnz	r0, .L34
 262:Core/Src/main.c **** 
 533              		.loc 1 262 1 view .LVU181
 534 004e 08BD     		pop	{r3, pc}
 535              	.L31:
ARM GAS  /tmp/ccETXAHu.s 			page 33


 244:Core/Src/main.c ****   }
 536              		.loc 1 244 5 is_stmt 1 view .LVU182
 537 0050 FFF7FEFF 		bl	Error_Handler
 538              	.LVL24:
 539              	.L32:
 248:Core/Src/main.c ****   }
 540              		.loc 1 248 5 view .LVU183
 541 0054 FFF7FEFF 		bl	Error_Handler
 542              	.LVL25:
 543              	.L33:
 252:Core/Src/main.c ****   }
 544              		.loc 1 252 5 view .LVU184
 545 0058 FFF7FEFF 		bl	Error_Handler
 546              	.LVL26:
 547              	.L34:
 256:Core/Src/main.c ****   }
 548              		.loc 1 256 5 view .LVU185
 549 005c FFF7FEFF 		bl	Error_Handler
 550              	.LVL27:
 551              	.L36:
 552              		.align	2
 553              	.L35:
 554 0060 00000000 		.word	.LANCHOR2
 555 0064 00800040 		.word	1073774592
 556              		.cfi_endproc
 557              	.LFE975:
 559              		.section	.text.MX_TIM1_Init,"ax",%progbits
 560              		.align	1
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu softvfp
 566              	MX_TIM1_Init:
 567              	.LFB977:
 319:Core/Src/main.c **** 
 568              		.loc 1 319 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 112
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572 0000 10B5     		push	{r4, lr}
 573              	.LCFI6:
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 4, -8
 576              		.cfi_offset 14, -4
 577 0002 9CB0     		sub	sp, sp, #112
 578              	.LCFI7:
 579              		.cfi_def_cfa_offset 120
 325:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 580              		.loc 1 325 3 view .LVU187
 325:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 581              		.loc 1 325 26 is_stmt 0 view .LVU188
 582 0004 0024     		movs	r4, #0
 583 0006 1894     		str	r4, [sp, #96]
 584 0008 1994     		str	r4, [sp, #100]
 585 000a 1A94     		str	r4, [sp, #104]
 586 000c 1B94     		str	r4, [sp, #108]
 326:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
ARM GAS  /tmp/ccETXAHu.s 			page 34


 587              		.loc 1 326 3 is_stmt 1 view .LVU189
 326:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 588              		.loc 1 326 27 is_stmt 0 view .LVU190
 589 000e 1594     		str	r4, [sp, #84]
 590 0010 1694     		str	r4, [sp, #88]
 591 0012 1794     		str	r4, [sp, #92]
 327:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 592              		.loc 1 327 3 is_stmt 1 view .LVU191
 327:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 593              		.loc 1 327 22 is_stmt 0 view .LVU192
 594 0014 0E94     		str	r4, [sp, #56]
 595 0016 0F94     		str	r4, [sp, #60]
 596 0018 1094     		str	r4, [sp, #64]
 597 001a 1194     		str	r4, [sp, #68]
 598 001c 1294     		str	r4, [sp, #72]
 599 001e 1394     		str	r4, [sp, #76]
 600 0020 1494     		str	r4, [sp, #80]
 328:Core/Src/main.c **** 
 601              		.loc 1 328 3 is_stmt 1 view .LVU193
 328:Core/Src/main.c **** 
 602              		.loc 1 328 34 is_stmt 0 view .LVU194
 603 0022 3422     		movs	r2, #52
 604 0024 2146     		mov	r1, r4
 605 0026 01A8     		add	r0, sp, #4
 606 0028 FFF7FEFF 		bl	memset
 607              	.LVL28:
 333:Core/Src/main.c ****   htim1.Init.Prescaler = 2400;
 608              		.loc 1 333 3 is_stmt 1 view .LVU195
 333:Core/Src/main.c ****   htim1.Init.Prescaler = 2400;
 609              		.loc 1 333 18 is_stmt 0 view .LVU196
 610 002c 2F48     		ldr	r0, .L51
 611 002e 304B     		ldr	r3, .L51+4
 612 0030 0360     		str	r3, [r0]
 334:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 613              		.loc 1 334 3 is_stmt 1 view .LVU197
 334:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 614              		.loc 1 334 24 is_stmt 0 view .LVU198
 615 0032 4FF41663 		mov	r3, #2400
 616 0036 4360     		str	r3, [r0, #4]
 335:Core/Src/main.c ****   htim1.Init.Period = 3;
 617              		.loc 1 335 3 is_stmt 1 view .LVU199
 335:Core/Src/main.c ****   htim1.Init.Period = 3;
 618              		.loc 1 335 26 is_stmt 0 view .LVU200
 619 0038 8460     		str	r4, [r0, #8]
 336:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 620              		.loc 1 336 3 is_stmt 1 view .LVU201
 336:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 621              		.loc 1 336 21 is_stmt 0 view .LVU202
 622 003a 0323     		movs	r3, #3
 623 003c C360     		str	r3, [r0, #12]
 337:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 624              		.loc 1 337 3 is_stmt 1 view .LVU203
 337:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 625              		.loc 1 337 28 is_stmt 0 view .LVU204
 626 003e 0461     		str	r4, [r0, #16]
 338:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 627              		.loc 1 338 3 is_stmt 1 view .LVU205
ARM GAS  /tmp/ccETXAHu.s 			page 35


 338:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 628              		.loc 1 338 32 is_stmt 0 view .LVU206
 629 0040 4461     		str	r4, [r0, #20]
 339:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 630              		.loc 1 339 3 is_stmt 1 view .LVU207
 339:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 631              		.loc 1 339 32 is_stmt 0 view .LVU208
 632 0042 8461     		str	r4, [r0, #24]
 340:Core/Src/main.c ****   {
 633              		.loc 1 340 3 is_stmt 1 view .LVU209
 340:Core/Src/main.c ****   {
 634              		.loc 1 340 7 is_stmt 0 view .LVU210
 635 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
 636              	.LVL29:
 340:Core/Src/main.c ****   {
 637              		.loc 1 340 6 view .LVU211
 638 0048 0028     		cmp	r0, #0
 639 004a 43D1     		bne	.L45
 344:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 640              		.loc 1 344 3 is_stmt 1 view .LVU212
 344:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 641              		.loc 1 344 34 is_stmt 0 view .LVU213
 642 004c 4FF48053 		mov	r3, #4096
 643 0050 1893     		str	r3, [sp, #96]
 345:Core/Src/main.c ****   {
 644              		.loc 1 345 3 is_stmt 1 view .LVU214
 345:Core/Src/main.c ****   {
 645              		.loc 1 345 7 is_stmt 0 view .LVU215
 646 0052 18A9     		add	r1, sp, #96
 647 0054 2548     		ldr	r0, .L51
 648 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 649              	.LVL30:
 345:Core/Src/main.c ****   {
 650              		.loc 1 345 6 view .LVU216
 651 005a 0028     		cmp	r0, #0
 652 005c 3CD1     		bne	.L46
 349:Core/Src/main.c ****   {
 653              		.loc 1 349 3 is_stmt 1 view .LVU217
 349:Core/Src/main.c ****   {
 654              		.loc 1 349 7 is_stmt 0 view .LVU218
 655 005e 2348     		ldr	r0, .L51
 656 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 657              	.LVL31:
 349:Core/Src/main.c ****   {
 658              		.loc 1 349 6 view .LVU219
 659 0064 0028     		cmp	r0, #0
 660 0066 39D1     		bne	.L47
 353:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 661              		.loc 1 353 3 is_stmt 1 view .LVU220
 353:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 662              		.loc 1 353 37 is_stmt 0 view .LVU221
 663 0068 0023     		movs	r3, #0
 664 006a 1593     		str	r3, [sp, #84]
 354:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 665              		.loc 1 354 3 is_stmt 1 view .LVU222
 354:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 666              		.loc 1 354 38 is_stmt 0 view .LVU223
ARM GAS  /tmp/ccETXAHu.s 			page 36


 667 006c 1693     		str	r3, [sp, #88]
 355:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 668              		.loc 1 355 3 is_stmt 1 view .LVU224
 355:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 669              		.loc 1 355 33 is_stmt 0 view .LVU225
 670 006e 1793     		str	r3, [sp, #92]
 356:Core/Src/main.c ****   {
 671              		.loc 1 356 3 is_stmt 1 view .LVU226
 356:Core/Src/main.c ****   {
 672              		.loc 1 356 7 is_stmt 0 view .LVU227
 673 0070 15A9     		add	r1, sp, #84
 674 0072 1E48     		ldr	r0, .L51
 675 0074 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 676              	.LVL32:
 356:Core/Src/main.c ****   {
 677              		.loc 1 356 6 view .LVU228
 678 0078 0028     		cmp	r0, #0
 679 007a 31D1     		bne	.L48
 360:Core/Src/main.c ****   sConfigOC.Pulse = 2;
 680              		.loc 1 360 3 is_stmt 1 view .LVU229
 360:Core/Src/main.c ****   sConfigOC.Pulse = 2;
 681              		.loc 1 360 20 is_stmt 0 view .LVU230
 682 007c 6023     		movs	r3, #96
 683 007e 0E93     		str	r3, [sp, #56]
 361:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 684              		.loc 1 361 3 is_stmt 1 view .LVU231
 361:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 685              		.loc 1 361 19 is_stmt 0 view .LVU232
 686 0080 0223     		movs	r3, #2
 687 0082 0F93     		str	r3, [sp, #60]
 362:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 688              		.loc 1 362 3 is_stmt 1 view .LVU233
 362:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 689              		.loc 1 362 24 is_stmt 0 view .LVU234
 690 0084 0023     		movs	r3, #0
 691 0086 1093     		str	r3, [sp, #64]
 363:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 692              		.loc 1 363 3 is_stmt 1 view .LVU235
 363:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 693              		.loc 1 363 24 is_stmt 0 view .LVU236
 694 0088 0422     		movs	r2, #4
 695 008a 1292     		str	r2, [sp, #72]
 364:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 696              		.loc 1 364 3 is_stmt 1 view .LVU237
 364:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 697              		.loc 1 364 25 is_stmt 0 view .LVU238
 698 008c 1393     		str	r3, [sp, #76]
 365:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 699              		.loc 1 365 3 is_stmt 1 view .LVU239
 365:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 700              		.loc 1 365 26 is_stmt 0 view .LVU240
 701 008e 1493     		str	r3, [sp, #80]
 366:Core/Src/main.c ****   {
 702              		.loc 1 366 3 is_stmt 1 view .LVU241
 366:Core/Src/main.c ****   {
 703              		.loc 1 366 7 is_stmt 0 view .LVU242
 704 0090 0C22     		movs	r2, #12
ARM GAS  /tmp/ccETXAHu.s 			page 37


 705 0092 0EA9     		add	r1, sp, #56
 706 0094 1548     		ldr	r0, .L51
 707 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 708              	.LVL33:
 366:Core/Src/main.c ****   {
 709              		.loc 1 366 6 view .LVU243
 710 009a 18BB     		cbnz	r0, .L49
 370:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 711              		.loc 1 370 3 is_stmt 1 view .LVU244
 370:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 712              		.loc 1 370 40 is_stmt 0 view .LVU245
 713 009c 0023     		movs	r3, #0
 714 009e 0193     		str	r3, [sp, #4]
 371:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 715              		.loc 1 371 3 is_stmt 1 view .LVU246
 371:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 716              		.loc 1 371 41 is_stmt 0 view .LVU247
 717 00a0 0293     		str	r3, [sp, #8]
 372:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 718              		.loc 1 372 3 is_stmt 1 view .LVU248
 372:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 719              		.loc 1 372 34 is_stmt 0 view .LVU249
 720 00a2 0393     		str	r3, [sp, #12]
 373:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 721              		.loc 1 373 3 is_stmt 1 view .LVU250
 373:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 722              		.loc 1 373 33 is_stmt 0 view .LVU251
 723 00a4 0493     		str	r3, [sp, #16]
 374:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 724              		.loc 1 374 3 is_stmt 1 view .LVU252
 374:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 725              		.loc 1 374 35 is_stmt 0 view .LVU253
 726 00a6 0593     		str	r3, [sp, #20]
 375:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 727              		.loc 1 375 3 is_stmt 1 view .LVU254
 375:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 728              		.loc 1 375 38 is_stmt 0 view .LVU255
 729 00a8 4FF40052 		mov	r2, #8192
 730 00ac 0692     		str	r2, [sp, #24]
 376:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 731              		.loc 1 376 3 is_stmt 1 view .LVU256
 376:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 732              		.loc 1 376 36 is_stmt 0 view .LVU257
 733 00ae 0793     		str	r3, [sp, #28]
 377:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 734              		.loc 1 377 3 is_stmt 1 view .LVU258
 377:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 735              		.loc 1 377 36 is_stmt 0 view .LVU259
 736 00b0 0893     		str	r3, [sp, #32]
 378:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 737              		.loc 1 378 3 is_stmt 1 view .LVU260
 378:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 738              		.loc 1 378 36 is_stmt 0 view .LVU261
 739 00b2 0993     		str	r3, [sp, #36]
 379:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 740              		.loc 1 379 3 is_stmt 1 view .LVU262
 379:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
ARM GAS  /tmp/ccETXAHu.s 			page 38


 741              		.loc 1 379 39 is_stmt 0 view .LVU263
 742 00b4 4FF00072 		mov	r2, #33554432
 743 00b8 0A92     		str	r2, [sp, #40]
 380:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 744              		.loc 1 380 3 is_stmt 1 view .LVU264
 380:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 745              		.loc 1 380 37 is_stmt 0 view .LVU265
 746 00ba 0B93     		str	r3, [sp, #44]
 381:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 747              		.loc 1 381 3 is_stmt 1 view .LVU266
 381:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 748              		.loc 1 381 37 is_stmt 0 view .LVU267
 749 00bc 0C93     		str	r3, [sp, #48]
 382:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 750              		.loc 1 382 3 is_stmt 1 view .LVU268
 382:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 751              		.loc 1 382 40 is_stmt 0 view .LVU269
 752 00be 0D93     		str	r3, [sp, #52]
 383:Core/Src/main.c ****   {
 753              		.loc 1 383 3 is_stmt 1 view .LVU270
 383:Core/Src/main.c ****   {
 754              		.loc 1 383 7 is_stmt 0 view .LVU271
 755 00c0 01A9     		add	r1, sp, #4
 756 00c2 0A48     		ldr	r0, .L51
 757 00c4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 758              	.LVL34:
 383:Core/Src/main.c ****   {
 759              		.loc 1 383 6 view .LVU272
 760 00c8 70B9     		cbnz	r0, .L50
 390:Core/Src/main.c **** 
 761              		.loc 1 390 3 is_stmt 1 view .LVU273
 762 00ca 0848     		ldr	r0, .L51
 763 00cc FFF7FEFF 		bl	HAL_TIM_MspPostInit
 764              	.LVL35:
 392:Core/Src/main.c **** 
 765              		.loc 1 392 1 is_stmt 0 view .LVU274
 766 00d0 1CB0     		add	sp, sp, #112
 767              	.LCFI8:
 768              		.cfi_remember_state
 769              		.cfi_def_cfa_offset 8
 770              		@ sp needed
 771 00d2 10BD     		pop	{r4, pc}
 772              	.L45:
 773              	.LCFI9:
 774              		.cfi_restore_state
 342:Core/Src/main.c ****   }
 775              		.loc 1 342 5 is_stmt 1 view .LVU275
 776 00d4 FFF7FEFF 		bl	Error_Handler
 777              	.LVL36:
 778              	.L46:
 347:Core/Src/main.c ****   }
 779              		.loc 1 347 5 view .LVU276
 780 00d8 FFF7FEFF 		bl	Error_Handler
 781              	.LVL37:
 782              	.L47:
 351:Core/Src/main.c ****   }
 783              		.loc 1 351 5 view .LVU277
ARM GAS  /tmp/ccETXAHu.s 			page 39


 784 00dc FFF7FEFF 		bl	Error_Handler
 785              	.LVL38:
 786              	.L48:
 358:Core/Src/main.c ****   }
 787              		.loc 1 358 5 view .LVU278
 788 00e0 FFF7FEFF 		bl	Error_Handler
 789              	.LVL39:
 790              	.L49:
 368:Core/Src/main.c ****   }
 791              		.loc 1 368 5 view .LVU279
 792 00e4 FFF7FEFF 		bl	Error_Handler
 793              	.LVL40:
 794              	.L50:
 385:Core/Src/main.c ****   }
 795              		.loc 1 385 5 view .LVU280
 796 00e8 FFF7FEFF 		bl	Error_Handler
 797              	.LVL41:
 798              	.L52:
 799              		.align	2
 800              	.L51:
 801 00ec 00000000 		.word	.LANCHOR3
 802 00f0 002C0140 		.word	1073818624
 803              		.cfi_endproc
 804              	.LFE977:
 806              		.section	.text.MX_TIM2_Init,"ax",%progbits
 807              		.align	1
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 811              		.fpu softvfp
 813              	MX_TIM2_Init:
 814              	.LFB978:
 400:Core/Src/main.c **** 
 815              		.loc 1 400 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 32
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819 0000 00B5     		push	{lr}
 820              	.LCFI10:
 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 14, -4
 823 0002 89B0     		sub	sp, sp, #36
 824              	.LCFI11:
 825              		.cfi_def_cfa_offset 40
 406:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 826              		.loc 1 406 3 view .LVU282
 406:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 827              		.loc 1 406 26 is_stmt 0 view .LVU283
 828 0004 0023     		movs	r3, #0
 829 0006 0493     		str	r3, [sp, #16]
 830 0008 0593     		str	r3, [sp, #20]
 831 000a 0693     		str	r3, [sp, #24]
 832 000c 0793     		str	r3, [sp, #28]
 407:Core/Src/main.c **** 
 833              		.loc 1 407 3 is_stmt 1 view .LVU284
 407:Core/Src/main.c **** 
 834              		.loc 1 407 27 is_stmt 0 view .LVU285
ARM GAS  /tmp/ccETXAHu.s 			page 40


 835 000e 0193     		str	r3, [sp, #4]
 836 0010 0293     		str	r3, [sp, #8]
 837 0012 0393     		str	r3, [sp, #12]
 412:Core/Src/main.c ****   htim2.Init.Prescaler = 48000-1;
 838              		.loc 1 412 3 is_stmt 1 view .LVU286
 412:Core/Src/main.c ****   htim2.Init.Prescaler = 48000-1;
 839              		.loc 1 412 18 is_stmt 0 view .LVU287
 840 0014 1548     		ldr	r0, .L61
 841 0016 4FF08042 		mov	r2, #1073741824
 842 001a 0260     		str	r2, [r0]
 413:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 843              		.loc 1 413 3 is_stmt 1 view .LVU288
 413:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 844              		.loc 1 413 24 is_stmt 0 view .LVU289
 845 001c 4BF67F32 		movw	r2, #47999
 846 0020 4260     		str	r2, [r0, #4]
 414:Core/Src/main.c ****   htim2.Init.Period = 5000000;
 847              		.loc 1 414 3 is_stmt 1 view .LVU290
 414:Core/Src/main.c ****   htim2.Init.Period = 5000000;
 848              		.loc 1 414 26 is_stmt 0 view .LVU291
 849 0022 8360     		str	r3, [r0, #8]
 415:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 850              		.loc 1 415 3 is_stmt 1 view .LVU292
 415:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 851              		.loc 1 415 21 is_stmt 0 view .LVU293
 852 0024 02F59702 		add	r2, r2, #4947968
 853 0028 02F6C172 		addw	r2, r2, #4033
 854 002c C260     		str	r2, [r0, #12]
 416:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 855              		.loc 1 416 3 is_stmt 1 view .LVU294
 416:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 856              		.loc 1 416 28 is_stmt 0 view .LVU295
 857 002e 0361     		str	r3, [r0, #16]
 417:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 858              		.loc 1 417 3 is_stmt 1 view .LVU296
 417:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 859              		.loc 1 417 32 is_stmt 0 view .LVU297
 860 0030 8361     		str	r3, [r0, #24]
 418:Core/Src/main.c ****   {
 861              		.loc 1 418 3 is_stmt 1 view .LVU298
 418:Core/Src/main.c ****   {
 862              		.loc 1 418 7 is_stmt 0 view .LVU299
 863 0032 FFF7FEFF 		bl	HAL_TIM_Base_Init
 864              	.LVL42:
 418:Core/Src/main.c ****   {
 865              		.loc 1 418 6 view .LVU300
 866 0036 90B9     		cbnz	r0, .L58
 422:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 867              		.loc 1 422 3 is_stmt 1 view .LVU301
 422:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 868              		.loc 1 422 34 is_stmt 0 view .LVU302
 869 0038 4FF48053 		mov	r3, #4096
 870 003c 0493     		str	r3, [sp, #16]
 423:Core/Src/main.c ****   {
 871              		.loc 1 423 3 is_stmt 1 view .LVU303
 423:Core/Src/main.c ****   {
 872              		.loc 1 423 7 is_stmt 0 view .LVU304
ARM GAS  /tmp/ccETXAHu.s 			page 41


 873 003e 04A9     		add	r1, sp, #16
 874 0040 0A48     		ldr	r0, .L61
 875 0042 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 876              	.LVL43:
 423:Core/Src/main.c ****   {
 877              		.loc 1 423 6 view .LVU305
 878 0046 60B9     		cbnz	r0, .L59
 427:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 879              		.loc 1 427 3 is_stmt 1 view .LVU306
 427:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 880              		.loc 1 427 37 is_stmt 0 view .LVU307
 881 0048 0023     		movs	r3, #0
 882 004a 0193     		str	r3, [sp, #4]
 428:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 883              		.loc 1 428 3 is_stmt 1 view .LVU308
 428:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 884              		.loc 1 428 33 is_stmt 0 view .LVU309
 885 004c 0393     		str	r3, [sp, #12]
 429:Core/Src/main.c ****   {
 886              		.loc 1 429 3 is_stmt 1 view .LVU310
 429:Core/Src/main.c ****   {
 887              		.loc 1 429 7 is_stmt 0 view .LVU311
 888 004e 01A9     		add	r1, sp, #4
 889 0050 0648     		ldr	r0, .L61
 890 0052 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 891              	.LVL44:
 429:Core/Src/main.c ****   {
 892              		.loc 1 429 6 view .LVU312
 893 0056 30B9     		cbnz	r0, .L60
 437:Core/Src/main.c **** 
 894              		.loc 1 437 1 view .LVU313
 895 0058 09B0     		add	sp, sp, #36
 896              	.LCFI12:
 897              		.cfi_remember_state
 898              		.cfi_def_cfa_offset 4
 899              		@ sp needed
 900 005a 5DF804FB 		ldr	pc, [sp], #4
 901              	.L58:
 902              	.LCFI13:
 903              		.cfi_restore_state
 420:Core/Src/main.c ****   }
 904              		.loc 1 420 5 is_stmt 1 view .LVU314
 905 005e FFF7FEFF 		bl	Error_Handler
 906              	.LVL45:
 907              	.L59:
 425:Core/Src/main.c ****   }
 908              		.loc 1 425 5 view .LVU315
 909 0062 FFF7FEFF 		bl	Error_Handler
 910              	.LVL46:
 911              	.L60:
 431:Core/Src/main.c ****   }
 912              		.loc 1 431 5 view .LVU316
 913 0066 FFF7FEFF 		bl	Error_Handler
 914              	.LVL47:
 915              	.L62:
 916 006a 00BF     		.align	2
 917              	.L61:
ARM GAS  /tmp/ccETXAHu.s 			page 42


 918 006c 00000000 		.word	.LANCHOR4
 919              		.cfi_endproc
 920              	.LFE978:
 922              		.section	.text.SystemClock_Config,"ax",%progbits
 923              		.align	1
 924              		.global	SystemClock_Config
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu softvfp
 930              	SystemClock_Config:
 931              	.LFB973:
 129:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 932              		.loc 1 129 1 view -0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 104
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936 0000 00B5     		push	{lr}
 937              	.LCFI14:
 938              		.cfi_def_cfa_offset 4
 939              		.cfi_offset 14, -4
 940 0002 9BB0     		sub	sp, sp, #108
 941              	.LCFI15:
 942              		.cfi_def_cfa_offset 112
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 943              		.loc 1 130 3 view .LVU318
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 944              		.loc 1 130 22 is_stmt 0 view .LVU319
 945 0004 4822     		movs	r2, #72
 946 0006 0021     		movs	r1, #0
 947 0008 08A8     		add	r0, sp, #32
 948 000a FFF7FEFF 		bl	memset
 949              	.LVL48:
 131:Core/Src/main.c **** 
 950              		.loc 1 131 3 is_stmt 1 view .LVU320
 131:Core/Src/main.c **** 
 951              		.loc 1 131 22 is_stmt 0 view .LVU321
 952 000e 0023     		movs	r3, #0
 953 0010 0193     		str	r3, [sp, #4]
 954 0012 0293     		str	r3, [sp, #8]
 955 0014 0393     		str	r3, [sp, #12]
 956 0016 0493     		str	r3, [sp, #16]
 957 0018 0593     		str	r3, [sp, #20]
 958 001a 0693     		str	r3, [sp, #24]
 959 001c 0793     		str	r3, [sp, #28]
 135:Core/Src/main.c **** 
 960              		.loc 1 135 3 is_stmt 1 view .LVU322
 961              	.LBB14:
 135:Core/Src/main.c **** 
 962              		.loc 1 135 3 view .LVU323
 135:Core/Src/main.c **** 
 963              		.loc 1 135 3 view .LVU324
 964 001e 1849     		ldr	r1, .L69
 965 0020 0A68     		ldr	r2, [r1]
 966 0022 22F4C062 		bic	r2, r2, #1536
 967 0026 42F40072 		orr	r2, r2, #512
 968 002a 0A60     		str	r2, [r1]
ARM GAS  /tmp/ccETXAHu.s 			page 43


 135:Core/Src/main.c **** 
 969              		.loc 1 135 3 view .LVU325
 970 002c 0A68     		ldr	r2, [r1]
 971 002e 02F4C062 		and	r2, r2, #1536
 972 0032 0092     		str	r2, [sp]
 135:Core/Src/main.c **** 
 973              		.loc 1 135 3 view .LVU326
 974 0034 009A     		ldr	r2, [sp]
 975              	.LBE14:
 135:Core/Src/main.c **** 
 976              		.loc 1 135 3 view .LVU327
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 977              		.loc 1 139 3 view .LVU328
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 978              		.loc 1 139 36 is_stmt 0 view .LVU329
 979 0036 2222     		movs	r2, #34
 980 0038 0892     		str	r2, [sp, #32]
 140:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 981              		.loc 1 140 3 is_stmt 1 view .LVU330
 140:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 982              		.loc 1 140 30 is_stmt 0 view .LVU331
 983 003a 4FF48072 		mov	r2, #256
 984 003e 0C92     		str	r2, [sp, #48]
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 985              		.loc 1 141 3 is_stmt 1 view .LVU332
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 986              		.loc 1 141 30 is_stmt 0 view .LVU333
 987 0040 0122     		movs	r2, #1
 988 0042 1092     		str	r2, [sp, #64]
 142:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 989              		.loc 1 142 3 is_stmt 1 view .LVU334
 142:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 990              		.loc 1 142 41 is_stmt 0 view .LVU335
 991 0044 4022     		movs	r2, #64
 992 0046 0D92     		str	r2, [sp, #52]
 143:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_11;
 993              		.loc 1 143 3 is_stmt 1 view .LVU336
 143:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_11;
 994              		.loc 1 143 41 is_stmt 0 view .LVU337
 995 0048 1193     		str	r3, [sp, #68]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 996              		.loc 1 144 3 is_stmt 1 view .LVU338
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 997              		.loc 1 144 35 is_stmt 0 view .LVU339
 998 004a B022     		movs	r2, #176
 999 004c 1292     		str	r2, [sp, #72]
 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1000              		.loc 1 145 3 is_stmt 1 view .LVU340
 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1001              		.loc 1 145 34 is_stmt 0 view .LVU341
 1002 004e 1393     		str	r3, [sp, #76]
 146:Core/Src/main.c ****   {
 1003              		.loc 1 146 3 is_stmt 1 view .LVU342
 146:Core/Src/main.c ****   {
 1004              		.loc 1 146 7 is_stmt 0 view .LVU343
 1005 0050 08A8     		add	r0, sp, #32
 1006 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  /tmp/ccETXAHu.s 			page 44


 1007              	.LVL49:
 146:Core/Src/main.c ****   {
 1008              		.loc 1 146 6 view .LVU344
 1009 0056 78B9     		cbnz	r0, .L67
 153:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 1010              		.loc 1 153 3 is_stmt 1 view .LVU345
 153:Core/Src/main.c ****                               |RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1
 1011              		.loc 1 153 31 is_stmt 0 view .LVU346
 1012 0058 4F23     		movs	r3, #79
 1013 005a 0193     		str	r3, [sp, #4]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1014              		.loc 1 156 3 is_stmt 1 view .LVU347
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1015              		.loc 1 156 34 is_stmt 0 view .LVU348
 1016 005c 0023     		movs	r3, #0
 1017 005e 0293     		str	r3, [sp, #8]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1018              		.loc 1 157 3 is_stmt 1 view .LVU349
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1019              		.loc 1 157 35 is_stmt 0 view .LVU350
 1020 0060 0393     		str	r3, [sp, #12]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1021              		.loc 1 158 3 is_stmt 1 view .LVU351
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1022              		.loc 1 158 36 is_stmt 0 view .LVU352
 1023 0062 0493     		str	r3, [sp, #16]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 1024              		.loc 1 159 3 is_stmt 1 view .LVU353
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLK3Divider = RCC_SYSCLK_DIV1;
 1025              		.loc 1 159 36 is_stmt 0 view .LVU354
 1026 0064 0593     		str	r3, [sp, #20]
 160:Core/Src/main.c **** 
 1027              		.loc 1 160 3 is_stmt 1 view .LVU355
 160:Core/Src/main.c **** 
 1028              		.loc 1 160 36 is_stmt 0 view .LVU356
 1029 0066 0793     		str	r3, [sp, #28]
 162:Core/Src/main.c ****   {
 1030              		.loc 1 162 3 is_stmt 1 view .LVU357
 162:Core/Src/main.c ****   {
 1031              		.loc 1 162 7 is_stmt 0 view .LVU358
 1032 0068 0221     		movs	r1, #2
 1033 006a 01A8     		add	r0, sp, #4
 1034 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1035              	.LVL50:
 162:Core/Src/main.c ****   {
 1036              		.loc 1 162 6 view .LVU359
 1037 0070 20B9     		cbnz	r0, .L68
 166:Core/Src/main.c **** 
 1038              		.loc 1 166 1 view .LVU360
 1039 0072 1BB0     		add	sp, sp, #108
 1040              	.LCFI16:
 1041              		.cfi_remember_state
 1042              		.cfi_def_cfa_offset 4
 1043              		@ sp needed
 1044 0074 5DF804FB 		ldr	pc, [sp], #4
 1045              	.L67:
 1046              	.LCFI17:
ARM GAS  /tmp/ccETXAHu.s 			page 45


 1047              		.cfi_restore_state
 148:Core/Src/main.c ****   }
 1048              		.loc 1 148 5 is_stmt 1 view .LVU361
 1049 0078 FFF7FEFF 		bl	Error_Handler
 1050              	.LVL51:
 1051              	.L68:
 164:Core/Src/main.c ****   }
 1052              		.loc 1 164 5 view .LVU362
 1053 007c FFF7FEFF 		bl	Error_Handler
 1054              	.LVL52:
 1055              	.L70:
 1056              		.align	2
 1057              	.L69:
 1058 0080 00040058 		.word	1476396032
 1059              		.cfi_endproc
 1060              	.LFE973:
 1062              		.section	.text.main,"ax",%progbits
 1063              		.align	1
 1064              		.global	main
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1068              		.fpu softvfp
 1070              	main:
 1071              	.LFB972:
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1072              		.loc 1 78 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076 0000 10B5     		push	{r4, lr}
 1077              	.LCFI18:
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 4, -8
 1080              		.cfi_offset 14, -4
  86:Core/Src/main.c **** 
 1081              		.loc 1 86 3 view .LVU364
 1082 0002 FFF7FEFF 		bl	HAL_Init
 1083              	.LVL53:
  93:Core/Src/main.c **** 
 1084              		.loc 1 93 3 view .LVU365
 1085 0006 FFF7FEFF 		bl	SystemClock_Config
 1086              	.LVL54:
 100:Core/Src/main.c ****   MX_USART1_UART_Init();
 1087              		.loc 1 100 3 view .LVU366
 1088 000a FFF7FEFF 		bl	MX_GPIO_Init
 1089              	.LVL55:
 101:Core/Src/main.c ****   MX_ADC_Init();
 1090              		.loc 1 101 3 view .LVU367
 1091 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 1092              	.LVL56:
 102:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 1093              		.loc 1 102 3 view .LVU368
 1094 0012 FFF7FEFF 		bl	MX_ADC_Init
 1095              	.LVL57:
 103:Core/Src/main.c ****   MX_TIM1_Init();
 1096              		.loc 1 103 3 view .LVU369
ARM GAS  /tmp/ccETXAHu.s 			page 46


 1097 0016 FFF7FEFF 		bl	MX_LPUART1_UART_Init
 1098              	.LVL58:
 104:Core/Src/main.c ****   MX_TIM2_Init();
 1099              		.loc 1 104 3 view .LVU370
 1100 001a FFF7FEFF 		bl	MX_TIM1_Init
 1101              	.LVL59:
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1102              		.loc 1 105 3 view .LVU371
 1103 001e FFF7FEFF 		bl	MX_TIM2_Init
 1104              	.LVL60:
 1105 0022 0AE0     		b	.L74
 1106              	.LVL61:
 1107              	.L73:
 1108              	.LBB15:
 118:Core/Src/main.c **** 	  };
 1109              		.loc 1 118 4 discriminator 3 view .LVU372
 1110 0024 4FF47A73 		mov	r3, #1000
 1111 0028 0122     		movs	r2, #1
 1112 002a 0549     		ldr	r1, .L76
 1113 002c 2144     		add	r1, r1, r4
 1114 002e 0548     		ldr	r0, .L76+4
 1115 0030 FFF7FEFF 		bl	HAL_UART_Transmit
 1116              	.LVL62:
 117:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart1, &dummymsg[i], 1, 1000);
 1117              		.loc 1 117 25 discriminator 3 view .LVU373
 117:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart1, &dummymsg[i], 1, 1000);
 1118              		.loc 1 117 26 is_stmt 0 discriminator 3 view .LVU374
 1119 0034 0134     		adds	r4, r4, #1
 1120              	.LVL63:
 1121              	.L72:
 117:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart1, &dummymsg[i], 1, 1000);
 1122              		.loc 1 117 19 is_stmt 1 discriminator 1 view .LVU375
 117:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart1, &dummymsg[i], 1, 1000);
 1123              		.loc 1 117 5 is_stmt 0 discriminator 1 view .LVU376
 1124 0036 102C     		cmp	r4, #16
 1125 0038 F4DD     		ble	.L73
 1126              	.LVL64:
 1127              	.L74:
 117:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart1, &dummymsg[i], 1, 1000);
 1128              		.loc 1 117 5 discriminator 1 view .LVU377
 1129              	.LBE15:
 112:Core/Src/main.c ****   {
 1130              		.loc 1 112 3 is_stmt 1 view .LVU378
 117:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart1, &dummymsg[i], 1, 1000);
 1131              		.loc 1 117 5 view .LVU379
 1132              	.LBB16:
 117:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart1, &dummymsg[i], 1, 1000);
 1133              		.loc 1 117 10 view .LVU380
 117:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart1, &dummymsg[i], 1, 1000);
 1134              		.loc 1 117 14 is_stmt 0 view .LVU381
 1135 003a 0024     		movs	r4, #0
 117:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart1, &dummymsg[i], 1, 1000);
 1136              		.loc 1 117 5 view .LVU382
 1137 003c FBE7     		b	.L72
 1138              	.L77:
 1139 003e 00BF     		.align	2
 1140              	.L76:
ARM GAS  /tmp/ccETXAHu.s 			page 47


 1141 0040 00000000 		.word	.LANCHOR5
 1142 0044 00000000 		.word	.LANCHOR0
 1143              	.LBE16:
 1144              		.cfi_endproc
 1145              	.LFE972:
 1147              		.global	dummymsg
 1148              		.global	htim2
 1149              		.global	htim1
 1150              		.global	huart1
 1151              		.global	hlpuart1
 1152              		.global	hadc
 1153              		.section	.bss.hadc,"aw",%nobits
 1154              		.align	2
 1155              		.set	.LANCHOR1,. + 0
 1158              	hadc:
 1159 0000 00000000 		.space	100
 1159      00000000 
 1159      00000000 
 1159      00000000 
 1159      00000000 
 1160              		.section	.bss.hlpuart1,"aw",%nobits
 1161              		.align	2
 1162              		.set	.LANCHOR2,. + 0
 1165              	hlpuart1:
 1166 0000 00000000 		.space	144
 1166      00000000 
 1166      00000000 
 1166      00000000 
 1166      00000000 
 1167              		.section	.bss.htim1,"aw",%nobits
 1168              		.align	2
 1169              		.set	.LANCHOR3,. + 0
 1172              	htim1:
 1173 0000 00000000 		.space	76
 1173      00000000 
 1173      00000000 
 1173      00000000 
 1173      00000000 
 1174              		.section	.bss.htim2,"aw",%nobits
 1175              		.align	2
 1176              		.set	.LANCHOR4,. + 0
 1179              	htim2:
 1180 0000 00000000 		.space	76
 1180      00000000 
 1180      00000000 
 1180      00000000 
 1180      00000000 
 1181              		.section	.bss.huart1,"aw",%nobits
 1182              		.align	2
 1183              		.set	.LANCHOR0,. + 0
 1186              	huart1:
 1187 0000 00000000 		.space	144
 1187      00000000 
 1187      00000000 
 1187      00000000 
 1187      00000000 
 1188              		.section	.data.dummymsg,"aw"
ARM GAS  /tmp/ccETXAHu.s 			page 48


 1189              		.align	2
 1190              		.set	.LANCHOR5,. + 0
 1193              	dummymsg:
 1194 0000 64756D6D 		.ascii	"dummymessage \012\015\000"
 1194      796D6573 
 1194      73616765 
 1194      200A0D00 
 1195              		.text
 1196              	.Letext0:
 1197              		.file 4 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 1198              		.file 5 "/home/eatkinso/Downloads/gcc-arm-none-eabi-10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07/ar
 1199              		.file 6 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wl55xx.h"
 1200              		.file 7 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wlxx.h"
 1201              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 1202              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_dma.h"
 1203              		.file 10 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_adc.h"
 1204              		.file 11 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_gpio.h"
 1205              		.file 12 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_rcc.h"
 1206              		.file 13 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_tim.h"
 1207              		.file 14 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_uart.h"
 1208              		.file 15 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 1209              		.file 16 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_tim_ex.h"
 1210              		.file 17 "Core/Inc/main.h"
 1211              		.file 18 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_uart_ex.h"
 1212              		.file 19 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal.h"
 1213              		.file 20 "<built-in>"
ARM GAS  /tmp/ccETXAHu.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccETXAHu.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccETXAHu.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccETXAHu.s:181    .text.MX_GPIO_Init:00000000000000ac $d
     /tmp/ccETXAHu.s:186    .text.Error_Handler:0000000000000000 $t
     /tmp/ccETXAHu.s:193    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccETXAHu.s:225    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccETXAHu.s:231    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccETXAHu.s:336    .text.MX_USART1_UART_Init:0000000000000064 $d
     /tmp/ccETXAHu.s:342    .text.MX_ADC_Init:0000000000000000 $t
     /tmp/ccETXAHu.s:348    .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
     /tmp/ccETXAHu.s:438    .text.MX_ADC_Init:000000000000004c $d
     /tmp/ccETXAHu.s:444    .text.MX_LPUART1_UART_Init:0000000000000000 $t
     /tmp/ccETXAHu.s:450    .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
     /tmp/ccETXAHu.s:554    .text.MX_LPUART1_UART_Init:0000000000000060 $d
     /tmp/ccETXAHu.s:560    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccETXAHu.s:566    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccETXAHu.s:801    .text.MX_TIM1_Init:00000000000000ec $d
     /tmp/ccETXAHu.s:807    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccETXAHu.s:813    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccETXAHu.s:918    .text.MX_TIM2_Init:000000000000006c $d
     /tmp/ccETXAHu.s:923    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccETXAHu.s:930    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccETXAHu.s:1058   .text.SystemClock_Config:0000000000000080 $d
     /tmp/ccETXAHu.s:1063   .text.main:0000000000000000 $t
     /tmp/ccETXAHu.s:1070   .text.main:0000000000000000 main
     /tmp/ccETXAHu.s:1141   .text.main:0000000000000040 $d
     /tmp/ccETXAHu.s:1193   .data.dummymsg:0000000000000000 dummymsg
     /tmp/ccETXAHu.s:1179   .bss.htim2:0000000000000000 htim2
     /tmp/ccETXAHu.s:1172   .bss.htim1:0000000000000000 htim1
     /tmp/ccETXAHu.s:1186   .bss.huart1:0000000000000000 huart1
     /tmp/ccETXAHu.s:1165   .bss.hlpuart1:0000000000000000 hlpuart1
     /tmp/ccETXAHu.s:1158   .bss.hadc:0000000000000000 hadc
     /tmp/ccETXAHu.s:1154   .bss.hadc:0000000000000000 $d
     /tmp/ccETXAHu.s:1161   .bss.hlpuart1:0000000000000000 $d
     /tmp/ccETXAHu.s:1168   .bss.htim1:0000000000000000 $d
     /tmp/ccETXAHu.s:1175   .bss.htim2:0000000000000000 $d
     /tmp/ccETXAHu.s:1182   .bss.huart1:0000000000000000 $d
     /tmp/ccETXAHu.s:1189   .data.dummymsg:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_EnableFifoMode
HAL_ADC_Init
HAL_UARTEx_DisableFifoMode
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
ARM GAS  /tmp/ccETXAHu.s 			page 50


HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_UART_Transmit
